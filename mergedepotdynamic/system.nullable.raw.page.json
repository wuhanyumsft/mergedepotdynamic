{"content":"    \r\n    <h1 id=\"System_Nullable\">\r\n      <span class=\"lang-csharp\">Nullable</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Supports a value type that can be assigned <code>null</code>. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic static class Nullable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Nullable</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A type is said to be nullable if it can be assigned a value or can be assigned <code>null</code>, which means the type has no value whatsoever. By default, all reference types, such as <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, are nullable, but all value types, such as <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>, are not.  </p>\n<p> In C# and Visual Basic, you mark a value type as nullable by using the <code>?</code> notation after the value type. For example, <code>int?</code> in C# or <code>Integer?</code> in Visual Basic declares an integer value type that can be assigned <code>null</code>.  </p>\n<p> The Nullable class provides complementary support for the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> structure. The Nullable class supports obtaining the underlying type of a nullable type, and comparison and equality operations on pairs of nullable types whose underlying value type does not support generic comparison and equality operations.  </p>\n<h2 id=\"boxing-and-unboxing\">Boxing and Unboxing</h2>\n<p> When a nullable type is boxed, the common language runtime automatically boxes the underlying value of the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object, not the <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> object itself. That is, if the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_HasValue_\" data-linktype=\"relative-path\">HasValue</a> property is <code>true</code>, the contents of the <a class=\"xref\" href=\"system.nullable-1#System_Nullable_1_Value_\" data-linktype=\"relative-path\">Value</a> property is boxed. If the <code>HasValue</code> property is <code>false</code>, <code>null</code> is boxed. When the underlying value of a nullable type is unboxed, the common language runtime creates a new <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> structure initialized to the underlying value.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_Compare__1_System_Nullable___0__System_Nullable___0__\" data-linktype=\"self-bookmark\">Compare&lt;T&gt;(Nullable&lt;T&gt;,Nullable&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares the relative values of two <span class=\"xref\">stem.Nullable`1</span> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_Equals__1_System_Nullable___0__System_Nullable___0__\" data-linktype=\"self-bookmark\">Equals&lt;T&gt;(Nullable&lt;T&gt;,Nullable&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether two specified <span class=\"xref\">stem.Nullable`1</span> objects are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Nullable_GetUnderlyingType_System_Type_\" data-linktype=\"self-bookmark\">GetUnderlyingType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the underlying type argument of the specified nullable type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_Compare__1_System_Nullable___0__System_Nullable___0__\">\r\n    \r\n            <a id=\"System_Nullable_Compare_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare&lt;T&gt;(Nullable&lt;T&gt;,Nullable&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Compares the relative values of two <span class=\"xref\">stem.Nullable`1</span> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Compare&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>n1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>n2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer that indicates the relative values of the <code>n1</code> and <code>n2</code> parameters.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n1</code> is <code>false</code>, and the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n2</code> is <code>true</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n1</code> is less than the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n2</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>false</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n1</code> is equal to the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n2</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n1</code> is <code>true</code>, and the <span class=\"xref\">stem.Nullable`1.HasValue*</span> property for <code>n2</code> is <code>false</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n1</code> is greater than the value of the <span class=\"xref\">stem.Nullable`1.Value*</span> property for <code>n2</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_Equals__1_System_Nullable___0__System_Nullable___0__\">\r\n    \r\n            <a id=\"System_Nullable_Equals_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals&lt;T&gt;(Nullable&lt;T&gt;,Nullable&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether two specified <span class=\"xref\">stem.Nullable`1</span> objects are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Equals&lt;T&gt; (Nullable&lt;T&gt; n1, Nullable&lt;T&gt; n2) where T : struct;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>n1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>n2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <span class=\"xref\">stem.Nullable`1</span> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>n1</code> parameter is equal to the <code>n2</code> parameter; otherwise, <code>false</code>.  </p>\n<p> The return value depends on the <span class=\"xref\">stem.Nullable`1.HasValue*</span> and <span class=\"xref\">stem.Nullable`1.Value*</span> properties of the two parameters that are compared.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td><code>true</code></td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>false</code>.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the <span class=\"xref\">stem.Nullable`1.Value*</span> properties of the parameters are equal.<br>\n </td></tr><tr><td><code>false</code></td><td> The <span class=\"xref\">stem.Nullable`1.HasValue*</span> property is <code>true</code> for one parameter and <code>false</code> for the other parameter.<br>\n -or-<br>\n The <span class=\"xref\">stem.Nullable`1.HasValue*</span> properties for <code>n1</code> and <code>n2</code> are <code>true</code>, and the <span class=\"xref\">stem.Nullable`1.Value*</span> properties of the parameters are unequal.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Nullable_GetUnderlyingType_System_Type_\">\r\n    \r\n            <a id=\"System_Nullable_GetUnderlyingType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUnderlyingType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the underlying type argument of the specified nullable type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Type GetUnderlyingType (Type nullableType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nullableType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object that describes a closed generic nullable type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type argument of the <code>nullableType</code> parameter, if the <code>nullableType</code> parameter is a closed generic nullable type; otherwise, <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>nullableType</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A generic type definition is a type declaration, such as <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a>, that contains a type parameter list, and the type parameter list declares one or more type parameters. A closed generic type is a type declaration where a particular type is specified for a type parameter.  </p>\n<p> For example, if the <code>nullableType</code> parameter is the type of <code>Nullable&lt;Int32&gt;</code> in C# (<code>Nullable(Of Int32)</code> in Visual Basic), the return value is the type of <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> (that is, the type argument of the closed generic type).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example defines a method whose return value is of type <a class=\"xref\" href=\"system.nullable-1\" data-linktype=\"relative-path\">Nullable&lt;T&gt;</a> of <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>. The code example uses the GetUnderlyingType method to display the type argument of the return value.  </p>\n<pre><code class=\"lang-cs\" name=\"system.nullable_GetUnderlyingType#1\">// This code example demonstrates the \n// Nullable.GetUnderlyingType() method.\n\nusing System;\nusing System.Reflection;\n\nclass Sample \n{\n// Declare a type named Example. \n// The MyMethod member of Example returns a Nullable of Int32.\n\n    public class Example\n    {\n        public int? MyMethod() \n        {\n        return 0;\n        }\n    }\n    \n/* \n   Use reflection to obtain a Type object for the Example type.\n   Use the Type object to obtain a MethodInfo object for the MyMethod method.\n   Use the MethodInfo object to obtain the type of the return value of \n     MyMethod, which is Nullable of Int32.\n   Use the GetUnderlyingType method to obtain the type argument of the \n     return value type, which is Int32.\n*/   \n    public static void Main() \n    {\n        Type t = typeof(Example);\n        MethodInfo mi = t.GetMethod(&quot;MyMethod&quot;);\n        Type retval = mi.ReturnType;\n        Console.WriteLine(&quot;Return value type ... {0}&quot;, retval);\n        Type answer = Nullable.GetUnderlyingType(retval);\n        Console.WriteLine(&quot;Underlying type ..... {0}&quot;, answer);\n    }\n}\n/*\nThis code example produces the following results:\n\nReturn value type ... System.Nullable`1[System.Int32]\nUnderlying type ..... System.Int32\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"system.nullable_GetUnderlyingType#1\">&#39; This code example demonstrates the \n&#39; Nullable.GetUnderlyingType() method.\n\nImports System\nImports System.Reflection\n\nClass Sample\n    &#39; Declare a type named Example. \n    &#39; The MyMethod member of Example returns a Nullable of Int32.\n    \n    Public Class Example\n        Public Function MyMethod() As Nullable(Of Integer)\n            Return 0\n        End Function\n    End Class &#39;Example\n    \n&#39; \n&#39;   Use reflection to obtain a Type object for the Example type.\n&#39;   Use the Type object to obtain a MethodInfo object for the MyMethod method.\n&#39;   Use the MethodInfo object to obtain the type of the return value of \n&#39;     MyMethod, which is Nullable of Int32.\n&#39;   Use the GetUnderlyingType method to obtain the type argument of the \n&#39;     return value type, which is Int32.\n&#39;\n    Public Shared Sub Main() \n        Dim t As Type = GetType(Example)\n        Dim mi As MethodInfo = t.GetMethod(&quot;MyMethod&quot;)\n        Dim retval As Type = mi.ReturnType\n        Console.WriteLine(&quot;Return value type ... {0}&quot;, retval)\n        Dim answer As Type = Nullable.GetUnderlyingType(retval)\n        Console.WriteLine(&quot;Underlying type ..... {0}&quot;, answer)\n    \n    End Sub &#39;Main\nEnd Class &#39;Sample\n&#39;\n&#39;This code example produces the following results:\n&#39;\n&#39;Return value type ... System.Nullable`1[System.Int32]\n&#39;Underlying type ..... System.Int32\n&#39;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Nullable.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Nullable.yml\">\r\n<meta name=\"APIName\" content=\"System.Nullable\">\r\n<meta name=\"APIName\" content=\"System.Nullable.Compare&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Nullable.Equals&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Nullable.GetUnderlyingType\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5375af30-508a-bc41-9505-d32b76e6a2ba\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System\\Nullable.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Supports a value type that can be assigned null. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Nullable\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Nullable.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Nullable.yml","open_to_public_contributors":true,"api_name":["System.Nullable","System.Nullable.Compare<T>","System.Nullable.Equals<T>","System.Nullable.GetUnderlyingType"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Nullable","System::Nullable","System.Nullable.Compare``1","System::Nullable::Compare``1","System.Nullable.Equals``1","System::Nullable::Equals``1","System.Nullable.GetUnderlyingType","System::Nullable::GetUnderlyingType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5375af30-508a-bc41-9505-d32b76e6a2ba","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System\\Nullable.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/Nullable.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Nullable class | Microsoft Docs","_op_ogTitle":"Nullable class","description":"Supports a value type that can be assigned null. This class cannot be inherited.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Nullable","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.nullable","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.nullable","fileRelativePath":"System.Nullable.html"},"themesRelativePathToOutputRoot":"_themes/"}