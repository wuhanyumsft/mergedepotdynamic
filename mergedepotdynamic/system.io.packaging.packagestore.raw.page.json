{"content":"    \r\n    <h1 id=\"System_IO_Packaging_PackageStore\">\r\n      <span class=\"lang-csharp\">PackageStore</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of application-specific <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> instances used in combination with <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\npublic static class PackageStore</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PackageStore</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The PackageStore defines a reference collections of package that are open and active in the application.  Packages added to the PackageStore are accessed is by their key URI value.  The PackageStore supports three common uses:  </p>\n<ol>\n<li><p>Accessing <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> data through <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a>.  </p>\n</li>\n<li><p>The application obtaining an instance of a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> given the package&#39;s URI.  </p>\n</li>\n<li><p>Accessing packages that are created and stored in a <a class=\"xref\" href=\"system.io.memorystream\" data-linktype=\"relative-path\">MemoryStream</a>.  </p>\n<p>To improve performance and minimize the overhead of repeated file open/close operations, the PackageStore is used to manage instances of packages accessed by <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a> and directly by the application.  When accessing data in a package, the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> address of a requested <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_Uri_\" data-linktype=\"relative-path\">Uri</a> is first checked to see if the package is already defined and open in the PackageStore.  If the package is defined as open in the PackageStore, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.  </p>\n<p>If your application opens a package with <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Open_\" data-linktype=\"relative-path\">Open</a>, <a class=\"xref\" href=\"system.io.packaging.packagestore#System_IO_Packaging_PackageStore_AddPackage_\" data-linktype=\"relative-path\">AddPackage</a> can be called to add the package to the PackageStore.  <a class=\"xref\" href=\"system.io.packaging.packagestore#System_IO_Packaging_PackageStore_RemovePackage_\" data-linktype=\"relative-path\">RemovePackage</a> should later be called to remove the package from the PackageStore prior to calling <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Close_\" data-linktype=\"relative-path\">Close</a>.  </p>\n<p>XPS packages opened with an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument#System_Windows_Xps_Packaging_XpsDocument__ctor_\" data-linktype=\"relative-path\">XpsDocument</a> constructor are automatically added and removed from the PackageStore when the document is created and disposed.  (You do not need to call <a class=\"xref\" href=\"system.io.packaging.packagestore#System_IO_Packaging_PackageStore_AddPackage_\" data-linktype=\"relative-path\">AddPackage</a> or <a class=\"xref\" href=\"system.io.packaging.packagestore#System_IO_Packaging_PackageStore_RemovePackage_\" data-linktype=\"relative-path\">RemovePackage</a> separately for XPS packages opened with <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument#System_Windows_Xps_Packaging_XpsDocument__ctor_\" data-linktype=\"relative-path\">XpsDocument</a> constructors.)  </p>\n<p>The file I/O permissions of a package accessed through the PackageStore remains the same as the I/O permissions set on the package when it is opened.  The PackageStore only provides references to the packages that have been added the store.  It is up to the application to correctly open, update, and close each package.  </p>\n<p>Packages added to the PackageStore can be accessed in multithreaded environments when they are used in combination with a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE --> parser such as <a class=\"xref\" href=\"system.windows.markup.xamlreader#System_Windows_Markup_XamlReader_Load_\" data-linktype=\"relative-path\">Load</a>.  When operating in a multithreaded environment, the application must lock the package before access.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageStore_AddPackage_System_Uri_System_IO_Packaging_Package_\" data-linktype=\"self-bookmark\">AddPackage(Uri,Package)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to the store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageStore_GetPackage_System_Uri_\" data-linktype=\"self-bookmark\">GetPackage(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with a specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> from the store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Packaging_PackageStore_RemovePackage_System_Uri_\" data-linktype=\"self-bookmark\">RemovePackage(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with a specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> from the store.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageStore_AddPackage_System_Uri_System_IO_Packaging_Package_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageStore_AddPackage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPackage(Uri,Package)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> to the store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddPackage (Uri uri, System.IO.Packaging.Package package);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> of the <code>package</code> to compare in a <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>package</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The package to add to the store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>package</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>packageUri</code> is an invalid package <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A package with the specified <code>packageUri</code> is already in the store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>packageUri</code> defines the package&#39;s key URI that is compared when you call <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a>.  </p>\n<p> If the <code>packageUri</code> matches the <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_Uri_\" data-linktype=\"relative-path\">Uri</a> for a <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> in a <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a> call, the package defined in the <a class=\"xref\" href=\"system.io.packaging.packagestore\" data-linktype=\"relative-path\">PackageStore</a> is used to access the requested part.  </p>\n<p> If the <code>packageUri</code> does not match the <a class=\"xref\" href=\"system.io.packaging.packagepart#System_IO_Packaging_PackagePart_Uri_\" data-linktype=\"relative-path\">Uri</a> for a <a class=\"xref\" href=\"system.io.packaging.packagepart\" data-linktype=\"relative-path\">PackagePart</a> in a <a class=\"xref\" href=\"system.io.packaging.packwebrequest\" data-linktype=\"relative-path\">PackWebRequest</a> call, the package with the specified URI is opened to access the requested part.  </p>\n<p> <strong>Security Note</strong> This method demands <a class=\"xref\" href=\"system.security.permissions.environmentpermission\" data-linktype=\"relative-path\">EnvironmentPermission</a> for all custom <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> (non-<a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a>) types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the AddPackage method.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackageViewer#RmPkgViewDecrypt\">If rmi.CryptoProvider.CanDecrypt = True Then\n\tShowStatus(&quot;   Decryption granted.&quot;)\nElse\n\tShowStatus(&quot;   CANNOT DECRYPT!&quot;)\nEnd If\n\nShowStatus(&quot;   Getting the Package from&quot; &amp; vbLf &amp; &quot;      the EncryptedPackage.&quot;)\n_xpsPackage = ePackage.GetPackage()\nIf _xpsPackage Is Nothing Then\n\tMessageBox.Show(&quot;Unable to get Package.&quot;)\n\tReturn False\nEnd If\n\n&#39; Set a PackageStore Uri reference for the encrypted stream.\n&#39; (&quot;sdk://packLocation&quot; is a pseudo URI used by\n&#39;  PackUriHelper.Create to define the parserContext.BaseURI\n&#39;  that XamlReader uses to access the encrypted data stream.)\nDim packageUri As New Uri(&quot;sdk://packLocation&quot;, UriKind.Absolute)\n&#39; Add the URI package\nPackageStore.AddPackage(packageUri, _xpsPackage)\n&#39; Determine the starting part for the package.\nDim startingPart As PackagePart = GetPackageStartingPart(_xpsPackage)\n\n&#39; Set the DocViewer.Document property.\nShowStatus(&quot;   Opening in DocumentViewer.&quot;)\nDim parserContext As New ParserContext()\nparserContext.BaseUri = PackUriHelper.Create(packageUri, startingPart.Uri)\nparserContext.XamlTypeMapper = XamlTypeMapper.DefaultMapper\n            DocViewerProperty.Document = TryCast(XamlReader.Load(startingPart.GetStream(), parserContext), IDocumentPaginatorSource)\n\n&#39; Enable document menu controls.\nmenuFileClose.IsEnabled = True\nmenuFilePrint.IsEnabled = True\nmenuViewIncreaseZoom.IsEnabled = True\nmenuViewDecreaseZoom.IsEnabled = True\n\n&#39; Give the DocumentViewer focus.\n            DocViewerProperty.Focus()\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackageViewer#RmPkgViewDecrypt\">if (rmi.CryptoProvider.CanDecrypt == true)\n    ShowStatus(&quot;   Decryption granted.&quot;);\nelse\n    ShowStatus(&quot;   CANNOT DECRYPT!&quot;);\n\nShowStatus(&quot;   Getting the Package from<br>&quot; +\n           &quot;      the EncryptedPackage.&quot;);\n_xpsPackage = ePackage.GetPackage();\nif (_xpsPackage == null)\n{\n    MessageBox.Show(&quot;Unable to get Package.&quot;);\n    return false;\n}\n\n// Set a PackageStore Uri reference for the encrypted stream.\n// (&quot;sdk://packLocation&quot; is a pseudo URI used by\n//  PackUriHelper.Create to define the parserContext.BaseURI\n//  that XamlReader uses to access the encrypted data stream.)\nUri packageUri = new Uri(@&quot;sdk://packLocation&quot;, UriKind.Absolute);\n// Add the URI package\nPackageStore.AddPackage(packageUri, _xpsPackage);\n// Determine the starting part for the package.\nPackagePart startingPart = GetPackageStartingPart(_xpsPackage);\n\n// Set the DocViewer.Document property.\nShowStatus(&quot;   Opening in DocumentViewer.&quot;);\nParserContext parserContext = new ParserContext();\nparserContext.BaseUri = PackUriHelper.Create(\n                            packageUri, startingPart.Uri);\nparserContext.XamlTypeMapper = XamlTypeMapper.DefaultMapper;\nDocViewer.Document = XamlReader.Load(\n    startingPart.GetStream(), parserContext)\n        as IDocumentPaginatorSource;\n\n// Enable document menu controls.\nmenuFileClose.IsEnabled = true;\nmenuFilePrint.IsEnabled = true;\nmenuViewIncreaseZoom.IsEnabled = true;\nmenuViewDecreaseZoom.IsEnabled = true;\n\n// Give the DocumentViewer focus.\nDocViewer.Focus();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageStore_GetPackage_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageStore_GetPackage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPackage(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with a specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> from the store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.IO.Packaging.Package GetPackage (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> of the package to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </div>\r\n                  <p>The package with a specified <code>packageUri</code>; or <code>null</code>, if a package with the specified <code>packageUri</code> is not in the store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>packageUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>packageUri</code> is an invalid package <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>packageUri</code> is matched to the URIs specified in the <a class=\"xref\" href=\"system.io.packaging.packagestore#System_IO_Packaging_PackageStore_AddPackage_\" data-linktype=\"relative-path\">AddPackage</a> method call.  </p>\n<p> <strong>Security Note</strong> This method demands <a class=\"xref\" href=\"system.security.permissions.environmentpermission\" data-linktype=\"relative-path\">EnvironmentPermission</a> for all custom <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> (non-<a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a>) types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the GetPackage method.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackageViewer#RmPkgViewOpenDoc\">&#39; --------------------------- OpenDocument ---------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Loads and displays a given XPS document file.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;filename&quot;&gt;\n&#39;&#39;&#39;   The path and file name of the XPS\n&#39;&#39;&#39;   document to load and display.&lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39;   true if the document loads successfully; otherwise false.&lt;/returns&gt;\nPublic Function OpenDocument(ByVal xpsFile As String) As Boolean\n\t&#39; Check to see if the document is encrypted.\n\t&#39; If encrypted, use OpenEncryptedDocument().\n\tIf EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(xpsFile) Then\n\t\tReturn OpenEncryptedDocument(xpsFile)\n\tEnd If\n\n\t&#39; Document is not encrypted, open normally.\n\tShowStatus(&quot;Opening &#39;&quot; &amp; Filename(xpsFile) &amp; &quot;&#39;&quot;)\n\n\t_packageUri = New Uri(xpsFile, UriKind.Absolute)\n\tTry\n\t\t_xpsDocument = New XpsDocument(xpsFile, FileAccess.Read)\n\tCatch ex As System.IO.FileFormatException\n\t\tMessageBox.Show(xpsFile &amp; vbLf &amp; vbLf &amp; &quot;The file &quot; &amp; &quot;is not a valid XPS document.&quot; &amp; vbLf &amp; vbLf &amp; &quot;Exception: &quot; &amp; ex.Message &amp; vbLf &amp; vbLf &amp; ex.GetType().ToString() &amp; vbLf &amp; vbLf &amp; ex.StackTrace, &quot;Invalid File Format&quot;, MessageBoxButton.OK, MessageBoxImage.Error)\n\t\tReturn False\n\tEnd Try\n\n\n\t&#39; Get the document&#39;s PackageStore into which\n\t&#39; new user annotations will be added and saved.\n\t_xpsPackage = PackageStore.GetPackage(_packageUri)\n\tIf (_xpsPackage Is Nothing) OrElse (_xpsDocument Is Nothing) Then\n\t\tMessageBox.Show(&quot;Unable to get Package from file.&quot;)\n\t\tReturn False\n\tEnd If\n\n\t&#39; Get the FixedDocumentSequence from the open document.\n\tDim fds As FixedDocumentSequence = _xpsDocument.GetFixedDocumentSequence()\n\tIf fds Is Nothing Then\n\t\tMessageBox.Show(xpsFile &amp; vbLf &amp; vbLf &amp; &quot;The document package within &quot; &amp; &quot;the specified file does not contain a &quot; &amp; &quot;FixedDocumentSequence.&quot;, &quot;Package Error&quot;)\n\t\tReturn False\n\tEnd If\n\n\t&#39; Load the FixedDocumentSequence to the DocumentViewer control.\n          DocViewerProperty.Document = fds\n\n\t&#39; Enable document menu controls.\n\tmenuFileClose.IsEnabled = True\n\tmenuFilePrint.IsEnabled = True\n\tmenuViewIncreaseZoom.IsEnabled = True\n\tmenuViewDecreaseZoom.IsEnabled = True\n\n\t&#39; Give the DocumentViewer focus.\n\tdocViewer.Focus()\n\n\tMe.Title = &quot;RightsManagedPackageViewer SDK Sample - &quot; &amp; Filename(xpsFile)\n\tReturn True\nEnd Function &#39; end:OpenDocument()\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackageViewer#RmPkgViewOpenDoc\">// --------------------------- OpenDocument ---------------------------\n/// &lt;summary&gt;\n///   Loads and displays a given XPS document file.&lt;/summary&gt;\n/// &lt;param name=&quot;filename&quot;&gt;\n///   The path and file name of the XPS\n///   document to load and display.&lt;/param&gt;\n/// &lt;returns&gt;\n///   true if the document loads successfully; otherwise false.&lt;/returns&gt;\npublic bool OpenDocument(string xpsFile)\n{\n    // Check to see if the document is encrypted.\n    // If encrypted, use OpenEncryptedDocument().\n    if (EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(xpsFile))\n        return OpenEncryptedDocument(xpsFile);\n\n    // Document is not encrypted, open normally.\n    ShowStatus(&quot;Opening &#39;&quot; + Filename(xpsFile) + &quot;&#39;&quot;);\n\n    _packageUri = new Uri(xpsFile, UriKind.Absolute);\n    try\n    {\n        _xpsDocument = new XpsDocument(xpsFile, FileAccess.Read);\n    }\n    catch (System.IO.FileFormatException ex)\n    {\n        MessageBox.Show(xpsFile + &quot;<br><br>The file &quot; +\n            &quot;is not a valid XPS document.<br><br>&quot; +\n            &quot;Exception: &quot; + ex.Message + &quot;<br><br>&quot; +\n            ex.GetType().ToString() + &quot;<br><br>&quot; + ex.StackTrace,\n            &quot;Invalid File Format&quot;,\n            MessageBoxButton.OK, MessageBoxImage.Error);\n        return false;\n    }\n\n\n    // Get the document&#39;s PackageStore into which\n    // new user annotations will be added and saved.\n    _xpsPackage = PackageStore.GetPackage(_packageUri);\n    if ((_xpsPackage == null) || (_xpsDocument == null))\n    {\n        MessageBox.Show(&quot;Unable to get Package from file.&quot;);\n        return false;\n    }\n\n    // Get the FixedDocumentSequence from the open document.\n    FixedDocumentSequence fds = _xpsDocument.GetFixedDocumentSequence();\n    if (fds == null)\n    {\n        MessageBox.Show(xpsFile + &quot;<br><br>The document package within &quot; +\n            &quot;the specified file does not contain a &quot; +\n            &quot;FixedDocumentSequence.&quot;, &quot;Package Error&quot;);\n        return false;\n    }\n\n    // Load the FixedDocumentSequence to the DocumentViewer control.\n    DocViewer.Document = fds;\n\n    // Enable document menu controls.\n    menuFileClose.IsEnabled  = true;\n    menuFilePrint.IsEnabled  = true;\n    menuViewIncreaseZoom.IsEnabled = true;\n    menuViewDecreaseZoom.IsEnabled = true;\n\n    // Give the DocumentViewer focus.\n    docViewer.Focus();\n\n    this.Title = &quot;RightsManagedPackageViewer SDK Sample - &quot; +\n                 Filename(xpsFile);\n    return true;\n}// end:OpenDocument()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Packaging_PackageStore_RemovePackage_System_Uri_\">\r\n    \r\n            <a id=\"System_IO_Packaging_PackageStore_RemovePackage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemovePackage(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with a specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE --> from the store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemovePackage (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> of the package to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>packageUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>packageUri</code> is an invalid package <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uri-md.md&quot; -->URI<!--END INCLUDE -->.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>packageUri</code> is matched to the URIs specified in the <a class=\"xref\" href=\"system.io.packaging.packagestore#System_IO_Packaging_PackageStore_AddPackage_\" data-linktype=\"relative-path\">AddPackage</a> method call.  </p>\n<p> <strong>Security Note</strong> This method demands <a class=\"xref\" href=\"system.security.permissions.environmentpermission\" data-linktype=\"relative-path\">EnvironmentPermission</a> for all custom <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> (non-<a class=\"xref\" href=\"system.io.packaging.zippackage\" data-linktype=\"relative-path\">ZipPackage</a>) types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the RemovePackage method.  </p>\n<pre><code class=\"lang-vb\" name=\"RightsManagedPackageViewer#RmPkgViewCloseDoc\">&#39; --------------------------- CloseDocument --------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Closes the document currently displayed in\n&#39;&#39;&#39;   the DocumentViewer control.&lt;/summary&gt;\nPublic Sub CloseDocument()\n\tIf _xpsFile IsNot Nothing Then\n\t\tShowStatus(&quot;Closing &#39;&quot; &amp; Filename(_xpsFile) &amp; &quot;&#39;&quot;)\n              DocViewerProperty.Document = Nothing\n\t\t_xpsFile = Nothing\n\tEnd If\n\n\t&#39; If the package is open, close it.\n\tIf _xpsPackage IsNot Nothing Then\n\t\t_xpsPackage.Close()\n\t\t_xpsPackage = Nothing\n\tEnd If\n\n\t&#39; The package is closed, remove it from the store.\n\tIf _packageUri IsNot Nothing Then\n\t\tPackageStore.RemovePackage(_packageUri)\n\t\t_packageUri = Nothing\n\tEnd If\n\n\t&#39; Disable document-related selections when there&#39;s no document.\n\tmenuFileClose.IsEnabled = False\n\tmenuFilePrint.IsEnabled = False\n\tmenuViewIncreaseZoom.IsEnabled = False\n\tmenuViewDecreaseZoom.IsEnabled = False\n\tMe.Title = &quot;RightsManagedPackageViewer SDK Sample&quot;\n\tShowPrompt(&quot;Click &#39;File | Open...&#39; to select a file to open and view.&quot;)\n\trightsBlock.Text = &quot;&quot;\n\nEnd Sub &#39; end:CloseDocument\n</code></pre><pre><code class=\"lang-cs\" name=\"RightsManagedPackageViewer#RmPkgViewCloseDoc\">// --------------------------- CloseDocument --------------------------\n/// &lt;summary&gt;\n///   Closes the document currently displayed in\n///   the DocumentViewer control.&lt;/summary&gt;\npublic void CloseDocument()\n{\n    if (_xpsFile != null)\n    {\n        ShowStatus(&quot;Closing &#39;&quot; + Filename(_xpsFile) + &quot;&#39;&quot;);\n        DocViewer.Document = null;\n        _xpsFile = null;\n    }\n\n    // If the package is open, close it.\n    if (_xpsPackage != null)\n    {\n        _xpsPackage.Close();\n        _xpsPackage = null;\n    }\n\n    // The package is closed, remove it from the store.\n    if (_packageUri != null)\n    {\n        PackageStore.RemovePackage(_packageUri);\n        _packageUri = null;\n    }\n\n    // Disable document-related selections when there&#39;s no document.\n    menuFileClose.IsEnabled = false;\n    menuFilePrint.IsEnabled = false;\n    menuViewIncreaseZoom.IsEnabled = false;\n    menuViewDecreaseZoom.IsEnabled = false;\n    this.Title = &quot;RightsManagedPackageViewer SDK Sample&quot;;\n    ShowPrompt(\n        &quot;Click &#39;File | Open...&#39; to select a file to open and view.&quot;);\n    rightsBlock.Text = &quot;&quot;;\n\n}// end:CloseDocument\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Packaging.PackageStore.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Packaging.PackageStore.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageStore\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageStore.AddPackage\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageStore.GetPackage\">\r\n<meta name=\"APIName\" content=\"System.IO.Packaging.PackageStore.RemovePackage\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"38fe5e88-396e-f462-bc51-f9b7f45da8e9\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.IO.Packaging\\PackageStore.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of application-specific  instances used in combination with .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO.Packaging/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.Packaging.PackageStore\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Packaging.PackageStore.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Packaging.PackageStore.yml","open_to_public_contributors":true,"api_name":["System.IO.Packaging.PackageStore","System.IO.Packaging.PackageStore.AddPackage","System.IO.Packaging.PackageStore.GetPackage","System.IO.Packaging.PackageStore.RemovePackage"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.Packaging.PackageStore","System::IO::Packaging::PackageStore","System.IO.Packaging.PackageStore.AddPackage","System::IO::Packaging::PackageStore::AddPackage","System.IO.Packaging.PackageStore.GetPackage","System::IO::Packaging::PackageStore::GetPackage","System.IO.Packaging.PackageStore.RemovePackage","System::IO::Packaging::PackageStore::RemovePackage"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"38fe5e88-396e-f462-bc51-f9b7f45da8e9","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.IO.Packaging\\PackageStore.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO.Packaging/PackageStore.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PackageStore class | Microsoft Docs","_op_ogTitle":"PackageStore class","description":"Represents a collection of application-specific  instances used in combination with .\n","toc_asset_id":"_splitted/System.IO.Packaging/toc.json","toc_rel":"_splitted/System.IO.Packaging/toc.json","source_url":"","ms.assetid":"System.IO.Packaging.PackageStore","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.packaging.packagestore","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.packaging.packagestore","fileRelativePath":"System.IO.Packaging.PackageStore.html"},"themesRelativePathToOutputRoot":"_themes/"}