{"content":"    \r\n    <h1 id=\"System_IO_BufferedStream\">\r\n      <span class=\"lang-csharp\">BufferedStream</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Adds a buffering layer to read and write operations on another stream. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class BufferedStream : System.IO.Stream</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">BufferedStream</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanTimeout\" data-linktype=\"relative-path\">CanTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close\" data-linktype=\"relative-path\">Close()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_\" data-linktype=\"relative-path\">CopyTo(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyTo_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyTo(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_\" data-linktype=\"relative-path\">CopyToAsync(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CopyToAsync_System_IO_Stream_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"relative-path\">CopyToAsync(Stream,Int32,CancellationToken)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CreateWaitHandle\" data-linktype=\"relative-path\">CreateWaitHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_FlushAsync\" data-linktype=\"relative-path\">FlushAsync()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Null\" data-linktype=\"relative-path\">Null</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ObjectInvariant\" data-linktype=\"relative-path\">ObjectInvariant()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ReadAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_ReadTimeout\" data-linktype=\"relative-path\">ReadTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Synchronized_System_IO_Stream_\" data-linktype=\"relative-path\">Synchronized(Stream)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteAsync(Byte[],Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_WriteTimeout\" data-linktype=\"relative-path\">WriteTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A buffer is a block of bytes in memory used to cache data, thereby reducing the number of calls to the operating system. Buffers improve read and write performance. A buffer can be used for either reading or writing, but never both simultaneously. The [Read(Byte&lt;xref:System.IO.BufferedStream.Read%2A&gt; and [Write(Byte&lt;xref:System.IO.BufferedStream.Write%2A&gt; methods of <code>BufferedStream</code> automatically maintain the buffer.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n</div>\n<p> <code>BufferedStream</code> can be composed around certain types of streams. It provides implementations for reading and writing bytes to an underlying data source or repository. Use <a class=\"xref\" href=\"system.io.binaryreader\" data-linktype=\"relative-path\">BinaryReader</a> and <a class=\"xref\" href=\"system.io.binarywriter\" data-linktype=\"relative-path\">BinaryWriter</a> for reading and writing other data types. <code>BufferedStream</code> is designed to prevent the buffer from slowing down input and output when the buffer is not needed. If you always read and write for sizes greater than the internal buffer size, then <code>BufferedStream</code> might not even allocate the internal buffer. <code>BufferedStream</code> also buffers reads and writes in a shared buffer. It is assumed that you will almost always be doing a series of reads or writes, but rarely alternate between the two of them.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream__ctor_System_IO_Stream_\" data-linktype=\"self-bookmark\">BufferedStream(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class with a default buffer size of 4096 bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream__ctor_System_IO_Stream_System_Int32_\" data-linktype=\"self-bookmark\">BufferedStream(Stream,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class with the specified buffer size.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_CanRead\" data-linktype=\"self-bookmark\">CanRead</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current stream supports reading.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_CanSeek\" data-linktype=\"self-bookmark\">CanSeek</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current stream supports seeking.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_CanWrite\" data-linktype=\"self-bookmark\">CanWrite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current stream supports writing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Length\" data-linktype=\"self-bookmark\">Length</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the stream length in bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Position\" data-linktype=\"self-bookmark\">Position</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the position within the current stream.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous read operation. (Consider using <span class=\"xref\">stem.IO.BufferedStream.ReadAsync*</span> instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous write operation. (Consider using <span class=\"xref\">stem.IO.BufferedStream.WriteAsync*</span> instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_EndRead_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndRead(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Waits for the pending asynchronous read operation to complete. (Consider using <span class=\"xref\">stem.IO.BufferedStream.ReadAsync*</span> instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_EndWrite_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndWrite(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends an asynchronous write operation and blocks until the I/O operation is complete. (Consider using <span class=\"xref\">stem.IO.BufferedStream.WriteAsync*</span> instead; see the Remarks section.)</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_FlushAsync_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">FlushAsync(CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Read_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Read(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies bytes from the current buffered stream to an array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">ReadAsync(Byte[],Int32,Int32,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_ReadByte\" data-linktype=\"self-bookmark\">ReadByte()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads a byte from the underlying stream and returns the byte cast to an <code>int</code>, or returns -1 if reading from the end of the stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Seek_System_Int64_System_IO_SeekOrigin_\" data-linktype=\"self-bookmark\">Seek(Int64,SeekOrigin)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the position within the current buffered stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_SetLength_System_Int64_\" data-linktype=\"self-bookmark\">SetLength(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the length of the buffered stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_Write_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">WriteAsync(Byte[],Int32,Int32,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_BufferedStream_WriteByte_System_Byte_\" data-linktype=\"self-bookmark\">WriteByte(Byte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a byte to the current position in the buffered stream.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream__ctor_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BufferedStream(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class with a default buffer size of 4096 bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BufferedStream (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A shared read/write buffer is allocated the first time a <code>BufferedStream</code> object is initialized with this constructor. The shared buffer is not used if all reads and writes are greater than or equal to <code>bufferSize</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream__ctor_System_IO_Stream_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BufferedStream(Stream,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class with the specified buffer size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BufferedStream (System.IO.Stream stream, int bufferSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">System.IO.Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bufferSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer size in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>bufferSize</code> is negative.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A shared read/write buffer is allocated the first time a <code>BufferedStream</code> object is initialized with this constructor. The shared buffer is not used if all reads and writes are greater than or equal to <code>bufferSize</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#2\">        // Create a NetworkStream that owns clientSocket and\n        // then create a BufferedStream on top of the NetworkStream.\n        // Both streams are disposed when execution exits the\n        // using statement.\n        using(Stream\n            netStream = new NetworkStream(clientSocket, true),\n            bufStream =\n                  new BufferedStream(netStream, streamBufferSize))\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#2\">   // Create a NetworkStream that owns clientSocket and \n   // then create a BufferedStream on top of the NetworkStream.\n   NetworkStream^ netStream = gcnew NetworkStream( clientSocket,true );\n   BufferedStream^ bufStream = gcnew BufferedStream( netStream,streamBufferSize );\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#2\">        &#39; Create a NetworkStream that owns clientSocket and then \n        &#39; create a BufferedStream on top of the NetworkStream.\n        Dim netStream As New NetworkStream(clientSocket, True)\n        Dim bufStream As New _\n            BufferedStream(netStream, streamBufferSize)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_CanRead\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_CanRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRead</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current stream supports reading.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanRead { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the stream supports reading; <code>false</code> if the stream is closed or was opened with write-only access.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a class derived from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> does not support reading, calls to the <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Read_\" data-linktype=\"relative-path\">Read</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_ReadByte_\" data-linktype=\"relative-path\">ReadByte</a>, <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>, <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndRead_\" data-linktype=\"relative-path\">EndRead</a>, and the <code>Peek</code> methods of <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a>, <a class=\"xref\" href=\"system.io.stringreader\" data-linktype=\"relative-path\">StringReader</a>, and <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> throw a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> If the stream is closed, this property returns <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#5\">            if(bufStream.CanRead)\n            {\n                ReceiveData(netStream, bufStream);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#5\">      if ( bufStream-&gt;CanRead )\n      {\n         Client::ReceiveData( netStream, bufStream );\n      }\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#5\">            If bufStream.CanRead Then\n                ReceiveData(netStream, bufStream)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_CanSeek\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_CanSeek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanSeek</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current stream supports seeking.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanSeek { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the stream supports seeking; <code>false</code> if the stream is closed or if the stream was constructed from an operating system handle such as a pipe or output to the console.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a class derived from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> does not support seeking, calls to <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Length_\" data-linktype=\"relative-path\">Length</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_SetLength_\" data-linktype=\"relative-path\">SetLength</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Position_\" data-linktype=\"relative-path\">Position</a>, and <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Seek_\" data-linktype=\"relative-path\">Seek</a> throw a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> If the stream is closed, this property returns <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#3\">            // Check whether the underlying stream supports seeking.\n            Console.WriteLine(&quot;NetworkStream {0} seeking.<br>&quot;,\n                bufStream.CanSeek ? &quot;supports&quot; : &quot;does not support&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#3\">      // Check whether the underlying stream supports seeking.\n      Console::WriteLine( &quot;NetworkStream {0} seeking.<br>&quot;, bufStream-&gt;CanSeek ? (String^)&quot;supports&quot; : &quot;does not support&quot; );\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#3\">            &#39; Check whether the underlying stream supports seeking.\n            If bufStream.CanSeek Then\n                Console.WriteLine(&quot;NetworkStream supports&quot; &amp; _\n                    &quot;seeking.&quot; &amp; vbCrLf)\n            Else\n                Console.WriteLine(&quot;NetworkStream does not &quot; &amp; _\n                    &quot;support seeking.&quot; &amp; vbCrLf)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_CanWrite\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_CanWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWrite</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current stream supports writing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanWrite { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the stream supports writing; <code>false</code> if the stream is closed or was opened with read-only access.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a class derived from <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> does not support writing, a call to <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_SetLength_\" data-linktype=\"relative-path\">SetLength</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Write_\" data-linktype=\"relative-path\">Write</a>, or <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_WriteByte_\" data-linktype=\"relative-path\">WriteByte</a> throws a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a>.  </p>\n<p> If the stream is closed, this property returns <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#4\">            if(bufStream.CanWrite)\n            {\n                SendData(netStream, bufStream);\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#4\">      if ( bufStream-&gt;CanWrite )\n      {\n         Client::SendData( netStream, bufStream );\n      }\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#4\">            If bufStream.CanWrite Then\n                SendData(netStream, bufStream)\n            End If            \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Length\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Length_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Length</div>        \r\n          </div>\r\n    \r\n            <p>Gets the stream length in bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Length { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The stream length in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The underlying stream is <code>null</code> or closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support seeking.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Position\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Position_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Position</div>        \r\n          </div>\r\n    \r\n            <p>Gets the position within the current stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Position { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The position within the current stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value passed to <span class=\"xref\">stem.IO.BufferedStream.Seek*</span> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurs, such as the stream being closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support seeking.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>get</code> accessor invokes <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Seek_\" data-linktype=\"relative-path\">Seek</a> to obtain the current position within the underlying stream and then adjusts this value according to the current position within the buffer.  </p>\n<p> The <code>set</code> accessor copies any data previously written to the buffer to the underlying stream, and then invokes <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_Seek_\" data-linktype=\"relative-path\">Seek</a>.  </p>\n<p> Seeking to any location beyond the length of the stream is supported.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_BeginRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous read operation. (Consider using <span class=\"xref\">stem.IO.BufferedStream.ReadAsync*</span> instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer to read the data into.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in <code>buffer</code> at which to begin writing data read from the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to read.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional asynchronous callback, to be called when the read is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-provided object that distinguishes this particular asynchronous read request from other requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An object that represents the asynchronous read, which could still be pending.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>Attempted an asynchronous read past the end of the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The buffer length minus <code>offset</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The current stream does not support the read operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the .NET Framework 4 and earlier versions, you have to use methods such as <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> to implement asynchronous file operations. These methods are still available in the .NET Framework 4.5 to support legacy code; however, the new async methods, such as <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_ReadAsync_\" data-linktype=\"relative-path\">ReadAsync</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_WriteAsync_\" data-linktype=\"relative-path\">WriteAsync</a>, and <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_FlushAsync_\" data-linktype=\"relative-path\">FlushAsync</a>, help you implement asynchronous file operations more easily.  </p>\n<p> <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> must be called exactly once for every call to BeginRead. Failing to end a read process before beginning another read can cause undesirable behavior such as deadlock.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Use the <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_CanRead_\" data-linktype=\"relative-path\">CanRead</a> property to determine whether the current instance supports reading.  </p>\n</div>\n<p> <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> must be called with this <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> to find out how many bytes were read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_BeginWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous write operation. (Consider using <span class=\"xref\">stem.IO.BufferedStream.WriteAsync*</span> instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer containing data to write to the current stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based byte offset in <code>buffer</code> at which to begin copying bytes to the current stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method to be called when the asynchronous write operation is completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-provided object that distinguishes this particular asynchronous write request from other requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An object that references the asynchronous write which could still be pending.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> length minus <code>offset</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support writing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the .NET Framework 4 and earlier versions, you have to use methods such as <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> to implement asynchronous file operations. These methods are still available in the .NET Framework 4.5 to support legacy code; however, the new async methods, such as <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_ReadAsync_\" data-linktype=\"relative-path\">ReadAsync</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_WriteAsync_\" data-linktype=\"relative-path\">WriteAsync</a>, and <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_FlushAsync_\" data-linktype=\"relative-path\">FlushAsync</a>, help you implement asynchronous file operations more easily.  </p>\n<p> <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> must be called exactly once on every <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> from BeginWrite. <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> will block until the I/O operation has completed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_EndRead_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_EndRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndRead(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Waits for the pending asynchronous read operation to complete. (Consider using <span class=\"xref\">stem.IO.BufferedStream.ReadAsync*</span> instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int EndRead (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The reference to the pending asynchronous request to wait for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested. Streams only return 0 only at the end of the stream, otherwise, they should block until at least 1 byte is available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>This <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object was not created by calling <span class=\"xref\">stem.IO.BufferedStream.BeginRead*</span> on this class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the .NET Framework 4 and earlier versions, you have to use methods such as <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndRead_\" data-linktype=\"relative-path\">EndRead</a> to implement asynchronous file operations. These methods are still available in the .NET Framework 4.5 to support legacy code; however, the new async methods, such as <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_ReadAsync_\" data-linktype=\"relative-path\">ReadAsync</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_WriteAsync_\" data-linktype=\"relative-path\">WriteAsync</a>, and <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_FlushAsync_\" data-linktype=\"relative-path\">FlushAsync</a>, help you implement asynchronous file operations more easily.  </p>\n<p> EndRead must be called with this <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> to find out how many bytes were read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_EndWrite_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_EndWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndWrite(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends an asynchronous write operation and blocks until the I/O operation is complete. (Consider using <span class=\"xref\">stem.IO.BufferedStream.WriteAsync*</span> instead; see the Remarks section.)</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void EndWrite (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The pending asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>This <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object was not created by calling <span class=\"xref\">stem.IO.BufferedStream.BeginWrite*</span> on this class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the .NET Framework 4 and earlier versions, you have to use methods such as <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_BeginWrite_\" data-linktype=\"relative-path\">BeginWrite</a> and <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_EndWrite_\" data-linktype=\"relative-path\">EndWrite</a> to implement asynchronous file operations. These methods are still available in the .NET Framework 4.5 to support legacy code; however, the new async methods, such as <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_ReadAsync_\" data-linktype=\"relative-path\">ReadAsync</a>, <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_WriteAsync_\" data-linktype=\"relative-path\">WriteAsync</a>, and <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_FlushAsync_\" data-linktype=\"relative-path\">FlushAsync</a>, help you implement asynchronous file operations more easily.  </p>\n<p> EndWrite must be called exactly once for every call to <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream_BeginRead_\" data-linktype=\"relative-path\">BeginRead</a>. Failing to end a read process before beginning another read operation can cause deadlock or other undesirable behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Flush\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The stream has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The data source or repository is not open.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Flushing the stream will not flush its underlying encoder unless you explicitly call <code>Flush</code> or <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_Close_\" data-linktype=\"relative-path\">Close</a>.  </p>\n<p> If you use the <a class=\"xref\" href=\"system.io.bufferedstream#System_IO_BufferedStream__ctor_\" data-linktype=\"relative-path\">BufferedStream</a> constructor, thus specifying the buffer size while creating the <code>BufferedStream</code> object, the content is flushed when it reaches the buffer size. For example, code such as <code>BufferedStream bs = new BufferedStream(bs, 5)</code> will flush the content when the buffer size reaches 5 bytes.  </p>\n<p> All the read and write methods of <code>BufferedStream</code> automatically maintain the buffer, so there is no need to invoke <code>Flush</code> when switching back and forth between reading and writing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#6\">        // Send the data using the BufferedStream.\n        Console.WriteLine(&quot;Sending data using BufferedStream.&quot;);\n        startTime = DateTime.Now;\n        for(int i = 0; i &lt; numberOfLoops; i++)\n        {\n            bufStream.Write(dataToSend, 0, dataToSend.Length);\n        }\n        bufStream.Flush();\n        bufferedTime = (DateTime.Now - startTime).TotalSeconds;\n        Console.WriteLine(&quot;{0} bytes sent in {1} seconds.<br>&quot;,\n            numberOfLoops * dataToSend.Length,\n            bufferedTime.ToString(&quot;F1&quot;));\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#6\">      // Send the data using the BufferedStream.\n      Console::WriteLine( &quot;Sending data using BufferedStream.&quot; );\n      startTime = DateTime::Now;\n      for ( int i = 0; i &lt; numberOfLoops; i++ )\n      {\n         bufStream-&gt;Write( dataToSend, 0, dataToSend-&gt;Length );\n\n      }\n      bufStream-&gt;Flush();\n      bufferedTime = (DateTime::Now - startTime).TotalSeconds;\n      Console::WriteLine( &quot;{0} bytes sent in {1} seconds.<br>&quot;, (numberOfLoops * dataToSend-&gt;Length).ToString(), bufferedTime.ToString(  &quot;F1&quot; ) );\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#6\">        &#39; Send the data using the BufferedStream.\n        Console.WriteLine(&quot;Sending data using BufferedStream.&quot;)\n        startTime = DateTime.Now\n        For i As Integer = 1 To numberOfLoops\n            bufStream.Write(dataToSend, 0, dataToSend.Length)\n        Next i\n        \n        bufStream.Flush()\n        bufferedTime = DateTime.Now.Subtract(startTime).TotalSeconds\n        Console.WriteLine(&quot;{0} bytes sent In {1} seconds.&quot; &amp; vbCrLf, _\n            numberOfLoops * dataToSend.Length, _\n            bufferedTime.ToString(&quot;F1&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_FlushAsync_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_FlushAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlushAsync(CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to monitor for cancellation requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A task that represents the asynchronous flush operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The stream has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Read_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies bytes from the current buffered stream to an array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Read (byte[] array, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer to which bytes are to be copied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in the buffer at which to begin reading bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to be read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The total number of bytes read into <code>array</code>. This can be less than the number of bytes requested if that many bytes are not currently available, or 0 if the end of the stream has been reached before any data can be read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Length of <code>array</code> minus <code>offset</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The stream is not open or is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support reading.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Read</code> method will return 0 only if the end of the stream is reached. In all other cases, <code>Read</code> always reads at least one byte from the stream before returning. By definition, if no data is available from the stream upon a call to <code>Read</code>, the <code>Read</code> method returns 0 (the end of the stream is reached automatically). An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.  </p>\n<p> Use <a class=\"xref\" href=\"system.io.binaryreader\" data-linktype=\"relative-path\">BinaryReader</a> for reading primitive data types.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#7\">        // Receive data using the BufferedStream.\n        Console.WriteLine(&quot;Receiving data using BufferedStream.&quot;);\n        bytesReceived = 0;\n        startTime = DateTime.Now;\n\n        int numBytesToRead = receivedData.Length;\n\n        while (numBytesToRead &gt; 0)\n        {\n            // Read may return anything from 0 to numBytesToRead.\n            int n = bufStream.Read(receivedData,0, receivedData.Length);\n            // The end of the file is reached.\n            if (n == 0)\n                break;\n            bytesReceived += n;\n            numBytesToRead -= n;\n        }\n\n        bufferedTime = (DateTime.Now - startTime).TotalSeconds;\n        Console.WriteLine(&quot;{0} bytes received in {1} seconds.<br>&quot;,\n            bytesReceived.ToString(),\n            bufferedTime.ToString(&quot;F1&quot;));\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#7\">      // Receive data using the BufferedStream.\n      Console::WriteLine(  &quot;Receiving data using BufferedStream.&quot; );\n      bytesReceived = 0;\n      startTime = DateTime::Now;\n      while ( bytesReceived &lt; numberOfLoops * receivedData-&gt;Length )\n      {\n         bytesReceived += bufStream-&gt;Read( receivedData, 0, receivedData-&gt;Length );\n      }\n\n      bufferedTime = (DateTime::Now - startTime).TotalSeconds;\n      Console::WriteLine( &quot;{0} bytes received in {1} seconds.<br>&quot;, bytesReceived.ToString(), bufferedTime.ToString(  &quot;F1&quot; ) );\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#7\">        &#39; Receive data using the BufferedStream.\n        Console.WriteLine(&quot;Receiving data using BufferedStream.&quot;)\n        bytesReceived = 0\n        startTime = DateTime.Now\n\n        Dim numBytesToRead As Integer = receivedData.Length\n        Dim n As Integer\n        Do While numBytesToRead &gt; 0\n\n            &#39;Read my return anything from 0 to numBytesToRead\n            n = bufStream.Read(receivedData, 0, receivedData.Length)\n            &#39;The end of the file is reached.\n            If n = 0 Then\n                Exit Do\n            End If\n\n            bytesReceived += n\n            numBytesToRead -= n\n        Loop\n\n        bufferedTime = DateTime.Now.Subtract(startTime).TotalSeconds\n        Console.WriteLine(&quot;{0} bytes received in {1} &quot; &amp; _\n            &quot;seconds.&quot; &amp; vbCrLf, _\n            bytesReceived.ToString(), _\n            bufferedTime.ToString(&quot;F1&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_ReadAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadAsync(Byte[],Int32,Int32,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer to write the data into.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte offset in <code>buffer</code> at which to begin writing data from the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to read.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to monitor for cancellation requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>&gt;</div>\r\n                  </div>\r\n                  <p>A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The sum of <code>offset</code> and <code>count</code> is larger than the buffer length.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support reading.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The stream has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is currently in use by a previous read operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can create a cancellation token by creating an instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class and passing the <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Token_\" data-linktype=\"relative-path\">Token</a> property as the <code>cancellationToken</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_ReadByte\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_ReadByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadByte()</div>        \r\n          </div>\r\n    \r\n            <p>Reads a byte from the underlying stream and returns the byte cast to an <code>int</code>, or returns -1 if reading from the end of the stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int ReadByte ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The byte cast to an <code>int</code>, or -1 if reading from the end of the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>An I/O error occurs, such as the stream being closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support reading.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Seek_System_Int64_System_IO_SeekOrigin_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Seek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Seek(Int64,SeekOrigin)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the position within the current buffered stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long Seek (long offset, System.IO.SeekOrigin origin);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte offset relative to <code>origin</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>origin</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value of type <a class=\"xref\" href=\"system.io.seekorigin\" data-linktype=\"relative-path\">SeekOrigin</a> indicating the reference point from which to obtain the new position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The new position within the current buffered stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The stream is not open or is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support seeking.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>offset</code> is negative, the new position will precede the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>. If <code>offset</code> is 0, the new position will be the position specified by <code>origin</code>. If <code>offset</code> is positive, the new position will follow the position specified by <code>origin</code> by the number of bytes specified by <code>offset</code>.  </p>\n<p> When a <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> object is the base stream for a <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> object, calling the Seek method can cause the position of the stream to no longer match the position of the internal buffer in the reader. To reset the internal buffer, call the <a class=\"xref\" href=\"system.io.streamreader#System_IO_StreamReader_DiscardBufferedData_\" data-linktype=\"relative-path\">DiscardBufferedData</a> method; however, this method slows performance and should be called only when absolutely necessary.  </p>\n<p> Seeking to any location beyond the length of the stream is supported.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_SetLength_System_Int64_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_SetLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLength(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the length of the buffered stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SetLength (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer indicating the desired length of the current buffered stream in bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The stream is not open or is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support both writing and seeking.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The buffer is flushed before setting the length of the underlying data source or repository. If the specified value is less than the current length of the buffered stream, the buffered stream is truncated. If the specified value is larger than the current length of the buffered stream, the buffered stream is expanded. If the buffered stream is expanded, the contents of the buffered stream between the old and the new lengths are not defined.  </p>\n<p> <code>SetLength</code> flushes any buffered writes if necessary.  </p>\n<p> A stream must support both writing and seeking for <code>SetLength</code> to work.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_Write_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies bytes to the buffered stream and advances the current position within the buffered stream by the number of bytes written.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (byte[] array, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array from which to copy <code>count</code> bytes to the current buffered stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset in the buffer at which to begin copying bytes to the current buffered stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to be written to the current buffered stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Length of <code>array</code> minus <code>offset</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The stream is closed or <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support writing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.io.bufferedstream\" data-linktype=\"relative-path\">BufferedStream</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IO.BufferedStream1#6\">        // Send the data using the BufferedStream.\n        Console.WriteLine(&quot;Sending data using BufferedStream.&quot;);\n        startTime = DateTime.Now;\n        for(int i = 0; i &lt; numberOfLoops; i++)\n        {\n            bufStream.Write(dataToSend, 0, dataToSend.Length);\n        }\n        bufStream.Flush();\n        bufferedTime = (DateTime.Now - startTime).TotalSeconds;\n        Console.WriteLine(&quot;{0} bytes sent in {1} seconds.<br>&quot;,\n            numberOfLoops * dataToSend.Length,\n            bufferedTime.ToString(&quot;F1&quot;));\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.IO.BufferedStream1#6\">      // Send the data using the BufferedStream.\n      Console::WriteLine( &quot;Sending data using BufferedStream.&quot; );\n      startTime = DateTime::Now;\n      for ( int i = 0; i &lt; numberOfLoops; i++ )\n      {\n         bufStream-&gt;Write( dataToSend, 0, dataToSend-&gt;Length );\n\n      }\n      bufStream-&gt;Flush();\n      bufferedTime = (DateTime::Now - startTime).TotalSeconds;\n      Console::WriteLine( &quot;{0} bytes sent in {1} seconds.<br>&quot;, (numberOfLoops * dataToSend-&gt;Length).ToString(), bufferedTime.ToString(  &quot;F1&quot; ) );\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"System.IO.BufferedStream1#6\">        &#39; Send the data using the BufferedStream.\n        Console.WriteLine(&quot;Sending data using BufferedStream.&quot;)\n        startTime = DateTime.Now\n        For i As Integer = 1 To numberOfLoops\n            bufStream.Write(dataToSend, 0, dataToSend.Length)\n        Next i\n        \n        bufStream.Flush()\n        bufferedTime = DateTime.Now.Subtract(startTime).TotalSeconds\n        Console.WriteLine(&quot;{0} bytes sent In {1} seconds.&quot; &amp; vbCrLf, _\n            numberOfLoops * dataToSend.Length, _\n            bufferedTime.ToString(&quot;F1&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_WriteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAsync(Byte[],Int32,Int32,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The buffer to write data from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based byte offset in <code>buffer</code> from which to begin copying bytes to the stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The maximum number of bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The token to monitor for cancellation requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A task that represents the asynchronous write operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is negative.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The sum of <code>offset</code> and <code>count</code> is larger than the buffer length.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support writing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The stream has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The stream is currently in use by a previous write operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can create a cancellation token by creating an instance of the <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> class and passing the <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Token_\" data-linktype=\"relative-path\">Token</a> property as the <code>cancellationToken</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_BufferedStream_WriteByte_System_Byte_\">\r\n    \r\n            <a id=\"System_IO_BufferedStream_WriteByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteByte(Byte)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a byte to the current position in the buffered stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteByte (byte value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte to write to the stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The stream does not support writing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>Methods were called after the stream was closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.BufferedStream.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.BufferedStream.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream..ctor\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.BeginRead\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.BeginWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.CanRead\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.CanSeek\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.CanWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Dispose\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.EndRead\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.EndWrite\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Flush\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.FlushAsync\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Length\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Position\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Read\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.ReadAsync\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.ReadByte\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Seek\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.SetLength\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.Write\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.WriteAsync\">\r\n<meta name=\"APIName\" content=\"System.IO.BufferedStream.WriteByte\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"fc3d88fe-bbe6-9f33-e257-490deeebeb09\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Adds a buffering layer to read and write operations on another stream. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.BufferedStream\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.BufferedStream.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.BufferedStream.yml","open_to_public_contributors":true,"api_name":["System.IO.BufferedStream","System.IO.BufferedStream..ctor","System.IO.BufferedStream.BeginRead","System.IO.BufferedStream.BeginWrite","System.IO.BufferedStream.CanRead","System.IO.BufferedStream.CanSeek","System.IO.BufferedStream.CanWrite","System.IO.BufferedStream.Dispose","System.IO.BufferedStream.EndRead","System.IO.BufferedStream.EndWrite","System.IO.BufferedStream.Flush","System.IO.BufferedStream.FlushAsync","System.IO.BufferedStream.Length","System.IO.BufferedStream.Position","System.IO.BufferedStream.Read","System.IO.BufferedStream.ReadAsync","System.IO.BufferedStream.ReadByte","System.IO.BufferedStream.Seek","System.IO.BufferedStream.SetLength","System.IO.BufferedStream.Write","System.IO.BufferedStream.WriteAsync","System.IO.BufferedStream.WriteByte"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.BufferedStream","System::IO::BufferedStream","System.IO.BufferedStream.#ctor","System::IO::BufferedStream::#ctor","System.IO.BufferedStream.BeginRead","System::IO::BufferedStream::BeginRead","System.IO.BufferedStream.BeginWrite","System::IO::BufferedStream::BeginWrite","System.IO.BufferedStream.CanRead","System::IO::BufferedStream::CanRead","System.IO.BufferedStream.CanSeek","System::IO::BufferedStream::CanSeek","System.IO.BufferedStream.CanWrite","System::IO::BufferedStream::CanWrite","System.IO.BufferedStream.Dispose","System::IO::BufferedStream::Dispose","System.IO.BufferedStream.EndRead","System::IO::BufferedStream::EndRead","System.IO.BufferedStream.EndWrite","System::IO::BufferedStream::EndWrite","System.IO.BufferedStream.Flush","System::IO::BufferedStream::Flush","System.IO.BufferedStream.FlushAsync","System::IO::BufferedStream::FlushAsync","System.IO.BufferedStream.Length","System::IO::BufferedStream::Length","System.IO.BufferedStream.Position","System::IO::BufferedStream::Position","System.IO.BufferedStream.Read","System::IO::BufferedStream::Read","System.IO.BufferedStream.ReadAsync","System::IO::BufferedStream::ReadAsync","System.IO.BufferedStream.ReadByte","System::IO::BufferedStream::ReadByte","System.IO.BufferedStream.Seek","System::IO::BufferedStream::Seek","System.IO.BufferedStream.SetLength","System::IO::BufferedStream::SetLength","System.IO.BufferedStream.Write","System::IO::BufferedStream::Write","System.IO.BufferedStream.WriteAsync","System::IO::BufferedStream::WriteAsync","System.IO.BufferedStream.WriteByte","System::IO::BufferedStream::WriteByte"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"fc3d88fe-bbe6-9f33-e257-490deeebeb09","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO/BufferedStream.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BufferedStream class | Microsoft Docs","_op_ogTitle":"BufferedStream class","description":"Adds a buffering layer to read and write operations on another stream. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.IO/toc.json","toc_rel":"_splitted/System.IO/toc.json","source_url":"","ms.assetid":"System.IO.BufferedStream","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.bufferedstream","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.bufferedstream","fileRelativePath":"System.IO.BufferedStream.html"},"themesRelativePathToOutputRoot":"_themes/"}