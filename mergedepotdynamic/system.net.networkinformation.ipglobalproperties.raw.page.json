{"content":"    \r\n    <h1 id=\"System_Net_NetworkInformation_IPGlobalProperties\">\r\n      <span class=\"lang-csharp\">IPGlobalProperties</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides information about the network connectivity of the local computer.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class IPGlobalProperties</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">IPGlobalProperties</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides configuration and statistical information about the local computer&#39;s network interfaces and network connections.  </p>\n<p> The information provided by this class is similar to that provided by the Internet Protocol Helper API functions. For information about the Internet Protocol Helper, see the documentation in the MSDN Library.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties__ctor\" data-linktype=\"self-bookmark\">IPGlobalProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties\" data-linktype=\"relative-path\">IPGlobalProperties</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_DhcpScopeName\" data-linktype=\"self-bookmark\">DhcpScopeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Dynamic Host Configuration Protocol (DHCP) scope name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_DomainName\" data-linktype=\"self-bookmark\">DomainName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the domain in which the local computer is registered.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_HostName\" data-linktype=\"self-bookmark\">HostName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the host name for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_IsWinsProxy\" data-linktype=\"self-bookmark\">IsWinsProxy</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_NodeType\" data-linktype=\"self-bookmark\">NodeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_BeginGetUnicastAddresses_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginGetUnicastAddresses(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_EndGetUnicastAddresses_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndGetUnicastAddresses(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetActiveTcpConnections\" data-linktype=\"self-bookmark\">GetActiveTcpConnections()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetActiveTcpListeners\" data-linktype=\"self-bookmark\">GetActiveTcpListeners()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetActiveUdpListeners\" data-linktype=\"self-bookmark\">GetActiveUdpListeners()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetIcmpV4Statistics\" data-linktype=\"self-bookmark\">GetIcmpV4Statistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetIcmpV6Statistics\" data-linktype=\"self-bookmark\">GetIcmpV6Statistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetIPGlobalProperties\" data-linktype=\"self-bookmark\">GetIPGlobalProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that provides information about the local computer&#39;s network connectivity and traffic statistics.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetIPv4GlobalStatistics\" data-linktype=\"self-bookmark\">GetIPv4GlobalStatistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetIPv6GlobalStatistics\" data-linktype=\"self-bookmark\">GetIPv6GlobalStatistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv4Statistics\" data-linktype=\"self-bookmark\">GetTcpIPv4Statistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv6Statistics\" data-linktype=\"self-bookmark\">GetTcpIPv6Statistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetUdpIPv4Statistics\" data-linktype=\"self-bookmark\">GetUdpIPv4Statistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetUdpIPv6Statistics\" data-linktype=\"self-bookmark\">GetUdpIPv6Statistics()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddresses\" data-linktype=\"self-bookmark\">GetUnicastAddresses()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the stable unicast IP address table on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddressesAsync\" data-linktype=\"self-bookmark\">GetUnicastAddressesAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties__ctor\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPGlobalProperties()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties\" data-linktype=\"relative-path\">IPGlobalProperties</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected IPGlobalProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor can be called only by classes derived from <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties\" data-linktype=\"relative-path\">IPGlobalProperties</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_DhcpScopeName\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_DhcpScopeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DhcpScopeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Dynamic Host Configuration Protocol (DHCP) scope name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string DhcpScopeName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance that contains the computer&#39;s DHCP scope name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>A Win32 function call failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A DHCP scope is an administrative grouping of networked computers that are on the same subnet.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays network information for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#15\">   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;Computer name: {0}&quot;, properties-&gt;HostName );\n   Console::WriteLine( &quot;Domain name:   {0}&quot;, properties-&gt;DomainName );\n   Console::WriteLine( &quot;Node type:     {0:f}&quot;, properties-&gt;NodeType );\n   Console::WriteLine( &quot;DHCP scope:    {0}&quot;, properties-&gt;DhcpScopeName );\n   Console::WriteLine( &quot;WINS proxy?    {0}&quot;, properties-&gt;IsWinsProxy );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#15\">            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;Computer name: {0}&quot;, properties.HostName);\n            Console.WriteLine(&quot;Domain name:   {0}&quot;, properties.DomainName);\n            Console.WriteLine(&quot;Node type:     {0:f}&quot;, properties.NodeType);\n            Console.WriteLine(&quot;DHCP scope:    {0}&quot;, properties.DhcpScopeName);\n            Console.WriteLine(&quot;WINS proxy?    {0}&quot;, properties.IsWinsProxy);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_DomainName\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_DomainName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DomainName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the domain in which the local computer is registered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string DomainName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance that contains the computer&#39;s domain name. If the computer does not belong to a domain, returns <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>A Win32 function call failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays network information for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#15\">   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;Computer name: {0}&quot;, properties-&gt;HostName );\n   Console::WriteLine( &quot;Domain name:   {0}&quot;, properties-&gt;DomainName );\n   Console::WriteLine( &quot;Node type:     {0:f}&quot;, properties-&gt;NodeType );\n   Console::WriteLine( &quot;DHCP scope:    {0}&quot;, properties-&gt;DhcpScopeName );\n   Console::WriteLine( &quot;WINS proxy?    {0}&quot;, properties-&gt;IsWinsProxy );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#15\">            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;Computer name: {0}&quot;, properties.HostName);\n            Console.WriteLine(&quot;Domain name:   {0}&quot;, properties.DomainName);\n            Console.WriteLine(&quot;Node type:     {0:f}&quot;, properties.NodeType);\n            Console.WriteLine(&quot;DHCP scope:    {0}&quot;, properties.DhcpScopeName);\n            Console.WriteLine(&quot;WINS proxy?    {0}&quot;, properties.IsWinsProxy);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_HostName\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_HostName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HostName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the host name for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string HostName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance that contains the computer&#39;s NetBIOS name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>A Win32 function call failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string. The host name string is truncated when it exceeds 15 characters.  </p>\n<p> A computer&#39;s NetBIOS name must be unique within a network and is not fully qualified by the domain name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays network information for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#15\">   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;Computer name: {0}&quot;, properties-&gt;HostName );\n   Console::WriteLine( &quot;Domain name:   {0}&quot;, properties-&gt;DomainName );\n   Console::WriteLine( &quot;Node type:     {0:f}&quot;, properties-&gt;NodeType );\n   Console::WriteLine( &quot;DHCP scope:    {0}&quot;, properties-&gt;DhcpScopeName );\n   Console::WriteLine( &quot;WINS proxy?    {0}&quot;, properties-&gt;IsWinsProxy );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#15\">            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;Computer name: {0}&quot;, properties.HostName);\n            Console.WriteLine(&quot;Domain name:   {0}&quot;, properties.DomainName);\n            Console.WriteLine(&quot;Node type:     {0:f}&quot;, properties.NodeType);\n            Console.WriteLine(&quot;DHCP scope:    {0}&quot;, properties.DhcpScopeName);\n            Console.WriteLine(&quot;WINS proxy?    {0}&quot;, properties.IsWinsProxy);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_IsWinsProxy\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_IsWinsProxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWinsProxy</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract bool IsWinsProxy { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the local computer is a WINS proxy; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>A Win32 function call failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays network information for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#15\">   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;Computer name: {0}&quot;, properties-&gt;HostName );\n   Console::WriteLine( &quot;Domain name:   {0}&quot;, properties-&gt;DomainName );\n   Console::WriteLine( &quot;Node type:     {0:f}&quot;, properties-&gt;NodeType );\n   Console::WriteLine( &quot;DHCP scope:    {0}&quot;, properties-&gt;DhcpScopeName );\n   Console::WriteLine( &quot;WINS proxy?    {0}&quot;, properties-&gt;IsWinsProxy );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#15\">            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;Computer name: {0}&quot;, properties.HostName);\n            Console.WriteLine(&quot;Domain name:   {0}&quot;, properties.DomainName);\n            Console.WriteLine(&quot;Node type:     {0:f}&quot;, properties.NodeType);\n            Console.WriteLine(&quot;DHCP scope:    {0}&quot;, properties.DhcpScopeName);\n            Console.WriteLine(&quot;WINS proxy?    {0}&quot;, properties.IsWinsProxy);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_NodeType\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_NodeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NodeType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.NetBiosNodeType NodeType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.netbiosnodetype\" data-linktype=\"relative-path\">NetBiosNodeType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.netbiosnodetype\" data-linktype=\"relative-path\">NetBiosNodeType</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>A Win32 function call failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The node type determines the way in which NetBIOS names are resolved to IP addresses. For additional information, see the <a class=\"xref\" href=\"system.net.networkinformation.netbiosnodetype\" data-linktype=\"relative-path\">NetBiosNodeType</a> class overview.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays network information for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#15\">   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;Computer name: {0}&quot;, properties-&gt;HostName );\n   Console::WriteLine( &quot;Domain name:   {0}&quot;, properties-&gt;DomainName );\n   Console::WriteLine( &quot;Node type:     {0:f}&quot;, properties-&gt;NodeType );\n   Console::WriteLine( &quot;DHCP scope:    {0}&quot;, properties-&gt;DhcpScopeName );\n   Console::WriteLine( &quot;WINS proxy?    {0}&quot;, properties-&gt;IsWinsProxy );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#15\">            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;Computer name: {0}&quot;, properties.HostName);\n            Console.WriteLine(&quot;Domain name:   {0}&quot;, properties.DomainName);\n            Console.WriteLine(&quot;Node type:     {0:f}&quot;, properties.NodeType);\n            Console.WriteLine(&quot;DHCP scope:    {0}&quot;, properties.DhcpScopeName);\n            Console.WriteLine(&quot;WINS proxy?    {0}&quot;, properties.IsWinsProxy);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_BeginGetUnicastAddresses_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_BeginGetUnicastAddresses_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginGetUnicastAddresses(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual IAsyncResult BeginGetUnicastAddresses (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that contains state information for this request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>This method is not implemented on the platform. This method uses the native <code>NotifyStableUnicastIpAddressTable</code> function that is supported on Windows Vista and later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The call to the native <code>NotifyStableUnicastIpAddressTable</code> function failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  </p>\n<p> The BeginGetUnicastAddresses method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <a class=\"xref\" href=\"system.net.ipaddress#System_Net_IPAddress_IsIPv6Teredo_\" data-linktype=\"relative-path\">IsIPv6Teredo</a> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  </p>\n<p> The BeginGetUnicastAddresses method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <a class=\"xref\" href=\"system.net.networkinformation.networkinterface\" data-linktype=\"relative-path\">System.Net.NetworkInformation.NetworkInterface</a> objects on a local computer and querying the associated IP addresses.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_EndGetUnicastAddresses_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_EndGetUnicastAddresses_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndGetUnicastAddresses(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that references the asynchronous request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.unicastipaddressinformationcollection\" data-linktype=\"relative-path\">UnicastIPAddressInformationCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that stores state information and any user defined data for this asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the native <code>GetAdaptersAddresses</code> function failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>This method is not implemented on the platform. This method uses the native <code>NotifyStableUnicastIpAddressTable</code> function that is supported on Windows Vista and later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have necessary <a class=\"xref\" href=\"system.net.networkinformation.networkinformationaccess\" data-linktype=\"relative-path\">NetworkInformationAccess</a> permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  </p>\n<p> The <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties#System_Net_NetworkInformation_IPGlobalProperties_BeginGetUnicastAddresses_\" data-linktype=\"relative-path\">BeginGetUnicastAddresses</a> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <a class=\"xref\" href=\"system.net.ipaddress#System_Net_IPAddress_IsIPv6Teredo_\" data-linktype=\"relative-path\">IsIPv6Teredo</a> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  </p>\n<p> The EndGetUnicastAddresses method ends a pending asynchronous request to retrieve the stable unicast IP address table.  </p>\n<p> The <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties#System_Net_NetworkInformation_IPGlobalProperties_BeginGetUnicastAddresses_\" data-linktype=\"relative-path\">BeginGetUnicastAddresses</a> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <a class=\"xref\" href=\"system.net.networkinformation.networkinterface\" data-linktype=\"relative-path\">System.Net.NetworkInformation.NetworkInterface</a> objects on a local computer and querying the associated IP addresses.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetActiveTcpConnections\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetActiveTcpConnections_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetActiveTcpConnections()</div>        \r\n          </div>\r\n    \r\n            <p>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.tcpconnectioninformation\" data-linktype=\"relative-path\">TcpConnectionInformation</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.tcpconnectioninformation\" data-linktype=\"relative-path\">TcpConnectionInformation</a> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The Win32 function <code>GetTcpTable</code> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The objects returned by this method include connections in all TCP states except the <a class=\"xref\" href=\"system.net.networkinformation.tcpstate\" data-linktype=\"relative-path\">TcpState</a> state. You can check the state of a connection by calling <a class=\"xref\" href=\"system.net.networkinformation.tcpconnectioninformation#System_Net_NetworkInformation_TcpConnectionInformation_State_\" data-linktype=\"relative-path\">State</a>.  </p>\n<p> The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays endpoint information for active TCP connections.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#17\">void ShowActiveTcpConnections()\n{\n   Console::WriteLine( &quot;Active TCP Connections&quot; );\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   array&lt;TcpConnectionInformation^&gt;^connections = properties-&gt;GetActiveTcpConnections();\n   System::Collections::IEnumerator^ myEnum6 = connections-&gt;GetEnumerator();\n   while ( myEnum6-&gt;MoveNext() )\n   {\n      TcpConnectionInformation ^ c = safe_cast&lt;TcpConnectionInformation ^&gt;(myEnum6-&gt;Current);\n      Console::WriteLine( &quot;{0} &lt;==&gt; {1}&quot;, c-&gt;LocalEndPoint, c-&gt;RemoteEndPoint );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#17\">         public static void ShowActiveTcpConnections()\n         {\n                    Console.WriteLine(&quot;Active TCP Connections&quot;);\n                    IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n                    TcpConnectionInformation[] connections = properties.GetActiveTcpConnections(); \n                    foreach (TcpConnectionInformation c in connections)\n                    {\n                        Console.WriteLine(&quot;{0} &lt;==&gt; {1}&quot;, \n                            c.LocalEndPoint.ToString(), \n                            c.RemoteEndPoint.ToString());\n                    }\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetActiveTcpListeners\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetActiveTcpListeners_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetActiveTcpListeners()</div>        \r\n          </div>\r\n    \r\n            <p>Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.IPEndPoint[] GetActiveTcpListeners ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The Win32 function <code>GetTcpTable</code> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The objects returned by this method include listeners in all TCP states except the <a class=\"xref\" href=\"system.net.networkinformation.tcpstate\" data-linktype=\"relative-path\">TcpState</a> state.  </p>\n<p> The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays endpoint information for active TCP listeners.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#18\">void ShowActiveTcpListeners()\n{\n   Console::WriteLine( &quot;Active TCP Listeners&quot; );\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   array&lt;IPEndPoint^&gt;^endPoints = properties-&gt;GetActiveTcpListeners();\n   System::Collections::IEnumerator^ myEnum7 = endPoints-&gt;GetEnumerator();\n   while ( myEnum7-&gt;MoveNext() )\n   {\n      IPEndPoint^ e = safe_cast&lt;IPEndPoint^&gt;(myEnum7-&gt;Current);\n      Console::WriteLine( e );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#18\">         public static void ShowActiveTcpListeners()\n         {\n             Console.WriteLine(&quot;Active TCP Listeners&quot;);\n             IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n             IPEndPoint[] endPoints =  properties.GetActiveTcpListeners();\n             foreach (IPEndPoint e in endPoints)\n             {\n                 Console.WriteLine(e.ToString());\n             }\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetActiveUdpListeners\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetActiveUdpListeners_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetActiveUdpListeners()</div>        \r\n          </div>\r\n    \r\n            <p>Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.IPEndPoint[] GetActiveUdpListeners ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a>[]</div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function <code>GetUdpTable</code> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  </p>\n<p> A UDP listener is an open socket that waits for and receives UDP datagrams. Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the active UDP listeners.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#19\">void ShowActiveUdpListeners()\n{\n   Console::WriteLine( &quot;Active UDP Listeners&quot; );\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   array&lt;IPEndPoint^&gt;^endPoints = properties-&gt;GetActiveUdpListeners();\n   System::Collections::IEnumerator^ myEnum8 = endPoints-&gt;GetEnumerator();\n   while ( myEnum8-&gt;MoveNext() )\n   {\n      IPEndPoint^ e = safe_cast&lt;IPEndPoint^&gt;(myEnum8-&gt;Current);\n      Console::WriteLine( e );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#19\">         public static void ShowActiveUdpListeners()\n         {\n             Console.WriteLine(&quot;Active UDP Listeners&quot;);\n             IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n             IPEndPoint[] endPoints =  properties.GetActiveUdpListeners();\n             foreach (IPEndPoint e in endPoints)\n             {\n                 Console.WriteLine(e.ToString());\n             }\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIcmpV4Statistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIcmpV4Statistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIcmpV4Statistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.icmpv4statistics\" data-linktype=\"relative-path\">IcmpV4Statistics</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.networkinformation.icmpv4statistics\" data-linktype=\"relative-path\">IcmpV4Statistics</a> object that provides ICMP version 4 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The Win32 function <code>GetIcmpStatistics</code> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ICMP is a set of messages for use with Internet Protocol version 4 (IPv4). ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 4 is defined in IETF RFC 792.  </p>\n<p> For details on the ICMP version 4 traffic statistics that are available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.icmpv4statistics\" data-linktype=\"relative-path\">IcmpV4Statistics</a> class documentation. Note that the <a class=\"xref\" href=\"system.net.networkinformation.icmpv4statistics\" data-linktype=\"relative-path\">IcmpV4Statistics</a> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the current ICMPv4 statistics.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#6\">void ShowIcmpV4Statistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   IcmpV4Statistics ^ stat = properties-&gt;GetIcmpV4Statistics();\n   Console::WriteLine( &quot;ICMP V4 Statistics:&quot; );\n   Console::WriteLine( &quot;  Messages ............................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;MessagesSent, stat-&gt;MessagesReceived );\n   Console::WriteLine( &quot;  Errors .............................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;ErrorsSent, stat-&gt;ErrorsReceived );\n   Console::WriteLine( &quot;  Echo Requests ....................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;EchoRequestsSent, stat-&gt;EchoRequestsReceived );\n   Console::WriteLine( &quot;  Echo Replies ........................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;EchoRepliesSent, stat-&gt;EchoRepliesReceived );\n   Console::WriteLine( &quot;  Destination Unreachables ............ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;DestinationUnreachableMessagesSent, stat-&gt;DestinationUnreachableMessagesReceived );\n   Console::WriteLine( &quot;  Source Quenches ..................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;SourceQuenchesSent, stat-&gt;SourceQuenchesReceived );\n   Console::WriteLine( &quot;  Redirects ........................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;RedirectsSent, stat-&gt;RedirectsReceived );\n   Console::WriteLine( &quot;  TimeExceeded ........................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;TimeExceededMessagesSent, stat-&gt;TimeExceededMessagesReceived );\n   Console::WriteLine( &quot;  Parameter Problems .................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;ParameterProblemsSent, stat-&gt;ParameterProblemsReceived );\n   Console::WriteLine( &quot;  Timestamp Requests .................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;TimestampRequestsSent, stat-&gt;TimestampRequestsReceived );\n   Console::WriteLine( &quot;  Timestamp Replies ................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;TimestampRepliesSent, stat-&gt;TimestampRepliesReceived );\n   Console::WriteLine( &quot;  Address Mask Requests ............... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;AddressMaskRequestsSent, stat-&gt;AddressMaskRequestsReceived );\n   Console::WriteLine( &quot;  Address Mask Replies ................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;AddressMaskRepliesSent, stat-&gt;AddressMaskRepliesReceived );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#6\">        public static void ShowIcmpV4Statistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            IcmpV4Statistics stat = properties.GetIcmpV4Statistics();\n            Console.WriteLine(&quot;ICMP V4 Statistics:&quot;);\n           \n            Console.WriteLine(&quot;  Messages ............................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.MessagesSent, stat.MessagesReceived);\n            Console.WriteLine(&quot;  Errors .............................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.ErrorsSent, stat.ErrorsReceived);\n                \n            Console.WriteLine(&quot;  Echo Requests ....................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.EchoRequestsSent, stat.EchoRequestsReceived);\n            Console.WriteLine(&quot;  Echo Replies ........................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.EchoRepliesSent, stat.EchoRepliesReceived);\n            \n            Console.WriteLine(&quot;  Destination Unreachables ............ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.DestinationUnreachableMessagesSent, stat.DestinationUnreachableMessagesReceived);\n                \n            Console.WriteLine(&quot;  Source Quenches ..................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.SourceQuenchesSent, stat.SourceQuenchesReceived);\n                \n            Console.WriteLine(&quot;  Redirects ........................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.RedirectsSent, stat.RedirectsReceived);  \n                \n            Console.WriteLine(&quot;  TimeExceeded ........................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.TimeExceededMessagesSent, stat.TimeExceededMessagesReceived);\n                                        \n            Console.WriteLine(&quot;  Parameter Problems .................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.ParameterProblemsSent, stat.ParameterProblemsReceived);        \n                \n            Console.WriteLine(&quot;  Timestamp Requests .................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.TimestampRequestsSent, stat.TimestampRequestsReceived);    \n            Console.WriteLine(&quot;  Timestamp Replies ................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.TimestampRepliesSent, stat.TimestampRepliesReceived);    \n                \n            Console.WriteLine(&quot;  Address Mask Requests ............... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.AddressMaskRequestsSent, stat.AddressMaskRequestsReceived);    \n            Console.WriteLine(&quot;  Address Mask Replies ................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.AddressMaskRepliesSent, stat.AddressMaskRepliesReceived);                    \n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIcmpV6Statistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIcmpV6Statistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIcmpV6Statistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.icmpv6statistics\" data-linktype=\"relative-path\">IcmpV6Statistics</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.networkinformation.icmpv6statistics\" data-linktype=\"relative-path\">IcmpV6Statistics</a> object that provides ICMP version 6 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The Win32 function <code>GetIcmpStatisticsEx</code> failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The local computer&#39;s operating system is not Windows XP or later.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6). ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 6 is defined in IETF RFC 1885.  </p>\n<p> The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.  </p>\n<p> For details on the ICMP version 6 traffic statistics available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.icmpv6statistics\" data-linktype=\"relative-path\">IcmpV6Statistics</a> class documentation. Note that the <a class=\"xref\" href=\"system.net.networkinformation.icmpv6statistics\" data-linktype=\"relative-path\">IcmpV6Statistics</a> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the current ICMPv6 statistics.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#7\">void ShowIcmpV6Statistics()\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   IcmpV6Statistics ^ stat = properties-&gt;GetIcmpV6Statistics();\n   Console::WriteLine( &quot;ICMP V6 Statistics:&quot; );\n   Console::WriteLine( &quot;  Messages ............................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;MessagesSent, stat-&gt;MessagesReceived );\n   Console::WriteLine( &quot;  Errors .............................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;ErrorsSent, stat-&gt;ErrorsReceived );\n   Console::WriteLine( &quot;  Echo Requests ....................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;EchoRequestsSent, stat-&gt;EchoRequestsReceived );\n   Console::WriteLine( &quot;  Echo Replies ........................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;EchoRepliesSent, stat-&gt;EchoRepliesReceived );\n   Console::WriteLine( &quot;  Destination Unreachables ............ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;DestinationUnreachableMessagesSent, stat-&gt;DestinationUnreachableMessagesReceived );\n   Console::WriteLine( &quot;  Parameter Problems .................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;ParameterProblemsSent, stat-&gt;ParameterProblemsReceived );\n   Console::WriteLine( &quot;  Packets Too Big ..................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;PacketTooBigMessagesSent, stat-&gt;PacketTooBigMessagesReceived );\n   Console::WriteLine( &quot;  Redirects ........................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;RedirectsSent, stat-&gt;RedirectsReceived );\n   Console::WriteLine( &quot;  Router Advertisements ............... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;RouterAdvertisementsSent, stat-&gt;RouterAdvertisementsReceived );\n   Console::WriteLine( &quot;  Router Solicitations ................ Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;RouterSolicitsSent, stat-&gt;RouterSolicitsReceived );\n   Console::WriteLine( &quot;  Time Exceeded ....................... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;TimeExceededMessagesSent, stat-&gt;TimeExceededMessagesReceived );\n   Console::WriteLine( &quot;  Neighbor Advertisements ............. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;NeighborAdvertisementsSent, stat-&gt;NeighborAdvertisementsReceived );\n   Console::WriteLine( &quot;  Neighbor Solicitations .............. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;NeighborSolicitsSent, stat-&gt;NeighborSolicitsReceived );\n   Console::WriteLine( &quot;  Membership Queries .................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;MembershipQueriesSent, stat-&gt;MembershipQueriesReceived );\n   Console::WriteLine( &quot;  Membership Reports .................. Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;MembershipReportsSent, stat-&gt;MembershipReportsReceived );\n   Console::WriteLine( &quot;  Membership Reductions ............... Sent: {0,-10}   Received: {1,-10}&quot;, stat-&gt;MembershipReductionsSent, stat-&gt;MembershipReductionsReceived );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#7\">        public static void ShowIcmpV6Statistics()\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            IcmpV6Statistics stat = properties.GetIcmpV6Statistics();\n            Console.WriteLine(&quot;ICMP V6 Statistics:&quot;);\n            Console.WriteLine(&quot;  Messages ............................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.MessagesSent, stat.MessagesReceived);\n            Console.WriteLine(&quot;  Errors .............................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.ErrorsSent, stat.ErrorsReceived);\n                \n            Console.WriteLine(&quot;  Echo Requests ....................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.EchoRequestsSent, stat.EchoRequestsReceived);\n            Console.WriteLine(&quot;  Echo Replies ........................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.EchoRepliesSent, stat.EchoRepliesReceived);\n            \n            Console.WriteLine(&quot;  Destination Unreachables ............ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.DestinationUnreachableMessagesSent, stat.DestinationUnreachableMessagesReceived);\n                \n            Console.WriteLine(&quot;  Parameter Problems .................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.ParameterProblemsSent, stat.ParameterProblemsReceived);        \n                \n            Console.WriteLine(&quot;  Packets Too Big ..................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.PacketTooBigMessagesSent, stat.PacketTooBigMessagesReceived);\n                \n            Console.WriteLine(&quot;  Redirects ........................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.RedirectsSent, stat.RedirectsReceived);\n                \n            Console.WriteLine(&quot;  Router Advertisements ............... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.RouterAdvertisementsSent, stat.RouterAdvertisementsReceived);                    \n            Console.WriteLine(&quot;  Router Solicitations ................ Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.RouterSolicitsSent, stat.RouterSolicitsReceived);        \n                \n            Console.WriteLine(&quot;  Time Exceeded ....................... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.TimeExceededMessagesSent, stat.TimeExceededMessagesReceived);\n                                        \n            Console.WriteLine(&quot;  Neighbor Advertisements ............. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.NeighborAdvertisementsSent, stat.NeighborAdvertisementsReceived);        \n            Console.WriteLine(&quot;  Neighbor Solicitations .............. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.NeighborSolicitsSent, stat.NeighborSolicitsReceived);        \n            \n            Console.WriteLine(&quot;  Membership Queries .................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.MembershipQueriesSent, stat.MembershipQueriesReceived);    \n            Console.WriteLine(&quot;  Membership Reports .................. Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.MembershipReportsSent, stat.MembershipReportsReceived);    \n            Console.WriteLine(&quot;  Membership Reductions ............... Sent: {0,-10}   Received: {1,-10}&quot;,\n                stat.MembershipReductionsSent, stat.MembershipReductionsReceived);    \n                \n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIPGlobalProperties\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIPGlobalProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIPGlobalProperties()</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that provides information about the local computer&#39;s network connectivity and traffic statistics.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties\" data-linktype=\"relative-path\">IPGlobalProperties</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties\" data-linktype=\"relative-path\">IPGlobalProperties</a> object that contains information about the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object returned by this method is a system-supplied type that derives from the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties\" data-linktype=\"relative-path\">IPGlobalProperties</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays information about the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#15\">   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;Computer name: {0}&quot;, properties-&gt;HostName );\n   Console::WriteLine( &quot;Domain name:   {0}&quot;, properties-&gt;DomainName );\n   Console::WriteLine( &quot;Node type:     {0:f}&quot;, properties-&gt;NodeType );\n   Console::WriteLine( &quot;DHCP scope:    {0}&quot;, properties-&gt;DhcpScopeName );\n   Console::WriteLine( &quot;WINS proxy?    {0}&quot;, properties-&gt;IsWinsProxy );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#15\">            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;Computer name: {0}&quot;, properties.HostName);\n            Console.WriteLine(&quot;Domain name:   {0}&quot;, properties.DomainName);\n            Console.WriteLine(&quot;Node type:     {0:f}&quot;, properties.NodeType);\n            Console.WriteLine(&quot;DHCP scope:    {0}&quot;, properties.DhcpScopeName);\n            Console.WriteLine(&quot;WINS proxy?    {0}&quot;, properties.IsWinsProxy);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIPv4GlobalStatistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIPv4GlobalStatistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIPv4GlobalStatistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a> object that provides IPv4 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function <code>GetIpStatistics</code> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.  </p>\n<p> For details on the IP traffic statistics available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a> class documentation. Note that the object returned by this method reflects the statistics as of the time the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a> object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays IP statistics for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#1\">void ShowIPStatistics( NetworkInterfaceComponent version )\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   IPGlobalStatistics ^ ipstat = nullptr;\n   switch ( version )\n   {\n      case NetworkInterfaceComponent::IPv4:\n         ipstat = properties-&gt;GetIPv4GlobalStatistics();\n         Console::WriteLine( &quot;{0}IPv4 Statistics &quot;, Environment::NewLine );\n         break;\n\n      case NetworkInterfaceComponent::IPv6:\n         ipstat = properties-&gt;GetIPv4GlobalStatistics();\n         Console::WriteLine( &quot;{0}IPv6 Statistics &quot;, Environment::NewLine );\n         break;\n\n      default:\n         throw gcnew ArgumentException( &quot;version&quot; );\n         break;\n   }\n\n   Console::WriteLine( &quot;  Forwarding enabled ...................... : {0}&quot;,\n      ipstat-&gt;ForwardingEnabled );\n   Console::WriteLine( &quot;  Interfaces .............................. : {0}&quot;,\n      ipstat-&gt;NumberOfInterfaces );\n   Console::WriteLine( &quot;  IP addresses ............................ : {0}&quot;,\n      ipstat-&gt;NumberOfIPAddresses );\n   Console::WriteLine( &quot;  Routes .................................. : {0}&quot;,\n      ipstat-&gt;NumberOfRoutes );\n   Console::WriteLine( &quot;  Default TTL ............................. : {0}&quot;,\n      ipstat-&gt;DefaultTtl );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Inbound Packet Data:&quot; );\n   Console::WriteLine( &quot;      Received ............................ : {0}&quot;,\n      ipstat-&gt;ReceivedPackets );\n   Console::WriteLine( &quot;      Forwarded ........................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsForwarded );\n   Console::WriteLine( &quot;      Delivered ........................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsDelivered );\n   Console::WriteLine( &quot;      Discarded ........................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsDiscarded );\n   Console::WriteLine( &quot;      Header Errors ....................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsWithHeadersErrors );\n   Console::WriteLine( &quot;      Address Errors ...................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsWithAddressErrors );\n   Console::WriteLine( &quot;      Unknown Protocol Errors ............. : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsWithUnknownProtocol );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Outbound Packet Data:&quot; );\n   Console::WriteLine( &quot;      Requested ........................... : {0}&quot;,\n      ipstat-&gt;OutputPacketRequests );\n   Console::WriteLine( &quot;      Discarded ........................... : {0}&quot;,\n      ipstat-&gt;OutputPacketsDiscarded );\n   Console::WriteLine( &quot;      No Routing Discards ................. : {0}&quot;,\n      ipstat-&gt;OutputPacketsWithNoRoute );\n   Console::WriteLine( &quot;      Routing Entry Discards .............. : {0}&quot;,\n      ipstat-&gt;OutputPacketRoutingDiscards );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Reassembly Data:&quot; );\n   Console::WriteLine( &quot;      Reassembly Timeout .................. : {0}&quot;,\n      ipstat-&gt;PacketReassemblyTimeout );\n   Console::WriteLine( &quot;      Reassemblies Required ............... : {0}&quot;,\n      ipstat-&gt;PacketReassembliesRequired );\n   Console::WriteLine( &quot;      Packets Reassembled ................. : {0}&quot;,\n      ipstat-&gt;PacketsReassembled );\n   Console::WriteLine( &quot;      Packets Fragmented .................. : {0}&quot;,\n      ipstat-&gt;PacketsFragmented );\n   Console::WriteLine( &quot;      Fragment Failures ................... : {0}&quot;,\n      ipstat-&gt;PacketFragmentFailures );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#1\">        public static void ShowIPStatistics(NetworkInterfaceComponent version)\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            IPGlobalStatistics ipstat = null;\n            switch (version)\n            {\n                case NetworkInterfaceComponent.IPv4:\n                     ipstat = properties.GetIPv4GlobalStatistics();\n                   Console.WriteLine(&quot;{0}IPv4 Statistics &quot;,Environment.NewLine);\n                    break;\n                case NetworkInterfaceComponent.IPv6:\n                    ipstat = properties.GetIPv4GlobalStatistics();\n                    Console.WriteLine(&quot;{0}IPv6 Statistics &quot;,Environment.NewLine);\n                    break;\n                default:\n                    throw new ArgumentException(&quot;version&quot;);\n                //    break;\n            }\n            Console.WriteLine(&quot;  Forwarding enabled ...................... : {0}&quot;, \n                ipstat.ForwardingEnabled);\n            Console.WriteLine(&quot;  Interfaces .............................. : {0}&quot;, \n                ipstat.NumberOfInterfaces);\n            Console.WriteLine(&quot;  IP addresses ............................ : {0}&quot;, \n                ipstat.NumberOfIPAddresses);\n            Console.WriteLine(&quot;  Routes .................................. : {0}&quot;, \n                ipstat.NumberOfRoutes);\n            Console.WriteLine(&quot;  Default TTL ............................. : {0}&quot;, \n                ipstat.DefaultTtl);\n            Console.WriteLine(&quot;&quot;);    \n            Console.WriteLine(&quot;  Inbound Packet Data:&quot;);\n            Console.WriteLine(&quot;      Received ............................ : {0}&quot;, \n                ipstat.ReceivedPackets);\n            Console.WriteLine(&quot;      Forwarded ........................... : {0}&quot;, \n                ipstat.ReceivedPacketsForwarded);\n            Console.WriteLine(&quot;      Delivered ........................... : {0}&quot;, \n                ipstat.ReceivedPacketsDelivered);\n            Console.WriteLine(&quot;      Discarded ........................... : {0}&quot;, \n                ipstat.ReceivedPacketsDiscarded);\n            Console.WriteLine(&quot;      Header Errors ....................... : {0}&quot;, \n                ipstat.ReceivedPacketsWithHeadersErrors);\n            Console.WriteLine(&quot;      Address Errors ...................... : {0}&quot;, \n                ipstat.ReceivedPacketsWithAddressErrors);\n            Console.WriteLine(&quot;      Unknown Protocol Errors ............. : {0}&quot;, \n                ipstat.ReceivedPacketsWithUnknownProtocol);\n            Console.WriteLine(&quot;&quot;);    \n            Console.WriteLine(&quot;  Outbound Packet Data:&quot;);\n            Console.WriteLine(&quot;      Requested ........................... : {0}&quot;, \n                 ipstat.OutputPacketRequests);\n            Console.WriteLine(&quot;      Discarded ........................... : {0}&quot;, \n                ipstat.OutputPacketsDiscarded);\n            Console.WriteLine(&quot;      No Routing Discards ................. : {0}&quot;, \n                ipstat.OutputPacketsWithNoRoute);\n            Console.WriteLine(&quot;      Routing Entry Discards .............. : {0}&quot;, \n                ipstat.OutputPacketRoutingDiscards);\n            Console.WriteLine(&quot;&quot;);    \n            Console.WriteLine(&quot;  Reassembly Data:&quot;);\n            Console.WriteLine(&quot;      Reassembly Timeout .................. : {0}&quot;, \n                ipstat.PacketReassemblyTimeout);\n            Console.WriteLine(&quot;      Reassemblies Required ............... : {0}&quot;, \n                ipstat.PacketReassembliesRequired);\n            Console.WriteLine(&quot;      Packets Reassembled ................. : {0}&quot;, \n                ipstat.PacketsReassembled);\n            Console.WriteLine(&quot;      Packets Fragmented .................. : {0}&quot;, \n                ipstat.PacketsFragmented);\n            Console.WriteLine(&quot;      Fragment Failures ................... : {0}&quot;, \n                ipstat.PacketFragmentFailures);\n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIPv6GlobalStatistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetIPv6GlobalStatistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIPv6GlobalStatistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a> object that provides IPv6 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function <code>GetIpStatistics</code> failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The local computer is not running an operating system that supports IPv6.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination. The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.  </p>\n<p> For details on the IP traffic statistics available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a> class documentation. Note that the object returned by this method reflects the statistics as of the time the <a class=\"xref\" href=\"system.net.networkinformation.ipglobalstatistics\" data-linktype=\"relative-path\">IPGlobalStatistics</a> object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays IP statistics for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#1\">void ShowIPStatistics( NetworkInterfaceComponent version )\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   IPGlobalStatistics ^ ipstat = nullptr;\n   switch ( version )\n   {\n      case NetworkInterfaceComponent::IPv4:\n         ipstat = properties-&gt;GetIPv4GlobalStatistics();\n         Console::WriteLine( &quot;{0}IPv4 Statistics &quot;, Environment::NewLine );\n         break;\n\n      case NetworkInterfaceComponent::IPv6:\n         ipstat = properties-&gt;GetIPv4GlobalStatistics();\n         Console::WriteLine( &quot;{0}IPv6 Statistics &quot;, Environment::NewLine );\n         break;\n\n      default:\n         throw gcnew ArgumentException( &quot;version&quot; );\n         break;\n   }\n\n   Console::WriteLine( &quot;  Forwarding enabled ...................... : {0}&quot;,\n      ipstat-&gt;ForwardingEnabled );\n   Console::WriteLine( &quot;  Interfaces .............................. : {0}&quot;,\n      ipstat-&gt;NumberOfInterfaces );\n   Console::WriteLine( &quot;  IP addresses ............................ : {0}&quot;,\n      ipstat-&gt;NumberOfIPAddresses );\n   Console::WriteLine( &quot;  Routes .................................. : {0}&quot;,\n      ipstat-&gt;NumberOfRoutes );\n   Console::WriteLine( &quot;  Default TTL ............................. : {0}&quot;,\n      ipstat-&gt;DefaultTtl );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Inbound Packet Data:&quot; );\n   Console::WriteLine( &quot;      Received ............................ : {0}&quot;,\n      ipstat-&gt;ReceivedPackets );\n   Console::WriteLine( &quot;      Forwarded ........................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsForwarded );\n   Console::WriteLine( &quot;      Delivered ........................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsDelivered );\n   Console::WriteLine( &quot;      Discarded ........................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsDiscarded );\n   Console::WriteLine( &quot;      Header Errors ....................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsWithHeadersErrors );\n   Console::WriteLine( &quot;      Address Errors ...................... : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsWithAddressErrors );\n   Console::WriteLine( &quot;      Unknown Protocol Errors ............. : {0}&quot;,\n      ipstat-&gt;ReceivedPacketsWithUnknownProtocol );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Outbound Packet Data:&quot; );\n   Console::WriteLine( &quot;      Requested ........................... : {0}&quot;,\n      ipstat-&gt;OutputPacketRequests );\n   Console::WriteLine( &quot;      Discarded ........................... : {0}&quot;,\n      ipstat-&gt;OutputPacketsDiscarded );\n   Console::WriteLine( &quot;      No Routing Discards ................. : {0}&quot;,\n      ipstat-&gt;OutputPacketsWithNoRoute );\n   Console::WriteLine( &quot;      Routing Entry Discards .............. : {0}&quot;,\n      ipstat-&gt;OutputPacketRoutingDiscards );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Reassembly Data:&quot; );\n   Console::WriteLine( &quot;      Reassembly Timeout .................. : {0}&quot;,\n      ipstat-&gt;PacketReassemblyTimeout );\n   Console::WriteLine( &quot;      Reassemblies Required ............... : {0}&quot;,\n      ipstat-&gt;PacketReassembliesRequired );\n   Console::WriteLine( &quot;      Packets Reassembled ................. : {0}&quot;,\n      ipstat-&gt;PacketsReassembled );\n   Console::WriteLine( &quot;      Packets Fragmented .................. : {0}&quot;,\n      ipstat-&gt;PacketsFragmented );\n   Console::WriteLine( &quot;      Fragment Failures ................... : {0}&quot;,\n      ipstat-&gt;PacketFragmentFailures );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#1\">        public static void ShowIPStatistics(NetworkInterfaceComponent version)\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            IPGlobalStatistics ipstat = null;\n            switch (version)\n            {\n                case NetworkInterfaceComponent.IPv4:\n                     ipstat = properties.GetIPv4GlobalStatistics();\n                   Console.WriteLine(&quot;{0}IPv4 Statistics &quot;,Environment.NewLine);\n                    break;\n                case NetworkInterfaceComponent.IPv6:\n                    ipstat = properties.GetIPv4GlobalStatistics();\n                    Console.WriteLine(&quot;{0}IPv6 Statistics &quot;,Environment.NewLine);\n                    break;\n                default:\n                    throw new ArgumentException(&quot;version&quot;);\n                //    break;\n            }\n            Console.WriteLine(&quot;  Forwarding enabled ...................... : {0}&quot;, \n                ipstat.ForwardingEnabled);\n            Console.WriteLine(&quot;  Interfaces .............................. : {0}&quot;, \n                ipstat.NumberOfInterfaces);\n            Console.WriteLine(&quot;  IP addresses ............................ : {0}&quot;, \n                ipstat.NumberOfIPAddresses);\n            Console.WriteLine(&quot;  Routes .................................. : {0}&quot;, \n                ipstat.NumberOfRoutes);\n            Console.WriteLine(&quot;  Default TTL ............................. : {0}&quot;, \n                ipstat.DefaultTtl);\n            Console.WriteLine(&quot;&quot;);    \n            Console.WriteLine(&quot;  Inbound Packet Data:&quot;);\n            Console.WriteLine(&quot;      Received ............................ : {0}&quot;, \n                ipstat.ReceivedPackets);\n            Console.WriteLine(&quot;      Forwarded ........................... : {0}&quot;, \n                ipstat.ReceivedPacketsForwarded);\n            Console.WriteLine(&quot;      Delivered ........................... : {0}&quot;, \n                ipstat.ReceivedPacketsDelivered);\n            Console.WriteLine(&quot;      Discarded ........................... : {0}&quot;, \n                ipstat.ReceivedPacketsDiscarded);\n            Console.WriteLine(&quot;      Header Errors ....................... : {0}&quot;, \n                ipstat.ReceivedPacketsWithHeadersErrors);\n            Console.WriteLine(&quot;      Address Errors ...................... : {0}&quot;, \n                ipstat.ReceivedPacketsWithAddressErrors);\n            Console.WriteLine(&quot;      Unknown Protocol Errors ............. : {0}&quot;, \n                ipstat.ReceivedPacketsWithUnknownProtocol);\n            Console.WriteLine(&quot;&quot;);    \n            Console.WriteLine(&quot;  Outbound Packet Data:&quot;);\n            Console.WriteLine(&quot;      Requested ........................... : {0}&quot;, \n                 ipstat.OutputPacketRequests);\n            Console.WriteLine(&quot;      Discarded ........................... : {0}&quot;, \n                ipstat.OutputPacketsDiscarded);\n            Console.WriteLine(&quot;      No Routing Discards ................. : {0}&quot;, \n                ipstat.OutputPacketsWithNoRoute);\n            Console.WriteLine(&quot;      Routing Entry Discards .............. : {0}&quot;, \n                ipstat.OutputPacketRoutingDiscards);\n            Console.WriteLine(&quot;&quot;);    \n            Console.WriteLine(&quot;  Reassembly Data:&quot;);\n            Console.WriteLine(&quot;      Reassembly Timeout .................. : {0}&quot;, \n                ipstat.PacketReassemblyTimeout);\n            Console.WriteLine(&quot;      Reassemblies Required ............... : {0}&quot;, \n                ipstat.PacketReassembliesRequired);\n            Console.WriteLine(&quot;      Packets Reassembled ................. : {0}&quot;, \n                ipstat.PacketsReassembled);\n            Console.WriteLine(&quot;      Packets Fragmented .................. : {0}&quot;, \n                ipstat.PacketsFragmented);\n            Console.WriteLine(&quot;      Fragment Failures ................... : {0}&quot;, \n                ipstat.PacketFragmentFailures);\n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv4Statistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv4Statistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTcpIPv4Statistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> object that provides TCP/IPv4 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function <code>GetTcpStatistics</code> failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  </p>\n<p> For details on the TCP traffic statistics available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> class documentation. Note that the object returned by this method reflects the statistics as of the time the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the TCP/IP statistics for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#2\">void ShowTcpStatistics( NetworkInterfaceComponent version )\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = nullptr;\n   Console::WriteLine( &quot;&quot; );\n   switch ( version )\n   {\n      case NetworkInterfaceComponent::IPv4:\n         tcpstat = properties-&gt;GetTcpIPv4Statistics();\n         Console::WriteLine( &quot;TCP/IPv4 Statistics:&quot; );\n         break;\n\n      case NetworkInterfaceComponent::IPv6:\n         tcpstat = properties-&gt;GetTcpIPv6Statistics();\n         Console::WriteLine( &quot;TCP/IPv6 Statistics:&quot; );\n         break;\n\n      default:\n         throw gcnew ArgumentException( &quot;version&quot; );\n         break;\n   }\n   Console::WriteLine( &quot;  Minimum Transmission Timeout............. : {0}&quot;,\n      tcpstat-&gt;MinimumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum Transmission Timeout............. : {0}&quot;,\n      tcpstat-&gt;MaximumTransmissionTimeout );\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;,\n      tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;,\n      tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;,\n      tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;,\n      tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;,\n      tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;,\n      tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Segment Data:&quot; );\n   Console::WriteLine( &quot;      Received  ........................... : {0}&quot;,\n      tcpstat-&gt;SegmentsReceived );\n   Console::WriteLine( &quot;      Sent ................................ : {0}&quot;,\n      tcpstat-&gt;SegmentsSent );\n   Console::WriteLine( &quot;      Retransmitted ....................... : {0}&quot;,\n      tcpstat-&gt;SegmentsResent );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#2\">        public static void ShowTcpStatistics(NetworkInterfaceComponent version)\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = null;\n            Console.WriteLine(&quot;&quot;);\n            switch (version)\n            {\n                case NetworkInterfaceComponent.IPv4:\n                     tcpstat = properties.GetTcpIPv4Statistics();\n                    Console.WriteLine(&quot;TCP/IPv4 Statistics:&quot;);\n                    break;\n                case NetworkInterfaceComponent.IPv6:\n                    tcpstat = properties.GetTcpIPv6Statistics();\n                    Console.WriteLine(&quot;TCP/IPv6 Statistics:&quot;);\n                    break;\n                default:\n                    throw new ArgumentException(&quot;version&quot;);\n                //    break;\n            }\n            Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MinimumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MaximumTransmissionTimeout);\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n            tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n                \n            Console.WriteLine(&quot;&quot;);\n            Console.WriteLine(&quot;  Segment Data:&quot;);\n            Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, \n                tcpstat.SegmentsReceived);\n            Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, \n                tcpstat.SegmentsSent);\n            Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, \n                tcpstat.SegmentsResent);\n            \n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv6Statistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetTcpIPv6Statistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTcpIPv6Statistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> object that provides TCP/IPv6 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function <code>GetTcpStatistics</code> failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The local computer is not running an operating system that supports IPv6.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>TCP is a transport layer protocol responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  </p>\n<p> For details on the TCP traffic statistics that are available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> class documentation. Note that the object returned by this method reflects the statistics as of the time the <a class=\"xref\" href=\"system.net.networkinformation.tcpstatistics\" data-linktype=\"relative-path\">TcpStatistics</a> object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the TCP/IP statistics for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#2\">void ShowTcpStatistics( NetworkInterfaceComponent version )\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   TcpStatistics ^ tcpstat = nullptr;\n   Console::WriteLine( &quot;&quot; );\n   switch ( version )\n   {\n      case NetworkInterfaceComponent::IPv4:\n         tcpstat = properties-&gt;GetTcpIPv4Statistics();\n         Console::WriteLine( &quot;TCP/IPv4 Statistics:&quot; );\n         break;\n\n      case NetworkInterfaceComponent::IPv6:\n         tcpstat = properties-&gt;GetTcpIPv6Statistics();\n         Console::WriteLine( &quot;TCP/IPv6 Statistics:&quot; );\n         break;\n\n      default:\n         throw gcnew ArgumentException( &quot;version&quot; );\n         break;\n   }\n   Console::WriteLine( &quot;  Minimum Transmission Timeout............. : {0}&quot;,\n      tcpstat-&gt;MinimumTransmissionTimeout );\n   Console::WriteLine( &quot;  Maximum Transmission Timeout............. : {0}&quot;,\n      tcpstat-&gt;MaximumTransmissionTimeout );\n   Console::WriteLine( &quot;  Connection Data:&quot; );\n   Console::WriteLine( &quot;      Current  ............................ : {0}&quot;,\n      tcpstat-&gt;CurrentConnections );\n   Console::WriteLine( &quot;      Cumulative .......................... : {0}&quot;,\n      tcpstat-&gt;CumulativeConnections );\n   Console::WriteLine( &quot;      Initiated ........................... : {0}&quot;,\n      tcpstat-&gt;ConnectionsInitiated );\n   Console::WriteLine( &quot;      Accepted ............................ : {0}&quot;,\n      tcpstat-&gt;ConnectionsAccepted );\n   Console::WriteLine( &quot;      Failed Attempts ..................... : {0}&quot;,\n      tcpstat-&gt;FailedConnectionAttempts );\n   Console::WriteLine( &quot;      Reset ............................... : {0}&quot;,\n      tcpstat-&gt;ResetConnections );\n   Console::WriteLine( &quot;&quot; );\n   Console::WriteLine( &quot;  Segment Data:&quot; );\n   Console::WriteLine( &quot;      Received  ........................... : {0}&quot;,\n      tcpstat-&gt;SegmentsReceived );\n   Console::WriteLine( &quot;      Sent ................................ : {0}&quot;,\n      tcpstat-&gt;SegmentsSent );\n   Console::WriteLine( &quot;      Retransmitted ....................... : {0}&quot;,\n      tcpstat-&gt;SegmentsResent );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#2\">        public static void ShowTcpStatistics(NetworkInterfaceComponent version)\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            TcpStatistics tcpstat = null;\n            Console.WriteLine(&quot;&quot;);\n            switch (version)\n            {\n                case NetworkInterfaceComponent.IPv4:\n                     tcpstat = properties.GetTcpIPv4Statistics();\n                    Console.WriteLine(&quot;TCP/IPv4 Statistics:&quot;);\n                    break;\n                case NetworkInterfaceComponent.IPv6:\n                    tcpstat = properties.GetTcpIPv6Statistics();\n                    Console.WriteLine(&quot;TCP/IPv6 Statistics:&quot;);\n                    break;\n                default:\n                    throw new ArgumentException(&quot;version&quot;);\n                //    break;\n            }\n            Console.WriteLine(&quot;  Minimum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MinimumTransmissionTimeout);\n            Console.WriteLine(&quot;  Maximum Transmission Timeout............. : {0}&quot;, \n                tcpstat.MaximumTransmissionTimeout);\n                \n            Console.WriteLine(&quot;  Connection Data:&quot;);\n            Console.WriteLine(&quot;      Current  ............................ : {0}&quot;, \n            tcpstat.CurrentConnections);\n            Console.WriteLine(&quot;      Cumulative .......................... : {0}&quot;, \n                tcpstat.CumulativeConnections);\n            Console.WriteLine(&quot;      Initiated ........................... : {0}&quot;, \n                tcpstat.ConnectionsInitiated);\n            Console.WriteLine(&quot;      Accepted ............................ : {0}&quot;, \n                tcpstat.ConnectionsAccepted);\n            Console.WriteLine(&quot;      Failed Attempts ..................... : {0}&quot;, \n                tcpstat.FailedConnectionAttempts);\n            Console.WriteLine(&quot;      Reset ............................... : {0}&quot;, \n                tcpstat.ResetConnections);\n                \n            Console.WriteLine(&quot;&quot;);\n            Console.WriteLine(&quot;  Segment Data:&quot;);\n            Console.WriteLine(&quot;      Received  ........................... : {0}&quot;, \n                tcpstat.SegmentsReceived);\n            Console.WriteLine(&quot;      Sent ................................ : {0}&quot;, \n                tcpstat.SegmentsSent);\n            Console.WriteLine(&quot;      Retransmitted ....................... : {0}&quot;, \n                tcpstat.SegmentsResent);\n            \n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUdpIPv4Statistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUdpIPv4Statistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUdpIPv4Statistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a> object that provides UDP/IPv4 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function GetUdpStatistics failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  </p>\n<p> For details on the UDP traffic statistics that are available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a> class documentation. Note that the object returned by this method reflects the statistics as of the time the <a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a> object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the UDP/IP statistics for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#3\">void ShowUdpStatistics( NetworkInterfaceComponent version )\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   UdpStatistics ^ udpStat = nullptr;\n   switch ( version )\n   {\n      case NetworkInterfaceComponent::IPv4:\n         udpStat = properties-&gt;GetUdpIPv4Statistics();\n         Console::WriteLine( &quot;UDP IPv4 Statistics&quot; );\n         break;\n\n      case NetworkInterfaceComponent::IPv6:\n         udpStat = properties-&gt;GetUdpIPv6Statistics();\n         Console::WriteLine( &quot;UDP IPv6 Statistics&quot; );\n         break;\n\n      default:\n         throw gcnew ArgumentException( &quot;version&quot; );\n         break;\n   }\n   Console::WriteLine( &quot;  Datagrams Received ...................... : {0}&quot;, udpStat-&gt;DatagramsReceived );\n   Console::WriteLine( &quot;  Datagrams Sent .......................... : {0}&quot;, udpStat-&gt;DatagramsSent );\n   Console::WriteLine( &quot;  Incoming Datagrams Discarded ............ : {0}&quot;, udpStat-&gt;IncomingDatagramsDiscarded );\n   Console::WriteLine( &quot;  Incoming Datagrams With Errors .......... : {0}&quot;, udpStat-&gt;IncomingDatagramsWithErrors );\n   Console::WriteLine( &quot;  UDP Listeners ........................... : {0}&quot;, udpStat-&gt;UdpListeners );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#3\">        public static void ShowUdpStatistics(NetworkInterfaceComponent version)\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            UdpStatistics udpStat = null;\n            \n            switch (version)\n            {\n                case NetworkInterfaceComponent.IPv4:\n                    udpStat = properties.GetUdpIPv4Statistics();\n                    Console.WriteLine(&quot;UDP IPv4 Statistics&quot;);\n                    break;\n                case NetworkInterfaceComponent.IPv6:\n                    udpStat = properties.GetUdpIPv6Statistics();\n                    Console.WriteLine(&quot;UDP IPv6 Statistics&quot;);\n                    break;\n                default:\n                    throw new ArgumentException(&quot;version&quot;);\n                //    break;\n            }\n            Console.WriteLine(&quot;  Datagrams Received ...................... : {0}&quot;, \n                udpStat.DatagramsReceived);\n            Console.WriteLine(&quot;  Datagrams Sent .......................... : {0}&quot;, \n                udpStat.DatagramsSent);\n            Console.WriteLine(&quot;  Incoming Datagrams Discarded ............ : {0}&quot;, \n                udpStat.IncomingDatagramsDiscarded);\n            Console.WriteLine(&quot;  Incoming Datagrams With Errors .......... : {0}&quot;, \n                udpStat.IncomingDatagramsWithErrors);\n            Console.WriteLine(&quot;  UDP Listeners ........................... : {0}&quot;, \n                udpStat.UdpListeners);\n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUdpIPv6Statistics\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUdpIPv6Statistics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUdpIPv6Statistics()</div>        \r\n          </div>\r\n    \r\n            <p>Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a> object that provides UDP/IPv6 traffic statistics for the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the Win32 function <code>GetUdpStatistics</code> failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The local computer is not running an operating system that supports IPv6.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  </p>\n<p> For details on the UDP traffic statistics that are available to applications, see the <a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a> class documentation. Note that the object returned by this method reflects the statistics as of the time the <a class=\"xref\" href=\"system.net.networkinformation.udpstatistics\" data-linktype=\"relative-path\">UdpStatistics</a> object is created. This information is not updated dynamically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the UDP/IP statistics for the local computer.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLNetInfoReport#3\">void ShowUdpStatistics( NetworkInterfaceComponent version )\n{\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   UdpStatistics ^ udpStat = nullptr;\n   switch ( version )\n   {\n      case NetworkInterfaceComponent::IPv4:\n         udpStat = properties-&gt;GetUdpIPv4Statistics();\n         Console::WriteLine( &quot;UDP IPv4 Statistics&quot; );\n         break;\n\n      case NetworkInterfaceComponent::IPv6:\n         udpStat = properties-&gt;GetUdpIPv6Statistics();\n         Console::WriteLine( &quot;UDP IPv6 Statistics&quot; );\n         break;\n\n      default:\n         throw gcnew ArgumentException( &quot;version&quot; );\n         break;\n   }\n   Console::WriteLine( &quot;  Datagrams Received ...................... : {0}&quot;, udpStat-&gt;DatagramsReceived );\n   Console::WriteLine( &quot;  Datagrams Sent .......................... : {0}&quot;, udpStat-&gt;DatagramsSent );\n   Console::WriteLine( &quot;  Incoming Datagrams Discarded ............ : {0}&quot;, udpStat-&gt;IncomingDatagramsDiscarded );\n   Console::WriteLine( &quot;  Incoming Datagrams With Errors .......... : {0}&quot;, udpStat-&gt;IncomingDatagramsWithErrors );\n   Console::WriteLine( &quot;  UDP Listeners ........................... : {0}&quot;, udpStat-&gt;UdpListeners );\n   Console::WriteLine( &quot;&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLNetInfoReport#3\">        public static void ShowUdpStatistics(NetworkInterfaceComponent version)\n        {\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            UdpStatistics udpStat = null;\n            \n            switch (version)\n            {\n                case NetworkInterfaceComponent.IPv4:\n                    udpStat = properties.GetUdpIPv4Statistics();\n                    Console.WriteLine(&quot;UDP IPv4 Statistics&quot;);\n                    break;\n                case NetworkInterfaceComponent.IPv6:\n                    udpStat = properties.GetUdpIPv6Statistics();\n                    Console.WriteLine(&quot;UDP IPv6 Statistics&quot;);\n                    break;\n                default:\n                    throw new ArgumentException(&quot;version&quot;);\n                //    break;\n            }\n            Console.WriteLine(&quot;  Datagrams Received ...................... : {0}&quot;, \n                udpStat.DatagramsReceived);\n            Console.WriteLine(&quot;  Datagrams Sent .......................... : {0}&quot;, \n                udpStat.DatagramsSent);\n            Console.WriteLine(&quot;  Incoming Datagrams Discarded ............ : {0}&quot;, \n                udpStat.IncomingDatagramsDiscarded);\n            Console.WriteLine(&quot;  Incoming Datagrams With Errors .......... : {0}&quot;, \n                udpStat.IncomingDatagramsWithErrors);\n            Console.WriteLine(&quot;  UDP Listeners ........................... : {0}&quot;, \n                udpStat.UdpListeners);\n            Console.WriteLine(&quot;&quot;);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddresses\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddresses_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUnicastAddresses()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the stable unicast IP address table on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.unicastipaddressinformationcollection\" data-linktype=\"relative-path\">UnicastIPAddressInformationCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkinformation.unicastipaddressinformationcollection\" data-linktype=\"relative-path\">UnicastIPAddressInformationCollection</a> that contains a list of stable unicast IP addresses on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the native <code>GetAdaptersAddresses</code> function failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>This method is not implemented on the platform. This method uses the native <code>NotifyStableUnicastIpAddressTable</code> function that is supported on Windows Vista and later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have necessary <a class=\"xref\" href=\"system.net.networkinformation.networkinformationaccess\" data-linktype=\"relative-path\">NetworkInformationAccess</a> permission.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The call to the native <code>NotifyStableUnicastIpAddressTable</code> function failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  </p>\n<p> The GetUnicastAddresses method will allow an application to retrieve the list of stable unicast IP addresses. The <a class=\"xref\" href=\"system.net.ipaddress#System_Net_IPAddress_IsIPv6Teredo_\" data-linktype=\"relative-path\">IsIPv6Teredo</a> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  </p>\n<p> The GetUnicastAddresses method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <a class=\"xref\" href=\"system.net.networkinformation.networkinterface\" data-linktype=\"relative-path\">System.Net.NetworkInformation.NetworkInterface</a> objects on a local computer and querying the associated IP addresses.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddressesAsync\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddressesAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUnicastAddressesAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task&lt;System.Net.NetworkInformation.UnicastIPAddressInformationCollection&gt; GetUnicastAddressesAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.networkinformation.unicastipaddressinformationcollection\" data-linktype=\"relative-path\">UnicastIPAddressInformationCollection</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns <span class=\"xref\">stem.Threading.Tasks.Task`1</span>.  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.networkinformationexception\" data-linktype=\"relative-path\">NetworkInformationException</a></div>\r\n                  </div>\r\n                  <p>The call to the native <code>GetAdaptersAddresses</code> function failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have necessary <a class=\"xref\" href=\"system.net.networkinformation.networkinformationaccess\" data-linktype=\"relative-path\">NetworkInformationAccess</a> permission.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>The call to the native <code>NotifyStableUnicastIpAddressTable</code> function failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  </p>\n<p> The GetUnicastAddressesAsync method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation. The <a class=\"xref\" href=\"system.net.ipaddress#System_Net_IPAddress_IsIPv6Teredo_\" data-linktype=\"relative-path\">IsIPv6Teredo</a> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  </p>\n<p> The <a class=\"xref\" href=\"system.net.networkinformation.ipglobalproperties#System_Net_NetworkInformation_IPGlobalProperties_GetUnicastAddresses_\" data-linktype=\"relative-path\">GetUnicastAddresses</a> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <a class=\"xref\" href=\"system.net.networkinformation.networkinterface\" data-linktype=\"relative-path\">System.Net.NetworkInformation.NetworkInterface</a> objects on a local computer and querying the associated IP addresses.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.IPGlobalProperties.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.IPGlobalProperties.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.DomainName\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.HostName\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPGlobalProperties.NodeType\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f918286e-209a-938c-cddb-a7f9f7783bb6\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net.NetworkInformation\\IPGlobalProperties.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information about the network connectivity of the local computer.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.NetworkInformation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkInformation.IPGlobalProperties\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.IPGlobalProperties.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.IPGlobalProperties.yml","open_to_public_contributors":true,"api_name":["System.Net.NetworkInformation.IPGlobalProperties","System.Net.NetworkInformation.IPGlobalProperties..ctor","System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses","System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName","System.Net.NetworkInformation.IPGlobalProperties.DomainName","System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses","System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections","System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners","System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners","System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties","System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics","System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics","System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses","System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync","System.Net.NetworkInformation.IPGlobalProperties.HostName","System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy","System.Net.NetworkInformation.IPGlobalProperties.NodeType"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkInformation.IPGlobalProperties","System::Net::NetworkInformation::IPGlobalProperties","System.Net.NetworkInformation.IPGlobalProperties.#ctor","System::Net::NetworkInformation::IPGlobalProperties::#ctor","System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses","System::Net::NetworkInformation::IPGlobalProperties::BeginGetUnicastAddresses","System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName","System::Net::NetworkInformation::IPGlobalProperties::DhcpScopeName","System.Net.NetworkInformation.IPGlobalProperties.DomainName","System::Net::NetworkInformation::IPGlobalProperties::DomainName","System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses","System::Net::NetworkInformation::IPGlobalProperties::EndGetUnicastAddresses","System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections","System::Net::NetworkInformation::IPGlobalProperties::GetActiveTcpConnections","System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners","System::Net::NetworkInformation::IPGlobalProperties::GetActiveTcpListeners","System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners","System::Net::NetworkInformation::IPGlobalProperties::GetActiveUdpListeners","System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics","System::Net::NetworkInformation::IPGlobalProperties::GetIcmpV4Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics","System::Net::NetworkInformation::IPGlobalProperties::GetIcmpV6Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties","System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties","System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics","System::Net::NetworkInformation::IPGlobalProperties::GetIPv4GlobalStatistics","System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics","System::Net::NetworkInformation::IPGlobalProperties::GetIPv6GlobalStatistics","System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics","System::Net::NetworkInformation::IPGlobalProperties::GetTcpIPv4Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics","System::Net::NetworkInformation::IPGlobalProperties::GetTcpIPv6Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics","System::Net::NetworkInformation::IPGlobalProperties::GetUdpIPv4Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics","System::Net::NetworkInformation::IPGlobalProperties::GetUdpIPv6Statistics","System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses","System::Net::NetworkInformation::IPGlobalProperties::GetUnicastAddresses","System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync","System::Net::NetworkInformation::IPGlobalProperties::GetUnicastAddressesAsync","System.Net.NetworkInformation.IPGlobalProperties.HostName","System::Net::NetworkInformation::IPGlobalProperties::HostName","System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy","System::Net::NetworkInformation::IPGlobalProperties::IsWinsProxy","System.Net.NetworkInformation.IPGlobalProperties.NodeType","System::Net::NetworkInformation::IPGlobalProperties::NodeType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f918286e-209a-938c-cddb-a7f9f7783bb6","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net.NetworkInformation\\IPGlobalProperties.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.NetworkInformation/IPGlobalProperties.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IPGlobalProperties class | Microsoft Docs","_op_ogTitle":"IPGlobalProperties class","description":"Provides information about the network connectivity of the local computer.\n","toc_asset_id":"_splitted/System.Net.NetworkInformation/toc.json","toc_rel":"_splitted/System.Net.NetworkInformation/toc.json","source_url":"","ms.assetid":"System.Net.NetworkInformation.IPGlobalProperties","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.ipglobalproperties","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.ipglobalproperties","fileRelativePath":"System.Net.NetworkInformation.IPGlobalProperties.html"},"themesRelativePathToOutputRoot":"_themes/"}