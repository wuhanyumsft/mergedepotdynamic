{"content":"    \r\n    <h1 id=\"System_Xml_XmlEntity\">\r\n      <span class=\"lang-csharp\">XmlEntity</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an entity declaration, such as &lt;!ENTITY... &gt;.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlEntity : System.Xml.XmlNode</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlEntity</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_AppendChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">AppendChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ChildNodes\" data-linktype=\"relative-path\">ChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_CreateNavigator\" data-linktype=\"relative-path\">CreateNavigator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_FirstChild\" data-linktype=\"relative-path\">FirstChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetNamespaceOfPrefix_System_String_\" data-linktype=\"relative-path\">GetNamespaceOfPrefix(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetPrefixOfNamespace_System_String_\" data-linktype=\"relative-path\">GetPrefixOfNamespace(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_HasChildNodes\" data-linktype=\"relative-path\">HasChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertAfter_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">InsertAfter(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertBefore_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">InsertBefore(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_\" data-linktype=\"relative-path\">Item(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_System_String_\" data-linktype=\"relative-path\">Item(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_LastChild\" data-linktype=\"relative-path\">LastChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_NamespaceURI\" data-linktype=\"relative-path\">NamespaceURI</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_NextSibling\" data-linktype=\"relative-path\">NextSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Normalize\" data-linktype=\"relative-path\">Normalize()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_OwnerDocument\" data-linktype=\"relative-path\">OwnerDocument</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ParentNode\" data-linktype=\"relative-path\">ParentNode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Prefix\" data-linktype=\"relative-path\">Prefix</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PrependChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">PrependChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousSibling\" data-linktype=\"relative-path\">PreviousSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousText\" data-linktype=\"relative-path\">PreviousText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveAll\" data-linktype=\"relative-path\">RemoveAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">RemoveChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ReplaceChild_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">ReplaceChild(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SchemaInfo\" data-linktype=\"relative-path\">SchemaInfo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_\" data-linktype=\"relative-path\">SelectNodes(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectNodes(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_\" data-linktype=\"relative-path\">SelectSingleNode(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectSingleNode(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Supports_System_String_System_String_\" data-linktype=\"relative-path\">Supports(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_ICloneable_Clone\" data-linktype=\"relative-path\">ICloneable.Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Value\" data-linktype=\"relative-path\">Value</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_BaseURI\" data-linktype=\"self-bookmark\">BaseURI</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the base Uniform Resource Identifier (URI) of the current node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_InnerText\" data-linktype=\"self-bookmark\">InnerText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the concatenated values of the entity node and all its children.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_InnerXml\" data-linktype=\"self-bookmark\">InnerXml</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the markup representing the children of this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the node is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_LocalName\" data-linktype=\"self-bookmark\">LocalName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the node without the namespace prefix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_NodeType\" data-linktype=\"self-bookmark\">NodeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_NotationName\" data-linktype=\"self-bookmark\">NotationName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the optional NDATA attribute on the entity declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_OuterXml\" data-linktype=\"self-bookmark\">OuterXml</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the markup representing this node and all its children.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_PublicId\" data-linktype=\"self-bookmark\">PublicId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the public identifier on the entity declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_SystemId\" data-linktype=\"self-bookmark\">SystemId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the system identifier on the entity declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_CloneNode_System_Boolean_\" data-linktype=\"self-bookmark\">CloneNode(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a duplicate of this node. Entity nodes cannot be cloned. Calling this method on an <a class=\"xref\" href=\"system.xml.xmlentity\" data-linktype=\"relative-path\">XmlEntity</a> object throws an exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_WriteContentTo_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">WriteContentTo(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves all the children of the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. For <code>XmlEntity</code> nodes, this method has no effect.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlEntity_WriteTo_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">WriteTo(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. For <code>XmlEntity</code> nodes, this method has no effect.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_BaseURI\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_BaseURI_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseURI</div>        \r\n          </div>\r\n    \r\n            <p>Gets the base Uniform Resource Identifier (URI) of the current node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string BaseURI { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The location from which the node was loaded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places. The <code>BaseURI</code> tells you where these nodes came from.  </p>\n<p> The value of this property varies depending on the node type. Nodes which are children of external EntityReference nodes return the location of the entity itself. For example, consider the following XML document:  </p>\n<pre><code>&lt;!DOCTYPE item [  \n&lt;!ENTITY xyz SYSTEM &quot;a/b.xml&quot;&gt;  \n]&gt;  \n&lt;item num=&#39;123&#39;&gt;&amp;xyz;&lt;/item&gt;  \n</code></pre><p> where the external entity <code>a/b.xml</code> contains the XML text <code>&lt;test&gt;123&lt;/test&gt;</code>.  </p>\n<p> If the document is loaded from <a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a>, <code>BaseURI</code> returns the following:  </p>\n<table>\n<thead>\n<tr>\n<th>NodeType</th>\n<th>Name</th>\n<th>BaseURI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Attribute</td>\n<td>num</td>\n<td><a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a></td>\n</tr>\n<tr>\n<td>Document</td>\n<td>#document</td>\n<td><a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a></td>\n</tr>\n<tr>\n<td>DocumentType</td>\n<td>item</td>\n<td><a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a></td>\n</tr>\n<tr>\n<td>Entity</td>\n<td>xyz</td>\n<td><a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a></td>\n</tr>\n<tr>\n<td>Element</td>\n<td>item</td>\n<td><a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a></td>\n</tr>\n<tr>\n<td>EntityReference</td>\n<td>xyz</td>\n<td><a href=\"http://server/mydata.xml\" data-linktype=\"external\">http://server/mydata.xml</a></td>\n</tr>\n<tr>\n<td>Element</td>\n<td>test</td>\n<td><a href=\"http://server/a/b.xml\" data-linktype=\"external\">http://server/a/b.xml</a></td>\n</tr>\n<tr>\n<td>Text</td>\n<td>#text</td>\n<td><a href=\"http://server/a/b.xml\" data-linktype=\"external\">http://server/a/b.xml</a></td>\n</tr>\n</tbody>\n</table>\n<p> <code>BaseURI</code> looks for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the <code>XmlDocument</code> object in all cases.  </p>\n<p> As a second example, given the following XML document:  </p>\n<pre><code>&lt;!DOCTYPE Mydata SYSTEM &quot;http://localhost/doctype.dtd&quot;&gt;  \n&lt;baa&gt;&amp;xyz;&lt;/baa&gt;  \n</code></pre><p> where the document type definition (DTD) file contains the following:  </p>\n<pre><code>&lt;!ENTITY xyz &quot;&lt;E1&gt;My Data&lt;/E1&gt;&quot;&gt;  \n&lt;!ELEMENT baa #PCDATA&gt;  \n&lt;!ATTLIST baa attr1 &quot;woof&quot;&gt;  \n</code></pre><p> If the XML document is loaded from <a href=\"http://localhost/mydata.xml\" data-linktype=\"external\">http://localhost/mydata.xml</a>, <code>BaseURI</code> returns the following for each of the nodes:  </p>\n<table>\n<thead>\n<tr>\n<th>NodeType</th>\n<th>Name</th>\n<th>BaseURI</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Document</td>\n<td>#document</td>\n<td><a href=\"http://localhost/mydata.xml\" data-linktype=\"external\">http://localhost/mydata.xml</a></td>\n</tr>\n<tr>\n<td>DocumentType</td>\n<td>Mydata</td>\n<td><a href=\"http://localhost/doctype.dtd\" data-linktype=\"external\">http://localhost/doctype.dtd</a></td>\n</tr>\n<tr>\n<td>Element</td>\n<td>baa</td>\n<td><a href=\"http://localhost/mydata.xml\" data-linktype=\"external\">http://localhost/mydata.xml</a></td>\n</tr>\n<tr>\n<td>Entity</td>\n<td>xyz</td>\n<td><a href=\"http://localhost/doctype.dtd\" data-linktype=\"external\">http://localhost/doctype.dtd</a></td>\n</tr>\n<tr>\n<td>EntityReference</td>\n<td>xyz</td>\n<td><a href=\"http://localhost/mydata.xml\" data-linktype=\"external\">http://localhost/mydata.xml</a></td>\n</tr>\n<tr>\n<td>Attribute</td>\n<td>woof</td>\n<td><a href=\"http://localhost/mydata.xml\" data-linktype=\"external\">http://localhost/mydata.xml</a></td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> The base URI of a default attribute is the same as the base URI of the element to which they belong.  </p>\n</div>\n<p> This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_InnerText\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_InnerText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InnerText</div>        \r\n          </div>\r\n    \r\n            <p>Gets the concatenated values of the entity node and all its children.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string InnerText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The concatenated values of the node and all its children.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Attempting to set the property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>XmlEntity</code> nodes are read-only. Setting this property throws an exception.  </p>\n<p> This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_InnerXml\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_InnerXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InnerXml</div>        \r\n          </div>\r\n    \r\n            <p>Gets the markup representing the children of this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string InnerXml { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>For <code>XmlEntity</code> nodes, String.Empty is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Attempting to set the property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>XmlEntity</code> nodes are read-only. Setting this property throws an exception.  </p>\n<p> This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_IsReadOnly\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the node is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the node is read-only; otherwise <code>false</code>.  </p>\n<p> Because <code>XmlEntity</code> nodes are read-only, this property always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A read-only node is one whose properties, attributes, or children cannot be changed. You can remove a read-only node from the tree and insert it somewhere else.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_LocalName\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_LocalName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the node without the namespace prefix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string LocalName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>For <code>XmlEntity</code> nodes, this property returns the name of the entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_Name\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on the entities declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlEntity#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n     XmlDocument doc = new XmlDocument();\n     doc.Load(filename);\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;);     \n     XmlNamedNodeMap nMap = doc.DocumentType.Entities;\n     DisplayEntities(nMap);\n  }\n \n  public static void DisplayEntities(XmlNamedNodeMap nMap)\n  {    \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlEntity ent = (XmlEntity) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, ent.NodeType);\n        Console.Write(&quot;{0} &quot;, ent.Name);\n        Console.Write(&quot;{0} &quot;, ent.NotationName);\n        Console.Write(&quot;{0} &quot;, ent.PublicId);\n        Console.Write(&quot;{0} &quot;, ent.SystemId);\n        Console.WriteLine();\n     }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlEntity#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\npublic:\n   static void DisplayEntities( XmlNamedNodeMap^ nMap )\n   {\n      for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n      {\n         XmlEntity^ ent = dynamic_cast&lt;XmlEntity^&gt;(nMap-&gt;Item( i ));\n         Console::Write( &quot; {0} &quot;, ent-&gt;NodeType );\n         Console::Write( &quot; {0} &quot;, ent-&gt;Name );\n         Console::Write( &quot; {0} &quot;, ent-&gt;NotationName );\n         Console::Write( &quot; {0} &quot;, ent-&gt;PublicId );\n         Console::Write( &quot; {0} &quot;, ent-&gt;SystemId );\n         Console::WriteLine();\n\n      }\n   }\n\n};\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all entities...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Entities;\n   Sample^ MySample = gcnew Sample;\n   MySample-&gt;DisplayEntities( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlEntity#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n      \n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(filename)\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;)     \n     Dim nMap as XmlNamedNodeMap = doc.DocumentType.Entities\n     DisplayEntities(nMap)\n  end sub\n \n  public shared sub DisplayEntities(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim ent as XmlEntity = CType(nMap.Item(i), XmlEntity)\n        Console.Write(&quot;{0} &quot;, ent.NodeType)\n        Console.Write(&quot;{0} &quot;, ent.Name)\n        Console.Write(&quot;{0} &quot;, ent.NotationName)\n        Console.Write(&quot;{0} &quot;, ent.PublicId)\n        Console.Write(&quot;{0} &quot;, ent.SystemId)\n        Console.WriteLine()\n     next\n  end sub\nend class\n</code></pre><p> The example uses the file <code>doment.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlEntity#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_NodeType\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_NodeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NodeType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNodeType NodeType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodetype\" data-linktype=\"relative-path\">XmlNodeType</a></div>\r\n                  </div>\r\n                  <p>The node type. For <code>XmlEntity</code> nodes, the value is XmlNodeType.Entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on the entities declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlEntity#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n     XmlDocument doc = new XmlDocument();\n     doc.Load(filename);\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;);     \n     XmlNamedNodeMap nMap = doc.DocumentType.Entities;\n     DisplayEntities(nMap);\n  }\n \n  public static void DisplayEntities(XmlNamedNodeMap nMap)\n  {    \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlEntity ent = (XmlEntity) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, ent.NodeType);\n        Console.Write(&quot;{0} &quot;, ent.Name);\n        Console.Write(&quot;{0} &quot;, ent.NotationName);\n        Console.Write(&quot;{0} &quot;, ent.PublicId);\n        Console.Write(&quot;{0} &quot;, ent.SystemId);\n        Console.WriteLine();\n     }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlEntity#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\npublic:\n   static void DisplayEntities( XmlNamedNodeMap^ nMap )\n   {\n      for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n      {\n         XmlEntity^ ent = dynamic_cast&lt;XmlEntity^&gt;(nMap-&gt;Item( i ));\n         Console::Write( &quot; {0} &quot;, ent-&gt;NodeType );\n         Console::Write( &quot; {0} &quot;, ent-&gt;Name );\n         Console::Write( &quot; {0} &quot;, ent-&gt;NotationName );\n         Console::Write( &quot; {0} &quot;, ent-&gt;PublicId );\n         Console::Write( &quot; {0} &quot;, ent-&gt;SystemId );\n         Console::WriteLine();\n\n      }\n   }\n\n};\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all entities...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Entities;\n   Sample^ MySample = gcnew Sample;\n   MySample-&gt;DisplayEntities( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlEntity#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n      \n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(filename)\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;)     \n     Dim nMap as XmlNamedNodeMap = doc.DocumentType.Entities\n     DisplayEntities(nMap)\n  end sub\n \n  public shared sub DisplayEntities(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim ent as XmlEntity = CType(nMap.Item(i), XmlEntity)\n        Console.Write(&quot;{0} &quot;, ent.NodeType)\n        Console.Write(&quot;{0} &quot;, ent.Name)\n        Console.Write(&quot;{0} &quot;, ent.NotationName)\n        Console.Write(&quot;{0} &quot;, ent.PublicId)\n        Console.Write(&quot;{0} &quot;, ent.SystemId)\n        Console.WriteLine()\n     next\n  end sub\nend class\n</code></pre><p> The example uses the file <code>doment.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlEntity#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_NotationName\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_NotationName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotationName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the optional NDATA attribute on the entity declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string NotationName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the NDATA attribute. If there is no NDATA, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on the entities declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlEntity#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n     XmlDocument doc = new XmlDocument();\n     doc.Load(filename);\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;);     \n     XmlNamedNodeMap nMap = doc.DocumentType.Entities;\n     DisplayEntities(nMap);\n  }\n \n  public static void DisplayEntities(XmlNamedNodeMap nMap)\n  {    \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlEntity ent = (XmlEntity) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, ent.NodeType);\n        Console.Write(&quot;{0} &quot;, ent.Name);\n        Console.Write(&quot;{0} &quot;, ent.NotationName);\n        Console.Write(&quot;{0} &quot;, ent.PublicId);\n        Console.Write(&quot;{0} &quot;, ent.SystemId);\n        Console.WriteLine();\n     }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlEntity#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\npublic:\n   static void DisplayEntities( XmlNamedNodeMap^ nMap )\n   {\n      for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n      {\n         XmlEntity^ ent = dynamic_cast&lt;XmlEntity^&gt;(nMap-&gt;Item( i ));\n         Console::Write( &quot; {0} &quot;, ent-&gt;NodeType );\n         Console::Write( &quot; {0} &quot;, ent-&gt;Name );\n         Console::Write( &quot; {0} &quot;, ent-&gt;NotationName );\n         Console::Write( &quot; {0} &quot;, ent-&gt;PublicId );\n         Console::Write( &quot; {0} &quot;, ent-&gt;SystemId );\n         Console::WriteLine();\n\n      }\n   }\n\n};\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all entities...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Entities;\n   Sample^ MySample = gcnew Sample;\n   MySample-&gt;DisplayEntities( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlEntity#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n      \n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(filename)\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;)     \n     Dim nMap as XmlNamedNodeMap = doc.DocumentType.Entities\n     DisplayEntities(nMap)\n  end sub\n \n  public shared sub DisplayEntities(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim ent as XmlEntity = CType(nMap.Item(i), XmlEntity)\n        Console.Write(&quot;{0} &quot;, ent.NodeType)\n        Console.Write(&quot;{0} &quot;, ent.Name)\n        Console.Write(&quot;{0} &quot;, ent.NotationName)\n        Console.Write(&quot;{0} &quot;, ent.PublicId)\n        Console.Write(&quot;{0} &quot;, ent.SystemId)\n        Console.WriteLine()\n     next\n  end sub\nend class\n</code></pre><p> The example uses the file, <code>doment.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlEntity#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_OuterXml\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_OuterXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OuterXml</div>        \r\n          </div>\r\n    \r\n            <p>Gets the markup representing this node and all its children.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string OuterXml { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>For <code>XmlEntity</code> nodes, String.Empty is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_PublicId\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_PublicId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PublicId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the public identifier on the entity declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PublicId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The public identifier on the entity. If there is no public identifier, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on the entities declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlEntity#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n     XmlDocument doc = new XmlDocument();\n     doc.Load(filename);\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;);     \n     XmlNamedNodeMap nMap = doc.DocumentType.Entities;\n     DisplayEntities(nMap);\n  }\n \n  public static void DisplayEntities(XmlNamedNodeMap nMap)\n  {    \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlEntity ent = (XmlEntity) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, ent.NodeType);\n        Console.Write(&quot;{0} &quot;, ent.Name);\n        Console.Write(&quot;{0} &quot;, ent.NotationName);\n        Console.Write(&quot;{0} &quot;, ent.PublicId);\n        Console.Write(&quot;{0} &quot;, ent.SystemId);\n        Console.WriteLine();\n     }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlEntity#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\npublic:\n   static void DisplayEntities( XmlNamedNodeMap^ nMap )\n   {\n      for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n      {\n         XmlEntity^ ent = dynamic_cast&lt;XmlEntity^&gt;(nMap-&gt;Item( i ));\n         Console::Write( &quot; {0} &quot;, ent-&gt;NodeType );\n         Console::Write( &quot; {0} &quot;, ent-&gt;Name );\n         Console::Write( &quot; {0} &quot;, ent-&gt;NotationName );\n         Console::Write( &quot; {0} &quot;, ent-&gt;PublicId );\n         Console::Write( &quot; {0} &quot;, ent-&gt;SystemId );\n         Console::WriteLine();\n\n      }\n   }\n\n};\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all entities...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Entities;\n   Sample^ MySample = gcnew Sample;\n   MySample-&gt;DisplayEntities( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlEntity#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n      \n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(filename)\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;)     \n     Dim nMap as XmlNamedNodeMap = doc.DocumentType.Entities\n     DisplayEntities(nMap)\n  end sub\n \n  public shared sub DisplayEntities(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim ent as XmlEntity = CType(nMap.Item(i), XmlEntity)\n        Console.Write(&quot;{0} &quot;, ent.NodeType)\n        Console.Write(&quot;{0} &quot;, ent.Name)\n        Console.Write(&quot;{0} &quot;, ent.NotationName)\n        Console.Write(&quot;{0} &quot;, ent.PublicId)\n        Console.Write(&quot;{0} &quot;, ent.SystemId)\n        Console.WriteLine()\n     next\n  end sub\nend class\n</code></pre><p> The example uses the file, <code>doment.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlEntity#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_SystemId\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_SystemId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SystemId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the system identifier on the entity declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SystemId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The system identifier on the entity. If there is no system identifier, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on the entities declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlEntity#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n     XmlDocument doc = new XmlDocument();\n     doc.Load(filename);\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;);     \n     XmlNamedNodeMap nMap = doc.DocumentType.Entities;\n     DisplayEntities(nMap);\n  }\n \n  public static void DisplayEntities(XmlNamedNodeMap nMap)\n  {    \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlEntity ent = (XmlEntity) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, ent.NodeType);\n        Console.Write(&quot;{0} &quot;, ent.Name);\n        Console.Write(&quot;{0} &quot;, ent.NotationName);\n        Console.Write(&quot;{0} &quot;, ent.PublicId);\n        Console.Write(&quot;{0} &quot;, ent.SystemId);\n        Console.WriteLine();\n     }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlEntity#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\npublic:\n   static void DisplayEntities( XmlNamedNodeMap^ nMap )\n   {\n      for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n      {\n         XmlEntity^ ent = dynamic_cast&lt;XmlEntity^&gt;(nMap-&gt;Item( i ));\n         Console::Write( &quot; {0} &quot;, ent-&gt;NodeType );\n         Console::Write( &quot; {0} &quot;, ent-&gt;Name );\n         Console::Write( &quot; {0} &quot;, ent-&gt;NotationName );\n         Console::Write( &quot; {0} &quot;, ent-&gt;PublicId );\n         Console::Write( &quot; {0} &quot;, ent-&gt;SystemId );\n         Console::WriteLine();\n\n      }\n   }\n\n};\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all entities...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Entities;\n   Sample^ MySample = gcnew Sample;\n   MySample-&gt;DisplayEntities( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlEntity#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n      \n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(filename)\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;)     \n     Dim nMap as XmlNamedNodeMap = doc.DocumentType.Entities\n     DisplayEntities(nMap)\n  end sub\n \n  public shared sub DisplayEntities(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim ent as XmlEntity = CType(nMap.Item(i), XmlEntity)\n        Console.Write(&quot;{0} &quot;, ent.NodeType)\n        Console.Write(&quot;{0} &quot;, ent.Name)\n        Console.Write(&quot;{0} &quot;, ent.NotationName)\n        Console.Write(&quot;{0} &quot;, ent.PublicId)\n        Console.Write(&quot;{0} &quot;, ent.SystemId)\n        Console.WriteLine()\n     next\n  end sub\nend class\n</code></pre><p> The example uses the file <code>doment.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlEntity#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_CloneNode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_CloneNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneNode(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a duplicate of this node. Entity nodes cannot be cloned. Calling this method on an <a class=\"xref\" href=\"system.xml.xmlentity\" data-linktype=\"relative-path\">XmlEntity</a> object throws an exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode CloneNode (bool deep);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>deep</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to recursively clone the subtree under the specified node; <code>false</code> to clone only the node itself.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>Returns a copy of the <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> from which the method is called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Entity nodes cannot be cloned. Calling this method on an <a class=\"xref\" href=\"system.xml.xmlentity\" data-linktype=\"relative-path\">XmlEntity</a> object throws an exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_WriteContentTo_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_WriteContentTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteContentTo(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Saves all the children of the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. For <code>XmlEntity</code> nodes, this method has no effect.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteContentTo (System.Xml.XmlWriter w);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlWriter</code> to which you want to save.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlEntity_WriteTo_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlEntity_WriteTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteTo(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Saves the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. For <code>XmlEntity</code> nodes, this method has no effect.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteTo (System.Xml.XmlWriter w);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlWriter</code> to which you want to save.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlEntity.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlEntity.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.BaseURI\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.CloneNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.InnerText\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.InnerXml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.LocalName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.Name\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.NodeType\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.NotationName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.OuterXml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.PublicId\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.SystemId\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.WriteContentTo\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlEntity.WriteTo\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"104adb51-f48c-0372-4258-7b7966919e0d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an entity declaration, such as &amp;lt;!ENTITY... &amp;gt;.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlEntity\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlEntity.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlEntity.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlEntity","System.Xml.XmlEntity.BaseURI","System.Xml.XmlEntity.CloneNode","System.Xml.XmlEntity.InnerText","System.Xml.XmlEntity.InnerXml","System.Xml.XmlEntity.IsReadOnly","System.Xml.XmlEntity.LocalName","System.Xml.XmlEntity.Name","System.Xml.XmlEntity.NodeType","System.Xml.XmlEntity.NotationName","System.Xml.XmlEntity.OuterXml","System.Xml.XmlEntity.PublicId","System.Xml.XmlEntity.SystemId","System.Xml.XmlEntity.WriteContentTo","System.Xml.XmlEntity.WriteTo"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlEntity","System::Xml::XmlEntity","System.Xml.XmlEntity.BaseURI","System::Xml::XmlEntity::BaseURI","System.Xml.XmlEntity.CloneNode","System::Xml::XmlEntity::CloneNode","System.Xml.XmlEntity.InnerText","System::Xml::XmlEntity::InnerText","System.Xml.XmlEntity.InnerXml","System::Xml::XmlEntity::InnerXml","System.Xml.XmlEntity.IsReadOnly","System::Xml::XmlEntity::IsReadOnly","System.Xml.XmlEntity.LocalName","System::Xml::XmlEntity::LocalName","System.Xml.XmlEntity.Name","System::Xml::XmlEntity::Name","System.Xml.XmlEntity.NodeType","System::Xml::XmlEntity::NodeType","System.Xml.XmlEntity.NotationName","System::Xml::XmlEntity::NotationName","System.Xml.XmlEntity.OuterXml","System::Xml::XmlEntity::OuterXml","System.Xml.XmlEntity.PublicId","System::Xml::XmlEntity::PublicId","System.Xml.XmlEntity.SystemId","System::Xml::XmlEntity::SystemId","System.Xml.XmlEntity.WriteContentTo","System::Xml::XmlEntity::WriteContentTo","System.Xml.XmlEntity.WriteTo","System::Xml::XmlEntity::WriteTo"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"104adb51-f48c-0372-4258-7b7966919e0d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlEntity.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlEntity class | Microsoft Docs","_op_ogTitle":"XmlEntity class","description":"Represents an entity declaration, such as &lt;!ENTITY... &gt;.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlEntity","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlentity","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlentity","fileRelativePath":"System.Xml.XmlEntity.html"},"themesRelativePathToOutputRoot":"_themes/"}