{"content":"    \r\n    <h1 id=\"System_Windows_Interop_D3DImage\">\r\n      <span class=\"lang-csharp\">D3DImage</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>An <a class=\"xref\" href=\"system.windows.media.imagesource\" data-linktype=\"relative-path\">ImageSource</a> that displays a user-created Direct3D surface.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class D3DImage : System.Windows.Media.ImageSource</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable\" data-linktype=\"relative-path\">Animatable</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l5\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.imagesource\" data-linktype=\"relative-path\">System.Windows.Media.ImageSource</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l6\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">D3DImage</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ClearValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\" data-linktype=\"relative-path\">ClearValue(DependencyPropertyKey)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">CoerceValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_DependencyObjectType\" data-linktype=\"relative-path\">DependencyObjectType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetLocalValueEnumerator\" data-linktype=\"relative-path\">GetLocalValueEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">InvalidateProperty(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_IsSealed\" data-linktype=\"relative-path\">IsSealed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ReadLocalValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetCurrentValue(DependencyProperty,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyProperty,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyPropertyKey,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ShouldSerializeProperty(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CanFreeze\" data-linktype=\"relative-path\">CanFreeze</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Changed\" data-linktype=\"relative-path\">Changed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CreateInstance\" data-linktype=\"relative-path\">CreateInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze\" data-linktype=\"relative-path\">Freeze()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Freeze_System_Windows_Freezable_System_Boolean_\" data-linktype=\"relative-path\">Freeze(Freezable,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetAsFrozen\" data-linktype=\"relative-path\">GetAsFrozen()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_GetCurrentValueAsFrozen\" data-linktype=\"relative-path\">GetCurrentValueAsFrozen()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_IsFrozen\" data-linktype=\"relative-path\">IsFrozen</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnChanged\" data-linktype=\"relative-path\">OnChanged()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnFreezablePropertyChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">OnFreezablePropertyChanged(DependencyObject,DependencyObject,DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_ReadPreamble\" data-linktype=\"relative-path\">ReadPreamble()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePostscript\" data-linktype=\"relative-path\">WritePostscript()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_WritePreamble\" data-linktype=\"relative-path\">WritePreamble()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_GetAnimationBaseValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetAnimationBaseValue(DependencyProperty)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_HasAnimatedProperties\" data-linktype=\"relative-path\">HasAnimatedProperties</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ShouldSerializeStoredWeakReference_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">ShouldSerializeStoredWeakReference(DependencyObject)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.imagesource#System_Windows_Media_ImageSource_PixelsToDIPs_System_Double_System_Int32_\" data-linktype=\"relative-path\">PixelsToDIPs(Double,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.imagesource#System_Windows_Media_ImageSource_System_IFormattable_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">IFormattable.ToString(String,IFormatProvider)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.imagesource#System_Windows_Media_ImageSource_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.media.imagesource#System_Windows_Media_ImageSource_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use the D3DImage class to host Direct3D content in a Windows Presentation Foundation (WPF) application.  </p>\n<p> Call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_Lock_\" data-linktype=\"relative-path\">Lock</a> method to change the Direct3D content displayed by the D3DImage. Call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method to assign a Direct3D surface to a D3DImage. Call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_AddDirtyRect_\" data-linktype=\"relative-path\">AddDirtyRect</a> method to track updates to the Direct3D surface. Call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_Unlock_\" data-linktype=\"relative-path\">Unlock</a> method to display the changed areas.  </p>\n<p> The D3DImage class manages two display buffers, which are called the <em>back buffer</em> and the <em>front buffer</em>. The back buffer is your Direct3D surface.  Changes to the back buffer are copied forward to the front buffer when you call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_Unlock_\" data-linktype=\"relative-path\">Unlock</a> method, where it is displayed on the hardware. Occasionally, the front buffer becomes unavailable. This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities. When this occurs, your WPF application is notified by handling the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event.  How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering. The <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.  </p>\n<h2 id=\"responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering\">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</h2>\n<p> When you call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr)</a> overload or call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</a> overload with the <code>enableSoftwareFallback</code> parameter set to <code>false</code>, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed. When the front buffer is available again, the rendering system raises the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event to notify your WPF application.  You can create an event handler for the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event to restart rendering again with a valid Direct3D surface. To restart rendering, you must call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a>.  </p>\n<h2 id=\"responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering\">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</h2>\n<p> When you call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</a> overload with the <code>enableSoftwareFallback</code> parameter set to <code>true</code>, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> when the front buffer is available again.  There may be situations where the user’s device becomes unavailable.  When that occurs, call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> to release WPF’s reference to the back buffer.  If you need to reset your device, call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> with the <code>backBuffer</code> parameter set to <code>null</code>, and then call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> again with <code>backBuffer</code> set to a valid Direct3D surface.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Performance depends greatly on the settings of the Direct3D surface. For more information, see <a href=\"../Topic/Performance%20Considerations%20for%20Direct3D9%20and%20WPF%20Interoperability.md\" data-linktype=\"relative-path\">Performance Considerations for Direct3D9 and WPF Interoperability</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The D3DImage class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</a> and specify <code>true</code> for the <code>enableSoftwareFallback</code> parameter.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage__ctor\" data-linktype=\"self-bookmark\">D3DImage()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage__ctor_System_Double_System_Double_\" data-linktype=\"self-bookmark\">D3DImage(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class with the specified display resolution.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_IsFrontBufferAvailableProperty\" data-linktype=\"self-bookmark\">IsFrontBufferAvailableProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Interop.D3DImage.IsFrontBufferAvailable*</span> dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Height\" data-linktype=\"self-bookmark\">Height</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the height of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_IsFrontBufferAvailable\" data-linktype=\"self-bookmark\">IsFrontBufferAvailable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether a front buffer exists.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Metadata\" data-linktype=\"self-bookmark\">Metadata</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the metadata associated with the image source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_PixelHeight\" data-linktype=\"self-bookmark\">PixelHeight</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the height of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in pixels.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_PixelWidth\" data-linktype=\"self-bookmark\">PixelWidth</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the width of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in pixels.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Width\" data-linktype=\"self-bookmark\">Width</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the width of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_AddDirtyRect_System_Windows_Int32Rect_\" data-linktype=\"self-bookmark\">AddDirtyRect(Int32Rect)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the area of the back buffer that changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> object, making deep copies of this object&#39;s values. When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_CloneCore_System_Windows_Freezable_\" data-linktype=\"self-bookmark\">CloneCore(Freezable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the instance a clone (deep copy) of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> using base (non-animated) property values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_CloneCurrentValue\" data-linktype=\"self-bookmark\">CloneCurrentValue()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> object, making deep copies of this object&#39;s current values. Resource references, data bindings, and animations are not copied, but their current values are copied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_CloneCurrentValueCore_System_Windows_Freezable_\" data-linktype=\"self-bookmark\">CloneCurrentValueCore(Freezable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the instance a modifiable clone (deep copy) of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> using current property values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_CopyBackBuffer\" data-linktype=\"self-bookmark\">CopyBackBuffer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a software copy of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_CreateInstanceCore\" data-linktype=\"self-bookmark\">CreateInstanceCore()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, creates a new instance of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> derived class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Frees resources and performs other cleanup operations before the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_FreezeCore_System_Boolean_\" data-linktype=\"self-bookmark\">FreezeCore(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> unmodifiable or determines whether it can be made unmodifiable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_GetAsFrozenCore_System_Windows_Freezable_\" data-linktype=\"self-bookmark\">GetAsFrozenCore(Freezable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> using base (non-animated) property values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_GetCurrentValueAsFrozenCore_System_Windows_Freezable_\" data-linktype=\"self-bookmark\">GetCurrentValueAsFrozenCore(Freezable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the current instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>. If the object has animated dependency properties, their current animated values are copied.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Lock\" data-linktype=\"self-bookmark\">Lock()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Locks the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> and enables operations on the back buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_\" data-linktype=\"self-bookmark\">SetBackBuffer(D3DResourceType,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Assigns a Direct3D surface as the source of the back buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\" data-linktype=\"self-bookmark\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Assigns a Direct3D surface as the source of the back buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_TryLock_System_Windows_Duration_\" data-linktype=\"self-bookmark\">TryLock(Duration)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to lock the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> and waits for the specified duration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_Unlock\" data-linktype=\"self-bookmark\">Unlock()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decrements the lock count for the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"self-bookmark\">IsFrontBufferAvailableChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Interop.D3DImage.IsFrontBufferAvailable*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage__ctor\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">D3DImage()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public D3DImage ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default display resolution is 1/96th inch.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage__ctor_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">D3DImage(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class with the specified display resolution.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public D3DImage (double dpiX, double dpiY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dpiX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display resolution on the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dpiY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The display resolution on the y-axis.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>dpiX</code> or <code>dpiY</code> is less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default display resolution is 1/96th inch.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_IsFrontBufferAvailableProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFrontBufferAvailableProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Interop.D3DImage.IsFrontBufferAvailable*</span> dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Height\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Height_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Height</div>        \r\n          </div>\r\n    \r\n            <p>Gets the height of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed double Height { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The height of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in measure units. A measure unit is 1/96th inch.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of Height can change when a new back buffer is assigned by a call to the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_IsFrontBufferAvailable\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_IsFrontBufferAvailable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFrontBufferAvailable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether a front buffer exists.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsFrontBufferAvailable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a front buffer exists; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Occasionally, the front buffer becomes unavailable. This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities. When this occurs, your WPF application is notified by handling the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event.  How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering. The <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering. For more information, see the remarks in the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class.  </p>\n<p><a name=\"dependencyPropertyInfo_IsFrontBufferAvailable\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableProperty\" data-linktype=\"relative-path\">IsFrontBufferAvailableProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to check the IsFrontBufferAvailable property when rendering the composition target. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#2\">void CompositionTarget_Rendering(object sender, EventArgs e)\n{\n    RenderingEventArgs args = (RenderingEventArgs)e;\n\n    // It&#39;s possible for Rendering to call back twice in the same frame \n    // so only render when we haven&#39;t already rendered in this frame.\n    if (d3dimg.IsFrontBufferAvailable &amp;&amp; _lastRender != args.RenderingTime)\n    {\n        IntPtr pSurface = IntPtr.Zero;\n        HRESULT.Check(GetBackBufferNoRef(out pSurface));\n        if (pSurface != IntPtr.Zero)\n        {\n            d3dimg.Lock();\n            // Repeatedly calling SetBackBuffer with the same IntPtr is \n            // a no-op. There is no performance penalty.\n            d3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\n            HRESULT.Check(Render());\n            d3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\n            d3dimg.Unlock();\n\n            _lastRender = args.RenderingTime;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Metadata\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Metadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Metadata</div>        \r\n          </div>\r\n    \r\n            <p>Gets the metadata associated with the image source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed System.Windows.Media.ImageMetadata Metadata { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.imagemetadata\" data-linktype=\"relative-path\">ImageMetadata</a></div>\r\n                  </div>\r\n                  <p><code>null</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_PixelHeight\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_PixelHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PixelHeight</div>        \r\n          </div>\r\n    \r\n            <p>Gets the height of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in pixels.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PixelHeight { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The height of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of PixelHeight can change when a new back buffer is assigned by a call to the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the PixelHeight property to specify the changed region in the back buffer. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#3\">d3dimg.Lock();\n// Repeatedly calling SetBackBuffer with the same IntPtr is \n// a no-op. There is no performance penalty.\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\nHRESULT.Check(Render());\nd3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\nd3dimg.Unlock();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_PixelWidth\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_PixelWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PixelWidth</div>        \r\n          </div>\r\n    \r\n            <p>Gets the width of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in pixels.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PixelWidth { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The width of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of PixelWidth can change when a new back buffer is assigned by a call to the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the PixelWidth property to specify the changed region in the back buffer. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#3\">d3dimg.Lock();\n// Repeatedly calling SetBackBuffer with the same IntPtr is \n// a no-op. There is no performance penalty.\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\nHRESULT.Check(Render());\nd3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\nd3dimg.Unlock();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Width\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Width_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Width</div>        \r\n          </div>\r\n    \r\n            <p>Gets the width of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed double Width { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The width of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>, in measure units. A measure unit is 1/96th inch.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of Width can change when a new back buffer is assigned by a call to the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_AddDirtyRect_System_Windows_Int32Rect_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_AddDirtyRect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddDirtyRect(Int32Rect)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the area of the back buffer that changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dirtyRect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.int32rect\" data-linktype=\"relative-path\">Int32Rect</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.int32rect\" data-linktype=\"relative-path\">Int32Rect</a> that represents the area that changed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The bitmap has not been locked by a call to the <span class=\"xref\">stem.Windows.Interop.D3DImage.Lock*</span> or <span class=\"xref\">stem.Windows.Interop.D3DImage.TryLock*</span> methods.  </p>\n<p> -or-  </p>\n<p> The back buffer has not been assigned by a call to the <span class=\"xref\">stem.Windows.Interop.D3DImage.SetBackBuffer*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>One or more of the following conditions is true.  </p>\n<p> <code>dirtyRect.X</code> &lt; 0  </p>\n<p> <code>dirtyRect.Y</code> &lt; 0  </p>\n<p> <code>dirtyRect.Width</code> &lt; 0 or <code>dirtyRect.Width</code> &gt; <span class=\"xref\">stem.Windows.Interop.D3DImage.PixelWidth*</span><code>dirtyRect.Height</code> &lt; 0 or <code>dirtyRect.Height</code> &gt; <span class=\"xref\">stem.Windows.Interop.D3DImage.PixelHeight*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the AddDirtyRect method to indicate changes your code has made to the back buffer. To be rendered, the changed area on the back buffer must have a corresponding changed area on the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.  </p>\n<p> Call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> and <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_Lock_\" data-linktype=\"relative-path\">Lock</a> methods before calling the AddDirtyRect method.  </p>\n<p> Call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_Unlock_\" data-linktype=\"relative-path\">Unlock</a> method to copy the changed areas to the front buffer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> After a few calls to the AddDirtyRect method, the changed areas are merged into a single area. This means you must have valid data outside of the changed areas.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the AddDirtyRect method to specify the changed region in the back buffer. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#3\">d3dimg.Lock();\n// Repeatedly calling SetBackBuffer with the same IntPtr is \n// a no-op. There is no performance penalty.\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\nHRESULT.Check(Render());\nd3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\nd3dimg.Unlock();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Clone\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> object, making deep copies of this object&#39;s values. When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Interop.D3DImage Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a></div>\r\n                  </div>\r\n                  <p>A modifiable clone of the current object. The cloned object&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property will be <code>false</code> even if the source&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property was <code>true.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to produce modifiable copies of frozen <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> objects (or any <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_Clone_\" data-linktype=\"relative-path\">Clone</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_CloneCore_System_Windows_Freezable_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_CloneCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneCore(Freezable)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the instance a clone (deep copy) of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> using base (non-animated) property values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CloneCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceFreezable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to clone.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_CloneCurrentValue\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_CloneCurrentValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneCurrentValue()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a modifiable clone of this <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> object, making deep copies of this object&#39;s current values. Resource references, data bindings, and animations are not copied, but their current values are copied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Interop.D3DImage CloneCurrentValue ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a></div>\r\n                  </div>\r\n                  <p>A modifiable clone of the current object. The cloned object&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property will be <code>false</code> even if the source&#39;s <span class=\"xref\">stem.Windows.Freezable.IsFrozen*</span> property was <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to produce modifiable copies of frozen <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> objects (or any <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  </p>\n<p> For more information, see <a class=\"xref\" href=\"system.windows.freezable#System_Windows_Freezable_CloneCurrentValue_\" data-linktype=\"relative-path\">CloneCurrentValue</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_CloneCurrentValueCore_System_Windows_Freezable_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_CloneCurrentValueCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneCurrentValueCore(Freezable)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the instance a modifiable clone (deep copy) of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> using current property values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceFreezable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> to be cloned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_CopyBackBuffer\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_CopyBackBuffer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyBackBuffer()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a software copy of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.imaging.bitmapsource\" data-linktype=\"relative-path\">BitmapSource</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.media.imaging.bitmapsource\" data-linktype=\"relative-path\">BitmapSource</a> that is a software copy of the current state of the back buffer; otherwise, <code>null</code> if the back buffer cannot be read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CopyBackBuffer method is called by clients such as the printing system and the <a class=\"xref\" href=\"system.windows.media.imaging.rendertargetbitmap\" data-linktype=\"relative-path\">RenderTargetBitmap</a> class.  </p>\n<p> Optionally override the CopyBackBuffer method to implement custom logic and return a different <a class=\"xref\" href=\"system.windows.media.imaging.bitmapsource\" data-linktype=\"relative-path\">BitmapSource</a>. For example, you can return a placeholder <a class=\"xref\" href=\"system.windows.media.imaging.bitmapsource\" data-linktype=\"relative-path\">BitmapSource</a> if the default CopyBackBuffer implementation returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_CreateInstanceCore\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_CreateInstanceCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstanceCore()</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, creates a new instance of the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> derived class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Freezable CreateInstanceCore ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </div>\r\n                  <p>The new instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you derive from the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class, you must override the CreateInstanceCore method to enable correct cloning. The default implementation performs a <code>return new D3DImage()</code>, which will not be correct if the instance is a different class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Finalize\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Frees resources and performs other cleanup operations before the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~D3DImage ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method overrides <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a>. Application code should not call this method; an object&#39;s <code>Finalize</code> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_FreezeCore_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_FreezeCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FreezeCore(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> unmodifiable or determines whether it can be made unmodifiable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool FreezeCore (bool isChecking);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>isChecking</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Has no effect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class does not allow freezing because changes are always possible due to front buffer availability.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_GetAsFrozenCore_System_Windows_Freezable_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_GetAsFrozenCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsFrozenCore(Freezable)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> using base (non-animated) property values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceFreezable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The instance to copy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_GetCurrentValueAsFrozenCore_System_Windows_Freezable_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_GetCurrentValueAsFrozenCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrentValueAsFrozenCore(Freezable)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the current instance a frozen clone of the specified <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>. If the object has animated dependency properties, their current animated values are copied.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceFreezable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> to copy and freeze.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Lock\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Lock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Lock()</div>        \r\n          </div>\r\n    \r\n            <p>Locks the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> and enables operations on the back buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Lock ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The lock count equals <a class=\"xref\" href=\"system.uint32#System_UInt32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the Lock method to change the back buffer by calling the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_AddDirtyRect_\" data-linktype=\"relative-path\">AddDirtyRect</a> and <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> methods. While the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> is locked, your application can also render to the Direct3D surface assigned to the back buffer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Lock method blocks when the rendering system is reading the back buffer to update the front buffer. Use the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_TryLock_\" data-linktype=\"relative-path\">TryLock</a> method to avoid blocking indefinitely.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the Lock method to enable updates to the back buffer. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#3\">d3dimg.Lock();\n// Repeatedly calling SetBackBuffer with the same IntPtr is \n// a no-op. There is no performance penalty.\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\nHRESULT.Check(Render());\nd3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\nd3dimg.Unlock();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_SetBackBuffer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBackBuffer(D3DResourceType,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Assigns a Direct3D surface as the source of the back buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>backBufferType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.d3dresourcetype\" data-linktype=\"relative-path\">D3DResourceType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of Direct3D surface. Must be a valid <a class=\"xref\" href=\"system.windows.interop.d3dresourcetype\" data-linktype=\"relative-path\">D3DResourceType</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>backBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Direct3D surface to assign as the back buffer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> has not been locked by a call to the <span class=\"xref\">stem.Windows.Interop.D3DImage.Lock*</span> or <span class=\"xref\">stem.Windows.Interop.D3DImage.TryLock*</span> methods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>backBufferType</code> is not a valid <a class=\"xref\" href=\"system.windows.interop.d3dresourcetype\" data-linktype=\"relative-path\">D3DResourceType</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The creation parameters for <code>backBuffer</code> do not meet the requirements for the <code>backBufferType</code>-or-The <code>backBuffer</code> device is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the SetBackBuffer method to assign a Direct3D surface to the back buffer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Performance depends greatly on the settings of the Direct3D surface. For more information, see <a href=\"../Topic/Performance%20Considerations%20for%20Direct3D9%20and%20WPF%20Interoperability.md\" data-linktype=\"relative-path\">Performance Considerations for Direct3D9 and WPF Interoperability</a>.  </p>\n</div>\n<p> Calling the SetBackBuffer overload is identical to calling the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</a> overload with the <code>enableSoftwareFallback</code> parameter set to <code>false</code>. When you call SetBackBuffer or call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</a> with the <code>enableSoftwareFallback</code> parameter set to <code>false</code>, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed. When the front buffer is available again, the rendering system raises the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event to notify your WPF application.  You can create an event handler for the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event to restart rendering again with a valid Direct3D surface. To restart rendering, you must call SetBackBuffer.  </p>\n<p> The following list shows the required back buffer settings for the <code>IDirect3DSurface9</code> type.  </p>\n<ul>\n<li><p><code>D3DFMT_A8R8G8B8</code> or <code>D3DFMT_X8R8G8B8</code>  </p>\n</li>\n<li><p><code>D3DUSAGE_RENDERTARGET</code>  </p>\n</li>\n<li><p><code>D3DPOOL_DEFAULT</code>  </p>\n<p>Multisampling is allowed on <code>IDirect3DSurface9Ex</code> surfaces only.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the SetBackBuffer method to assign a Direct3D surface. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#3\">d3dimg.Lock();\n// Repeatedly calling SetBackBuffer with the same IntPtr is \n// a no-op. There is no performance penalty.\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\nHRESULT.Check(Render());\nd3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\nd3dimg.Unlock();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_SetBackBuffer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBackBuffer(D3DResourceType,IntPtr,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Assigns a Direct3D surface as the source of the back buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>backBufferType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.interop.d3dresourcetype\" data-linktype=\"relative-path\">D3DResourceType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of Direct3D surface. Must be a valid <a class=\"xref\" href=\"system.windows.interop.d3dresourcetype\" data-linktype=\"relative-path\">D3DResourceType</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>backBuffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Direct3D surface to assign as the back buffer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>enableSoftwareFallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to fall back on software rendering; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_System_Windows_Interop_D3DResourceType_System_IntPtr_\" data-linktype=\"relative-path\">SetBackBuffer(D3DResourceType,IntPtr)</a> overload or call the SetBackBuffer overload with the <code>enableSoftwareFallback</code> parameter set to <code>false</code>, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed. When the front buffer is available again, the rendering system raises the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event to notify your WPF application.  You can create an event handler for the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\" data-linktype=\"relative-path\">IsFrontBufferAvailableChanged</a> event to restart rendering again with a valid Direct3D surface. To restart rendering, you must call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a>.  </p>\n<p> When you call SetBackBuffer with the <code>enableSoftwareFallback</code> parameter set to <code>true</code>, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> when the front buffer is available again.  There may be situations where the user’s device becomes unavailable.  When that occurs, call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> to release WPF’s reference to the back buffer.  If you need to reset your device, call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> with <code>backBuffer</code> set to <code>null</code>, and then call <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> again with <code>backBuffer</code> set to a valid Direct3D surface.  </p>\n<p> The following list shows the required back buffer settings for the <code>IDirect3DSurface9</code> type.  </p>\n<ul>\n<li><p><code>D3DFMT_A8R8G8B8</code> or <code>D3DFMT_X8R8G8B8</code>  </p>\n</li>\n<li><p><code>D3DUSAGE_RENDERTARGET</code>  </p>\n</li>\n<li><p><code>D3DPOOL_DEFAULT</code>  </p>\n<p>Multisampling is allowed on <code>IDirect3DSurface9Ex</code> surfaces only.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_TryLock_System_Windows_Duration_\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_TryLock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryLock(Duration)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to lock the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> and waits for the specified duration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TryLock (System.Windows.Duration timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.duration\" data-linktype=\"relative-path\">Duration</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The duration to wait for the lock to be acquired.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the lock was acquired; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is set to <span class=\"xref\">stem.Windows.Duration.Automatic*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The lock count equals <a class=\"xref\" href=\"system.uint32#System_UInt32_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_Unlock\">\r\n    \r\n            <a id=\"System_Windows_Interop_D3DImage_Unlock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unlock()</div>        \r\n          </div>\r\n    \r\n            <p>Decrements the lock count for the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Unlock ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the lock count for the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> reaches zero, the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> is fully unlocked. The <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> is marked for rendering if the image has changed areas that were specified by previous calls to the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_AddDirtyRect_\" data-linktype=\"relative-path\">AddDirtyRect</a> method.  </p>\n<p> When the changes are committed and rendering occurs, additional calls to the <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_Lock_\" data-linktype=\"relative-path\">Lock</a> method block until the render thread has copied the contents of the back buffer to the front buffer. This synchronization avoids display artifacts, such as tearing.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Do not update the Direct3D surface while the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> is unlocked.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to call the Unlock method to copy the updated back buffer to the front buffer. For more information, see <a href=\"../Topic/Walkthrough:%20Hosting%20Direct3D9%20Content%20in%20WPF.md\" data-linktype=\"relative-path\">Walkthrough: Hosting Direct3D9 Content in WPF</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Interop.D3DImage#3\">d3dimg.Lock();\n// Repeatedly calling SetBackBuffer with the same IntPtr is \n// a no-op. There is no performance penalty.\nd3dimg.SetBackBuffer(D3DResourceType.IDirect3DSurface9, pSurface);\nHRESULT.Check(Render());\nd3dimg.AddDirtyRect(new Int32Rect(0, 0, d3dimg.PixelWidth, d3dimg.PixelHeight));\nd3dimg.Unlock();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Interop_D3DImage_IsFrontBufferAvailableChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFrontBufferAvailableChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Interop.D3DImage.IsFrontBufferAvailable*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handle the IsFrontBufferAvailableChanged to be notified when the status of the front buffer changes. How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering. The <a class=\"xref\" href=\"system.windows.interop.d3dimage#System_Windows_Interop_D3DImage_SetBackBuffer_\" data-linktype=\"relative-path\">SetBackBuffer</a> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering. For more information, see the remarks in the <a class=\"xref\" href=\"system.windows.interop.d3dimage\" data-linktype=\"relative-path\">D3DImage</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Interop.D3DImage.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Interop.D3DImage.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.AddDirtyRect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Clone\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.CloneCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.CloneCurrentValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.CloneCurrentValueCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.CopyBackBuffer\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.CreateInstanceCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.FreezeCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.GetAsFrozenCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Height\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.IsFrontBufferAvailable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.add_IsFrontBufferAvailableChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.remove_IsFrontBufferAvailableChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Lock\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Metadata\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.PixelHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.PixelWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.SetBackBuffer\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.TryLock\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Unlock\">\r\n<meta name=\"APIName\" content=\"System.Windows.Interop.D3DImage.Width\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7e878302-a87b-ec2e-0170-51184f23fe8f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"An  that displays a user-created Direct3D surface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Interop/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Interop.D3DImage\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Interop.D3DImage.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Interop.D3DImage.yml","open_to_public_contributors":true,"api_name":["System.Windows.Interop.D3DImage","System.Windows.Interop.D3DImage..ctor","System.Windows.Interop.D3DImage.AddDirtyRect","System.Windows.Interop.D3DImage.Clone","System.Windows.Interop.D3DImage.CloneCore","System.Windows.Interop.D3DImage.CloneCurrentValue","System.Windows.Interop.D3DImage.CloneCurrentValueCore","System.Windows.Interop.D3DImage.CopyBackBuffer","System.Windows.Interop.D3DImage.CreateInstanceCore","System.Windows.Interop.D3DImage.Finalize","System.Windows.Interop.D3DImage.FreezeCore","System.Windows.Interop.D3DImage.GetAsFrozenCore","System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore","System.Windows.Interop.D3DImage.Height","System.Windows.Interop.D3DImage.IsFrontBufferAvailable","System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged","System.Windows.Interop.D3DImage.add_IsFrontBufferAvailableChanged","System.Windows.Interop.D3DImage.remove_IsFrontBufferAvailableChanged","System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty","System.Windows.Interop.D3DImage.Lock","System.Windows.Interop.D3DImage.Metadata","System.Windows.Interop.D3DImage.PixelHeight","System.Windows.Interop.D3DImage.PixelWidth","System.Windows.Interop.D3DImage.SetBackBuffer","System.Windows.Interop.D3DImage.TryLock","System.Windows.Interop.D3DImage.Unlock","System.Windows.Interop.D3DImage.Width"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Interop.D3DImage","System::Windows::Interop::D3DImage","System.Windows.Interop.D3DImage.#ctor","System::Windows::Interop::D3DImage::#ctor","System.Windows.Interop.D3DImage.AddDirtyRect","System::Windows::Interop::D3DImage::AddDirtyRect","System.Windows.Interop.D3DImage.Clone","System::Windows::Interop::D3DImage::Clone","System.Windows.Interop.D3DImage.CloneCore","System::Windows::Interop::D3DImage::CloneCore","System.Windows.Interop.D3DImage.CloneCurrentValue","System::Windows::Interop::D3DImage::CloneCurrentValue","System.Windows.Interop.D3DImage.CloneCurrentValueCore","System::Windows::Interop::D3DImage::CloneCurrentValueCore","System.Windows.Interop.D3DImage.CopyBackBuffer","System::Windows::Interop::D3DImage::CopyBackBuffer","System.Windows.Interop.D3DImage.CreateInstanceCore","System::Windows::Interop::D3DImage::CreateInstanceCore","System.Windows.Interop.D3DImage.Finalize","System::Windows::Interop::D3DImage::Finalize","System.Windows.Interop.D3DImage.FreezeCore","System::Windows::Interop::D3DImage::FreezeCore","System.Windows.Interop.D3DImage.GetAsFrozenCore","System::Windows::Interop::D3DImage::GetAsFrozenCore","System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore","System::Windows::Interop::D3DImage::GetCurrentValueAsFrozenCore","System.Windows.Interop.D3DImage.Height","System::Windows::Interop::D3DImage::Height","System.Windows.Interop.D3DImage.IsFrontBufferAvailable","System::Windows::Interop::D3DImage::IsFrontBufferAvailable","System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged","System::Windows::Interop::D3DImage::IsFrontBufferAvailableChanged","System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty","System::Windows::Interop::D3DImage::IsFrontBufferAvailableProperty","System.Windows.Interop.D3DImage.Lock","System::Windows::Interop::D3DImage::Lock","System.Windows.Interop.D3DImage.Metadata","System::Windows::Interop::D3DImage::Metadata","System.Windows.Interop.D3DImage.PixelHeight","System::Windows::Interop::D3DImage::PixelHeight","System.Windows.Interop.D3DImage.PixelWidth","System::Windows::Interop::D3DImage::PixelWidth","System.Windows.Interop.D3DImage.SetBackBuffer","System::Windows::Interop::D3DImage::SetBackBuffer","System.Windows.Interop.D3DImage.TryLock","System::Windows::Interop::D3DImage::TryLock","System.Windows.Interop.D3DImage.Unlock","System::Windows::Interop::D3DImage::Unlock","System.Windows.Interop.D3DImage.Width","System::Windows::Interop::D3DImage::Width"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7e878302-a87b-ec2e-0170-51184f23fe8f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Interop/D3DImage.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"D3DImage class | Microsoft Docs","_op_ogTitle":"D3DImage class","description":"An  that displays a user-created Direct3D surface.\n","toc_asset_id":"_splitted/System.Windows.Interop/toc.json","toc_rel":"_splitted/System.Windows.Interop/toc.json","source_url":"","ms.assetid":"System.Windows.Interop.D3DImage","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.interop.d3dimage","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.interop.d3dimage","fileRelativePath":"System.Windows.Interop.D3DImage.html"},"themesRelativePathToOutputRoot":"_themes/"}