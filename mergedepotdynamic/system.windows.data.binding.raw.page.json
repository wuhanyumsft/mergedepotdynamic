{"content":"    \r\n    <h1 id=\"System_Windows_Data_Binding\">\r\n      <span class=\"lang-csharp\">Binding</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE --> elements), and any data source (for example, a database, an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> file, or any object that contains data).</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class Binding : System.Windows.Data.BindingBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.markup.markupextension\" data-linktype=\"relative-path\">MarkupExtension</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase\" data-linktype=\"relative-path\">System.Windows.Data.BindingBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Binding</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_BindingGroupName\" data-linktype=\"relative-path\">BindingGroupName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_Delay\" data-linktype=\"relative-path\">Delay</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_FallbackValue\" data-linktype=\"relative-path\">FallbackValue</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_ProvideValue_System_IServiceProvider_\" data-linktype=\"relative-path\">ProvideValue(IServiceProvider)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_ShouldSerializeFallbackValue\" data-linktype=\"relative-path\">ShouldSerializeFallbackValue()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_ShouldSerializeTargetNullValue\" data-linktype=\"relative-path\">ShouldSerializeTargetNullValue()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_StringFormat\" data-linktype=\"relative-path\">StringFormat</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_TargetNullValue\" data-linktype=\"relative-path\">TargetNullValue</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p><!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> data binding provides a simple and consistent way for applications to present and interact with data. Data binding enables you to synchronize the values of the properties of two different objects.  </p>\n<p> To establish a binding, use the Binding class or one of the other classes that inherit <a class=\"xref\" href=\"system.windows.data.bindingbase\" data-linktype=\"relative-path\">BindingBase</a>. Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.  </p>\n<p> <img src=\"add/media/databindingmostbasic.png\" alt=\"Basic data binding diagram\" title=\"Basic data binding diagram\" data-linktype=\"relative-path\">  </p>\n<p> The figure demonstrates the following fundamental <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE --> data binding concepts.  </p>\n<ul>\n<li><p>Each binding typically has these four components: a binding target object, a target property, a binding source, and a <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Path_\" data-linktype=\"relative-path\">Path</a> to the value in the binding source to use. For example, if you want to bind the content of a <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> to the Name property of an Employee object, your target object is the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a>, the target property is the <a class=\"xref\" href=\"system.windows.controls.textbox#System_Windows_Controls_TextBox_Text_\" data-linktype=\"relative-path\">Text</a> property, the value to use is Name, and the source object is the Employee object.  </p>\n</li>\n<li><p>The target property must be a dependency property. This also means that you cannot bind a field. Most properties of <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default. (Only <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> types can define dependency properties and all <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> objects derive from <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.)  </p>\n</li>\n<li><p>Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> object. <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE --> data binding supports data in the form of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> objects and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE -->. To provide some examples, your binding source may be a <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>, any list object, a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> object that is associated with <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-adonet-md.md&quot; -->ADO.NET<!--END INCLUDE --> data or Web Services, or an XmlNode that contains your <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> data.  </p>\n<p>Use the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Mode_\" data-linktype=\"relative-path\">Mode</a> property to specify the direction of the data flow. To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged\" data-linktype=\"relative-path\">INotifyPropertyChanged</a>. For an example, see <a href=\"../Topic/How%20to:%20Implement%20Property%20Change%20Notification.md\" data-linktype=\"relative-path\">How to: Implement Property Change Notification</a>. The <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_UpdateSourceTrigger_\" data-linktype=\"relative-path\">UpdateSourceTrigger</a> property specifies the timing of source updates. For more information, see &quot;Basic Data Binding Concepts&quot; in <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.  </p>\n</li>\n</ul>\n<p><a name=\"xamlAttributeUsage_PriorityBinding\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;{Binding  declaration}&quot;/&gt;\n</code></pre><p><a name=\"xamlValues_PriorityBinding\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>declaration</em><br> Zero or more attribute-assignment clauses separated by commas (,). For more information, see <a href=\"../Topic/Binding%20Markup%20Extension.md\" data-linktype=\"relative-path\">Binding Markup Extension</a> or <a href=\"../Topic/Binding%20Declarations%20Overview.md\" data-linktype=\"relative-path\">Binding Declarations Overview</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding__ctor\" data-linktype=\"self-bookmark\">Binding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding__ctor_System_String_\" data-linktype=\"self-bookmark\">Binding(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> class with an initial path.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_DoNothing\" data-linktype=\"self-bookmark\">DoNothing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Used as a returned value to instruct the binding engine not to perform any action.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_IndexerName\" data-linktype=\"self-bookmark\">IndexerName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Used as the <span class=\"xref\">stem.ComponentModel.PropertyChangedEventArgs.PropertyName*</span> of <a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a> to indicate that an indexer property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_SourceUpdatedEvent\" data-linktype=\"self-bookmark\">SourceUpdatedEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_TargetUpdatedEvent\" data-linktype=\"self-bookmark\">TargetUpdatedEvent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_XmlNamespaceManagerProperty\" data-linktype=\"self-bookmark\">XmlNamespaceManagerProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Data.Binding.XmlNamespaceManager*</span> attached property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_AsyncState\" data-linktype=\"self-bookmark\">AsyncState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets opaque data passed to the asynchronous data dispatcher.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_BindsDirectlyToSource\" data-linktype=\"self-bookmark\">BindsDirectlyToSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to evaluate the <span class=\"xref\">stem.Windows.Data.Binding.Path*</span> relative to the data item or the <a class=\"xref\" href=\"system.windows.data.datasourceprovider\" data-linktype=\"relative-path\">DataSourceProvider</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_Converter\" data-linktype=\"self-bookmark\">Converter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the converter to use.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ConverterCulture\" data-linktype=\"self-bookmark\">ConverterCulture</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the culture in which to evaluate the converter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ConverterParameter\" data-linktype=\"self-bookmark\">ConverterParameter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the parameter to pass to the <span class=\"xref\">stem.Windows.Data.Binding.Converter*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ElementName\" data-linktype=\"self-bookmark\">ElementName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the element to use as the binding source object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_IsAsync\" data-linktype=\"self-bookmark\">IsAsync</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> should get and set values asynchronously.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_Mode\" data-linktype=\"self-bookmark\">Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates the direction of the data flow in the binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_NotifyOnSourceUpdated\" data-linktype=\"self-bookmark\">NotifyOnSourceUpdated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to raise the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> event when a value is transferred from the binding target to the binding source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_NotifyOnTargetUpdated\" data-linktype=\"self-bookmark\">NotifyOnTargetUpdated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to raise the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> event when a value is transferred from the binding source to the binding target.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_NotifyOnValidationError\" data-linktype=\"self-bookmark\">NotifyOnValidationError</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to raise the <span class=\"xref\">stem.Windows.Controls.Validation.Error</span> attached event on the bound object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_Path\" data-linktype=\"self-bookmark\">Path</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the path to the binding source property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_RelativeSource\" data-linktype=\"self-bookmark\">RelativeSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the binding source by specifying its location relative to the position of the binding target.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_Source\" data-linktype=\"self-bookmark\">Source</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object to use as the binding source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_UpdateSourceExceptionFilter\" data-linktype=\"self-bookmark\">UpdateSourceExceptionFilter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> with your binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_UpdateSourceTrigger\" data-linktype=\"self-bookmark\">UpdateSourceTrigger</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that determines the timing of binding source updates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ValidatesOnDataErrors\" data-linktype=\"self-bookmark\">ValidatesOnDataErrors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to include the <a class=\"xref\" href=\"system.windows.controls.dataerrorvalidationrule\" data-linktype=\"relative-path\">DataErrorValidationRule</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ValidatesOnExceptions\" data-linktype=\"self-bookmark\">ValidatesOnExceptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to include the <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ValidatesOnNotifyDataErrors\" data-linktype=\"self-bookmark\">ValidatesOnNotifyDataErrors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to include the <a class=\"xref\" href=\"system.windows.controls.notifydataerrorvalidationrule\" data-linktype=\"relative-path\">NotifyDataErrorValidationRule</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ValidationRules\" data-linktype=\"self-bookmark\">ValidationRules</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of rules that check the validity of the user input.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_XPath\" data-linktype=\"self-bookmark\">XPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an <code>XPath</code> query that returns the value on the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> binding source to use.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_AddSourceUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\" data-linktype=\"self-bookmark\">AddSourceUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a handler for the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_AddTargetUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\" data-linktype=\"self-bookmark\">AddTargetUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a handler for the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_GetXmlNamespaceManager_System_Windows_DependencyObject_\" data-linktype=\"self-bookmark\">GetXmlNamespaceManager(DependencyObject)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> namespace manager object used by the binding attached to the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_RemoveSourceUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\" data-linktype=\"self-bookmark\">RemoveSourceUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a handler for the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_RemoveTargetUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\" data-linktype=\"self-bookmark\">RemoveTargetUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a handler for the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> attached event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_SetXmlNamespaceManager_System_Windows_DependencyObject_System_Xml_XmlNamespaceManager_\" data-linktype=\"self-bookmark\">SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets a namespace manager object used by the binding attached to the provided element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ShouldSerializePath\" data-linktype=\"self-bookmark\">ShouldSerializePath()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Data.Binding.Path*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ShouldSerializeSource\" data-linktype=\"self-bookmark\">ShouldSerializeSource()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Data.Binding.Source*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Data_Binding_ShouldSerializeValidationRules\" data-linktype=\"self-bookmark\">ShouldSerializeValidationRules()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Data.Binding.ValidationRules*</span> property should be persisted.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding__ctor\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Binding()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Binding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Binding(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> class with an initial path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Binding (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The initial <span class=\"xref\">stem.Windows.Data.Binding.Path*</span> for the binding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_DoNothing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoNothing</div>        \r\n          </div>\r\n    \r\n            <p>Used as a returned value to instruct the binding engine not to perform any action.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly object DoNothing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A binding source property or a converter can return DoNothing to instruct the binding engine not to perform any action. For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> in a <a class=\"xref\" href=\"system.windows.data.prioritybinding\" data-linktype=\"relative-path\">PriorityBinding</a>, or not to use the <code>FallBackValue</code> or default value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_IndexerName\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexerName</div>        \r\n          </div>\r\n    \r\n            <p>Used as the <span class=\"xref\">stem.ComponentModel.PropertyChangedEventArgs.PropertyName*</span> of <a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a> to indicate that an indexer property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string IndexerName;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_SourceUpdatedEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SourceUpdatedEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_TargetUpdatedEvent\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TargetUpdatedEvent</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_XmlNamespaceManagerProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlNamespaceManagerProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Data.Binding.XmlNamespaceManager*</span> attached property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_AsyncState\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_AsyncState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsyncState</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets opaque data passed to the asynchronous data dispatcher.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object AsyncState { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Data passed to the asynchronous data dispatcher.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_BindsDirectlyToSource\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_BindsDirectlyToSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BindsDirectlyToSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to evaluate the <span class=\"xref\">stem.Windows.Data.Binding.Path*</span> relative to the data item or the <a class=\"xref\" href=\"system.windows.data.datasourceprovider\" data-linktype=\"relative-path\">DataSourceProvider</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BindsDirectlyToSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> to evaluate the path relative to the data item itself; otherwise, <code>true</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The normal behavior (when this property is <code>false</code>) includes special treatment for <a class=\"xref\" href=\"system.windows.data.datasourceprovider\" data-linktype=\"relative-path\">DataSourceProvider</a> objects. In this case, the binding engine evaluates the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Path_\" data-linktype=\"relative-path\">Path</a> relative to the object obtained from the <a class=\"xref\" href=\"system.windows.data.datasourceprovider#System_Windows_Data_DataSourceProvider_Data_\" data-linktype=\"relative-path\">Data</a> property. In addition, the binding listens for the <a class=\"xref\" href=\"system.windows.data.datasourceprovider#System_Windows_Data_DataSourceProvider_DataChanged\" data-linktype=\"relative-path\">DataChanged</a> event and reacts accordingly. Setting this property to <code>true</code> overrides this behavior and gives the binding access to properties of the <a class=\"xref\" href=\"system.windows.data.datasourceprovider\" data-linktype=\"relative-path\">DataSourceProvider</a> object itself.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_Converter\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_Converter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Converter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the converter to use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Data.IValueConverter Converter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.ivalueconverter\" data-linktype=\"relative-path\">IValueConverter</a></div>\r\n                  </div>\r\n                  <p>A value of type <a class=\"xref\" href=\"system.windows.data.ivalueconverter\" data-linktype=\"relative-path\">IValueConverter</a>. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value. If a conversion cannot be made, the default converter returns <code>null</code>.  </p>\n<p> If you want to associate a custom value converter with a binding, you should create a class that implements the <a class=\"xref\" href=\"system.windows.data.ivalueconverter\" data-linktype=\"relative-path\">IValueConverter</a> interface and supply implementations for the <a class=\"xref\" href=\"system.windows.data.ivalueconverter#System_Windows_Data_IValueConverter_Convert_\" data-linktype=\"relative-path\">Convert</a> and <a class=\"xref\" href=\"system.windows.data.ivalueconverter#System_Windows_Data_IValueConverter_ConvertBack_\" data-linktype=\"relative-path\">ConvertBack</a> methods. Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation. For examples of typical conversion scenarios, see &quot;Data Conversion&quot; in the <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.  </p>\n<p><a name=\"xamlAttributeUsage_Converter\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object Converter=&quot;myConverter&quot;/&gt;\n</code></pre><p><a name=\"xamlValues_Converter\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>myConverter</em><br> A resource reference to a class that implements the <a class=\"xref\" href=\"system.windows.data.ivalueconverter\" data-linktype=\"relative-path\">IValueConverter</a> interface, which includes implementations of the <a class=\"xref\" href=\"system.windows.data.ivalueconverter#System_Windows_Data_IValueConverter_Convert_\" data-linktype=\"relative-path\">Convert</a> and <a class=\"xref\" href=\"system.windows.data.ivalueconverter#System_Windows_Data_IValueConverter_ConvertBack_\" data-linktype=\"relative-path\">ConvertBack</a> methods. To refer to a value converter, use the <a href=\"../Topic/StaticResource%20Markup%20Extension.md\" data-linktype=\"relative-path\">StaticResource Markup Extension</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ConverterCulture\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ConverterCulture_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConverterCulture</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the culture in which to evaluate the converter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Globalization.CultureInfo ConverterCulture { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </div>\r\n                  <p>The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you do not set this property, the binding engine uses the <code>Language</code> property of the binding target object. In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE --> this defaults to &quot;en-US&quot; or inherits the value from the root element (or any element) of the page, if one has been explicitly set.  </p>\n<p> For information about data conversion, see the Data Conversion section in the <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ConverterParameter\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ConverterParameter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConverterParameter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the parameter to pass to the <span class=\"xref\">stem.Windows.Data.Binding.Converter*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConverterParameter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The parameter to pass to the <span class=\"xref\">stem.Windows.Data.Binding.Converter*</span>. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the ConverterParameter property to specify how an object is converted.  This property passes additional information to a converter that you use on a binding.  When you specify a ConverterParameter, the value is passed to the <a class=\"xref\" href=\"system.windows.data.ivalueconverter#System_Windows_Data_IValueConverter_Convert_\" data-linktype=\"relative-path\">Convert</a> and <a class=\"xref\" href=\"system.windows.data.ivalueconverter#System_Windows_Data_IValueConverter_ConvertBack_\" data-linktype=\"relative-path\">ConvertBack</a> methods as the <code>parameter</code> parameter.  </p>\n<p> For an example, see <a href=\"../Topic/How%20to:%20Produce%20a%20Value%20Based%20on%20a%20List%20of%20Bound%20Items.md\" data-linktype=\"relative-path\">How to: Produce a Value Based on a List of Bound Items</a>. That example shows an implementation of an <a class=\"xref\" href=\"system.windows.data.imultivalueconverter\" data-linktype=\"relative-path\">IMultiValueConverter</a> but the usage still applies.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ElementName\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ElementName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ElementName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the element to use as the binding source object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ElementName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>Name</code> property or <a href=\"../Topic/x:Name%20Directive.md\" data-linktype=\"relative-path\">x:Name Directive</a> of the element of interest. You can refer to elements in code only if they are registered to the appropriate <a class=\"xref\" href=\"system.windows.namescope\" data-linktype=\"relative-path\">NameScope</a> through <code>RegisterName</code>. For more information, see <a href=\"../Topic/WPF%20XAML%20Namescopes.md\" data-linktype=\"relative-path\">WPF XAML Namescopes</a>.  </p>\n<p> The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is useful when you want to bind to the property of another element in your application. For example, if you want to use a <a class=\"xref\" href=\"system.windows.controls.slider\" data-linktype=\"relative-path\">Slider</a> to control the height of another control in your application, or if you want to bind the <a class=\"xref\" href=\"system.windows.controls.contentcontrol#System_Windows_Controls_ContentControl_Content_\" data-linktype=\"relative-path\">Content</a> of your control to the <a class=\"xref\" href=\"system.windows.controls.primitives.selector#System_Windows_Controls_Primitives_Selector_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property of your <a class=\"xref\" href=\"system.windows.controls.listbox\" data-linktype=\"relative-path\">ListBox</a> control.  </p>\n<p> By default, bindings inherit the data context specified by the <code>DataContext</code> property, if one has been set. However, the ElementName property is one of the ways you can explicitly set the source of a <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> and override the inherited data context. For more information, see <a href=\"../Topic/How%20to:%20Specify%20the%20Binding%20Source.md\" data-linktype=\"relative-path\">How to: Specify the Binding Source</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Source_\" data-linktype=\"relative-path\">Source</a> and <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_RelativeSource_\" data-linktype=\"relative-path\">RelativeSource</a> properties of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> class also enable you to set the source of the binding explicitly. However, only one of the three properties, ElementName, <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Source_\" data-linktype=\"relative-path\">Source</a>, and <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_RelativeSource_\" data-linktype=\"relative-path\">RelativeSource</a>, should be set for each binding, or a conflict might occur. This property throws an exception if there is a binding source conflict.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_IsAsync\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_IsAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAsync</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> should get and set values asynchronously.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAsync { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the IsAsync property when the <code>get</code> accessor of your binding source property might take a long time. One example is an image property with a <code>get</code> accessor that downloads from the Web. Setting IsAsync to <code>true</code> avoids blocking the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-ui-md.md&quot; -->UI<!--END INCLUDE --> while the download occurs.  </p>\n<p> While waiting for the value to arrive, the binding reports the <a class=\"xref\" href=\"system.windows.data.bindingbase#System_Windows_Data_BindingBase_FallbackValue_\" data-linktype=\"relative-path\">FallbackValue</a>, if one is available, or the default value of the binding target property.  </p>\n<p> However, there should not be many scenarios where you need to use the IsAsync property. The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-net-md.md&quot; -->.NET<!--END INCLUDE --> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be. When you are creating your class, consider handling extremely slow operations outside of the <code>get</code> accessor and caching the result. For more information, see <a href=\"http://msdn.microsoft.com/en-us/55825e8f-7e2e-448a-9505-7217cc91b1af\" data-linktype=\"external\">NIB: Choosing Between Properties and Methods</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_Mode\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_Mode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Mode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates the direction of the data flow in the binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Data.BindingMode Mode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> values. The default is <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a>, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.  </p>\n<p> A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <span class=\"xref\">stem.Windows.DependencyProperty.GetMetadata*</span> and then check the Boolean value of the <span class=\"xref\">stem.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To support <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> and <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> bindings, the underlying data must implement <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged\" data-linktype=\"relative-path\">INotifyPropertyChanged</a>. For details, see <a href=\"../Topic/How%20to:%20Implement%20Property%20Change%20Notification.md\" data-linktype=\"relative-path\">How to: Implement Property Change Notification</a>.  </p>\n<p> For <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> or <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> bindings, you can control the target-to-source updates by setting the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_UpdateSourceTrigger_\" data-linktype=\"relative-path\">UpdateSourceTrigger</a> property. For more information, see <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_UpdateSourceTrigger_\" data-linktype=\"relative-path\">UpdateSourceTrigger</a>.  </p>\n<p> For more information on the different binding modes, see <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_NotifyOnSourceUpdated\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_NotifyOnSourceUpdated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyOnSourceUpdated</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to raise the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> event when a value is transferred from the binding target to the binding source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool NotifyOnSourceUpdated { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> event should be raised when the binding source value is updated; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_NotifyOnTargetUpdated\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_NotifyOnTargetUpdated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyOnTargetUpdated</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to raise the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> event when a value is transferred from the binding source to the binding target.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool NotifyOnTargetUpdated { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> event should be raised when the binding target value is updated; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_NotifyOnValidationError\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_NotifyOnValidationError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyOnValidationError</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to raise the <span class=\"xref\">stem.Windows.Controls.Validation.Error</span> attached event on the bound object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool NotifyOnValidationError { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Windows.Controls.Validation.Error</span> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the binding has <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ValidationRules_\" data-linktype=\"relative-path\">ValidationRules</a> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property. If a rule invalidates a value, the binding engine creates a <a class=\"xref\" href=\"system.windows.controls.validationerror\" data-linktype=\"relative-path\">ValidationError</a> object and adds it to the <a class=\"xref\" href=\"system.windows.controls.validation\" data-linktype=\"relative-path\">Validation</a>.&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt; collection of the bound object. When the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; property is not empty, the &lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName&gt; attached property of the object is set to <code>true</code>. If the NotifyOnValidationError property of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> is set to <code>true</code>, then the binding engine raises the &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; attached event on the object.  </p>\n<p> For a detailed discussion of the validation process, see the Data Validation section in the <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_Path\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_Path_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Path</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the path to the binding source property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.PropertyPath Path { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertypath\" data-linktype=\"relative-path\">PropertyPath</a></div>\r\n                  </div>\r\n                  <p>The path to the binding source. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use. For more information about these data binding concepts, see <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.  </p>\n<p> Use the Path property to specify the source value you want to bind to:  </p>\n<ul>\n<li><p>In the simplest case, the Path property value is the name of the property of the source object to use for the binding, such as <code>Path=PropertyName</code>.  </p>\n</li>\n<li><p>Subproperties of a property can be specified by a syntax similar to that used in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-cshrp-md.md&quot; -->C#<!--END INCLUDE -->. For instance, the clause <code>Path=ShoppingCart.Order</code> sets the binding to the subproperty <code>Order</code> of the object or property <code>ShoppingCart</code>.  </p>\n</li>\n<li><p>To bind to an attached property, place parentheses around the attached property. For example, to bind to the attached property &lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=fullName&gt;, the syntax is <code>Path=(DockPanel.Dock)</code>.  </p>\n</li>\n<li><p>Indexers of a property can be specified within square brackets following the property name where the indexer is applied. For instance, the clause <code>Path=ShoppingCart[0]</code> sets the binding to the index that corresponds to how your property&#39;s internal indexing handles the literal string &quot;0&quot;. Multiple indexers are also supported.  </p>\n</li>\n<li><p>Indexers and subproperties can be mixed in a <code>Path</code> clause; for example, <code>Path=ShoppingCart.ShippingInfo[MailingAddress,Street].</code>  </p>\n</li>\n<li><p>Inside indexers you can have multiple indexer parameters separated by commas (,). The type of each parameter can be specified with parentheses. For example, you can have <code>Path=&quot;[(sys:Int32)42,(sys:Int32)24]&quot;</code>, where <code>sys</code> is mapped to the <code>System</code> namespace.  </p>\n</li>\n<li><p>When the source is a collection view, the current item can be specified with a slash (/). For example, the clause <code>Path=/</code> sets the binding to the current item in the view. When the source is a collection, this syntax specifies the current item of the default collection view.  </p>\n</li>\n<li><p>Property names and slashes can be combined to traverse properties that are collections. For example, <code>Path=/Offices/ManagerName</code> specifies the current item of the source collection, which contains an <code>Offices</code> property that is also a collection. Its current item is an object that contains a <code>ManagerName</code> property.  </p>\n</li>\n<li><p>Optionally, a period (.) path can be used to bind to the current source. For example, <code>Text=&quot;{Binding}&quot;</code> is equivalent to <code>Text=&quot;{Binding Path=.}&quot;</code>.  </p>\n<p>For information about path syntax, see <a href=\"../Topic/Binding%20Declarations%20Overview.md\" data-linktype=\"relative-path\">Binding Declarations Overview</a> or <a href=\"../Topic/PropertyPath%20XAML%20Syntax.md\" data-linktype=\"relative-path\">PropertyPath XAML Syntax</a>.  </p>\n<p>For <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> bindings, see the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_XPath_\" data-linktype=\"relative-path\">XPath</a> property.  </p>\n<p>To bind to an entire object, you do not need to specify the Path property. For more information, see &quot;Specifying the Path to the Value&quot; in <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a style trigger that creates a <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a> that reports a validation error message. The value of the setter binds to the error content of the current <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> (the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> using the style) using the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_RelativeSource_\" data-linktype=\"relative-path\">RelativeSource</a> property. For more information on this example, see <a href=\"../Topic/How%20to:%20Implement%20Binding%20Validation.md\" data-linktype=\"relative-path\">How to: Implement Binding Validation</a>.  </p>\n<pre><code class=\"lang-xml\" name=\"BindValidation#5\">&lt;Style x:Key=&quot;textBoxInError&quot; TargetType=&quot;{x:Type TextBox}&quot;&gt;\n  &lt;Style.Triggers&gt;\n    &lt;Trigger Property=&quot;Validation.HasError&quot; Value=&quot;true&quot;&gt;\n      &lt;Setter Property=&quot;ToolTip&quot;\n        Value=&quot;{Binding RelativeSource={x:Static RelativeSource.Self},\n                        Path=(Validation.Errors)[0].ErrorContent}&quot;/&gt;\n    &lt;/Trigger&gt;\n  &lt;/Style.Triggers&gt;\n&lt;/Style&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_RelativeSource\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_RelativeSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RelativeSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the binding source by specifying its location relative to the position of the binding target.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Data.RelativeSource RelativeSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.relativesource\" data-linktype=\"relative-path\">RelativeSource</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.data.relativesource\" data-linktype=\"relative-path\">RelativeSource</a> object specifying the relative location of the binding source to use. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.  </p>\n<p> By default, bindings inherit the data context specified by the <code>DataContext</code> property, if one has been set. However, the RelativeSource property is one of the ways you can explicitly set the source of a <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> and override the inherited data context. For more information, see <a href=\"../Topic/How%20to:%20Specify%20the%20Binding%20Source.md\" data-linktype=\"relative-path\">How to: Specify the Binding Source</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ElementName_\" data-linktype=\"relative-path\">ElementName</a> and <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Source_\" data-linktype=\"relative-path\">Source</a> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ElementName_\" data-linktype=\"relative-path\">ElementName</a>, <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Source_\" data-linktype=\"relative-path\">Source</a>, and RelativeSource, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.  </p>\n<p> For <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE --> information, see <a href=\"../Topic/RelativeSource%20MarkupExtension.md\" data-linktype=\"relative-path\">RelativeSource MarkupExtension</a>.  </p>\n<p><a name=\"xamlTextUsage_RelativeSource\"></a>   </p>\n<h2 id=\"xaml-text-usage\">XAML Text Usage</h2>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a style trigger that creates a <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a> that reports a validation error message. The value of the setter binds to the error content of the current <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> (the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> using the style) using the RelativeSource property. For more information on this example, see <a href=\"../Topic/How%20to:%20Implement%20Binding%20Validation.md\" data-linktype=\"relative-path\">How to: Implement Binding Validation</a>.  </p>\n<pre><code class=\"lang-xml\" name=\"BindValidation#5\">&lt;Style x:Key=&quot;textBoxInError&quot; TargetType=&quot;{x:Type TextBox}&quot;&gt;\n  &lt;Style.Triggers&gt;\n    &lt;Trigger Property=&quot;Validation.HasError&quot; Value=&quot;true&quot;&gt;\n      &lt;Setter Property=&quot;ToolTip&quot;\n        Value=&quot;{Binding RelativeSource={x:Static RelativeSource.Self},\n                        Path=(Validation.Errors)[0].ErrorContent}&quot;/&gt;\n    &lt;/Trigger&gt;\n  &lt;/Style.Triggers&gt;\n&lt;/Style&gt;\n</code></pre><p> To see the full example, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159972\" data-linktype=\"external\">Binding Validation Sample</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_Source\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_Source_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Source</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object to use as the binding source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Source { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The object to use as the binding source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, bindings inherit the data context specified by the <code>DataContext</code> property, if one has been set. However, the Source property is one of the ways you can explicitly set the source of a <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> and override the inherited data context. If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the Source property instead of the <code>DataContext</code> property.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ElementName_\" data-linktype=\"relative-path\">ElementName</a> and <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_RelativeSource_\" data-linktype=\"relative-path\">RelativeSource</a> properties also enable you to set the source of the binding explicitly. However, only one of the three properties, <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ElementName_\" data-linktype=\"relative-path\">ElementName</a>, Source, and <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_RelativeSource_\" data-linktype=\"relative-path\">RelativeSource</a>, should be set for each binding, or a conflict can occur. This property throws an exception if there is a binding source conflict.  </p>\n<p> To clear this property, set it to <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">System.Windows.DependencyProperty.UnsetValue</a>.  </p>\n<p><a name=\"xamlAttributeUsage_Source\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object Source=&quot;object&quot;/&gt;\n</code></pre><p><a name=\"xamlValues_Source\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>object</em><br> An existing object. To refer to an existing object, use the <a href=\"../Topic/StaticResource%20Markup%20Extension.md\" data-linktype=\"relative-path\">StaticResource Markup Extension</a></p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In this example, you have a <code>Person</code> object with a string property named <code>PersonName</code>. The <code>Person</code> object is defined in the namespace called <code>SDKSample</code>.  </p>\n<p> The following example instantiates the <code>Person</code> object with a <code>PersonName</code> property value of <code>Joe</code>. This is done in the <code>Resources</code> section and assigned an <code>x:Key</code>.  </p>\n<pre><code class=\"lang-xml\" name=\"SimpleBinding#Instantiation\">&lt;Window\n  xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\n  xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\n  xmlns:src=&quot;clr-namespace:SDKSample&quot;\n  SizeToContent=&quot;WidthAndHeight&quot;\n  Title=&quot;Simple Data Binding Sample&quot;&gt;\n\n  &lt;Window.Resources&gt;\n    &lt;src:Person x:Key=&quot;myDataSource&quot; PersonName=&quot;Joe&quot;/&gt;\n</code></pre><pre><code class=\"lang-xml\" name=\"SimpleBinding#2\">&lt;/Window.Resources&gt;\n</code></pre><pre><code class=\"lang-xml\" name=\"SimpleBinding#EndWindow\">&lt;/Window&gt;\n</code></pre><p> To bind to the <code>PersonName</code> property you would do the following:  </p>\n<pre><code class=\"lang-xml\" name=\"SimpleBinding#BDO1\">&lt;TextBlock Text=&quot;{Binding Source={StaticResource myDataSource}, Path=PersonName}&quot;/&gt;\n</code></pre><p> As a result, the <a class=\"xref\" href=\"system.windows.controls.textblock\" data-linktype=\"relative-path\">TextBlock</a> appears with the value &quot;Joe&quot;.  </p>\n<p> In the following example, the Source values of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> objects are set to the <code>static</code> property <a class=\"xref\" href=\"system.windows.application#System_Windows_Application_Current_\" data-linktype=\"relative-path\">Current</a>:  </p>\n<pre><code class=\"lang-xml\" name=\"DataBindingLab#ComboBoxMultiBinding\">&lt;ComboBox.IsEnabled&gt;\n    &lt;MultiBinding Converter=&quot;{StaticResource specialFeaturesConverter}&quot;&gt;\n        &lt;Binding Path=&quot;CurrentUser.Rating&quot; \n          Source=&quot;{x:Static Application.Current}&quot;/&gt;\n        &lt;Binding Path=&quot;CurrentUser.MemberSince&quot; \n    Source=&quot;{x:Static Application.Current}&quot;/&gt;\n    &lt;/MultiBinding&gt;\n&lt;/ComboBox.IsEnabled&gt;\n</code></pre><p> For the full example, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=163703\" data-linktype=\"external\">Data Binding Demo</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_UpdateSourceExceptionFilter\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_UpdateSourceExceptionFilter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateSourceExceptionFilter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> with your binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.updatesourceexceptionfiltercallback\" data-linktype=\"relative-path\">UpdateSourceExceptionFilterCallback</a></div>\r\n                  </div>\r\n                  <p>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property. If you have associated the <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> with your <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> object, you can use this property to set a handler to provide custom logic for handling these exceptions. If an UpdateSourceExceptionFilter is not specified on the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a>, the binding engine creates a <a class=\"xref\" href=\"system.windows.controls.validationerror\" data-linktype=\"relative-path\">ValidationError</a> with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.controls.textbox#System_Windows_Controls_TextBox_Text_\" data-linktype=\"relative-path\">Text</a> property of the following <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> is data-bound to a source property <code>Age3</code> that is of type <code>int</code>. The <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  </p>\n<pre><code class=\"lang-xml\" name=\"BindValidation#tbExceptionFilter\">&lt;TextBox Name=&quot;textBox3&quot; Width=&quot;50&quot; FontSize=&quot;15&quot;\n         Grid.Row=&quot;4&quot; Grid.Column=&quot;1&quot; Margin=&quot;2&quot;\n         Validation.ErrorTemplate=&quot;{StaticResource validationTemplate}&quot;\n         Style=&quot;{StaticResource textBoxInError}&quot;&gt;\n  &lt;TextBox.Text&gt;\n    &lt;Binding Path=&quot;Age3&quot; Source=&quot;{StaticResource ods}&quot;\n             UpdateSourceTrigger=&quot;PropertyChanged&quot;&gt;\n      &lt;Binding.ValidationRules&gt;\n        &lt;ExceptionValidationRule/&gt;\n      &lt;/Binding.ValidationRules&gt;\n    &lt;/Binding&gt;\n  &lt;/TextBox.Text&gt;\n&lt;/TextBox&gt;\n</code></pre><p> You can provide custom logic to handle those exceptions. The following example shows how to use the UpdateSourceExceptionFilter property to set an <a class=\"xref\" href=\"system.windows.data.updatesourceexceptionfiltercallback\" data-linktype=\"relative-path\">UpdateSourceExceptionFilterCallback</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"BindValidation#filtercallback\">\nBindingExpression myBindingExpression = textBox3.GetBindingExpression(TextBox.TextProperty);\nBinding myBinding = myBindingExpression.ParentBinding;\nmyBinding.UpdateSourceExceptionFilter = new UpdateSourceExceptionFilterCallback(ReturnExceptionHandler);\nmyBindingExpression.UpdateSource();\n</code></pre><p> The following is an example implementation of an <a class=\"xref\" href=\"system.windows.data.updatesourceexceptionfiltercallback\" data-linktype=\"relative-path\">UpdateSourceExceptionFilterCallback</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"BindValidation#Handler\">object ReturnExceptionHandler(object bindingExpression, Exception exception)\n{\n    return &quot;This is from the UpdateSourceExceptionFilterCallBack.&quot;;\n}\n</code></pre><p> The <a class=\"xref\" href=\"system.windows.data.updatesourceexceptionfiltercallback\" data-linktype=\"relative-path\">UpdateSourceExceptionFilterCallback</a> can also return <code>null</code>, the exception itself, or a <a class=\"xref\" href=\"system.windows.controls.validationerror\" data-linktype=\"relative-path\">ValidationError</a>. For more information, see <a class=\"xref\" href=\"system.windows.data.updatesourceexceptionfiltercallback\" data-linktype=\"relative-path\">UpdateSourceExceptionFilterCallback</a>.  </p>\n<p> For the complete sample, see <a href=\"http://go.microsoft.com/fwlink/?LinkID=159972\" data-linktype=\"external\">Binding Validation Sample</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_UpdateSourceTrigger\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_UpdateSourceTrigger_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateSourceTrigger</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that determines the timing of binding source updates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a> values. The default is <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a>, which returns the default <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a> value of the target dependency property. However, the default value for most dependency properties is <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a>, while the <span class=\"xref\">stem.Windows.Controls.TextBox.Text*</span> property has a default value of <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a>.  </p>\n<p> A programmatic way to determine the default UpdateSourceTrigger value of a dependency property is to get the property metadata of the property using <span class=\"xref\">stem.Windows.DependencyProperty.GetMetadata*</span> and then check the value of the <span class=\"xref\">stem.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Bindings that are <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> or <a class=\"xref\" href=\"system.windows.data.bindingmode\" data-linktype=\"relative-path\">BindingMode</a> listen for changes in the target property and propagate them back to the source. This is known as updating the source. Usually, these updates happen whenever the target property changes. This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields. Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value. Therefore, the default UpdateSourceTrigger value of the <a class=\"xref\" href=\"system.windows.controls.textbox#System_Windows_Controls_TextBox_Text_\" data-linktype=\"relative-path\">Text</a> property is <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a> and not <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a>.  </p>\n<p> If you set the UpdateSourceTrigger value to <a class=\"xref\" href=\"system.windows.data.updatesourcetrigger\" data-linktype=\"relative-path\">UpdateSourceTrigger</a>, you must call the <a class=\"xref\" href=\"system.windows.data.bindingexpression#System_Windows_Data_BindingExpression_UpdateSource_\" data-linktype=\"relative-path\">UpdateSource</a> method or the changes will not propagate back to the source.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ValidatesOnDataErrors\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ValidatesOnDataErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidatesOnDataErrors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to include the <a class=\"xref\" href=\"system.windows.controls.dataerrorvalidationrule\" data-linktype=\"relative-path\">DataErrorValidationRule</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ValidatesOnDataErrors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to include the <a class=\"xref\" href=\"system.windows.controls.dataerrorvalidationrule\" data-linktype=\"relative-path\">DataErrorValidationRule</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property provides an alternative to using the <a class=\"xref\" href=\"system.windows.controls.dataerrorvalidationrule\" data-linktype=\"relative-path\">DataErrorValidationRule</a> element explicitly. The <a class=\"xref\" href=\"system.windows.controls.dataerrorvalidationrule\" data-linktype=\"relative-path\">DataErrorValidationRule</a> is a built-in validation rule that checks for errors that are raised by the <a class=\"xref\" href=\"system.componentmodel.idataerrorinfo\" data-linktype=\"relative-path\">IDataErrorInfo</a> implementation of the source object. If an error is raised, the binding engine creates a <a class=\"xref\" href=\"system.windows.controls.validationerror\" data-linktype=\"relative-path\">ValidationError</a> with the error and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.  </p>\n<p> ValidatesOnDataErrors is introduced in the .NET Framework version 3.5.  For more information, see <a href=\"../Topic/.NET%20Framework%20Versions%20and%20Dependencies.md\" data-linktype=\"relative-path\">.NET Framework Versions and Dependencies</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following examples uses <a class=\"xref\" href=\"system.componentmodel.idataerrorinfo\" data-linktype=\"relative-path\">IDataErrorInfo</a> and ValidatesOnDataErrors to validate user input in a <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a>. The first example creates a data type that implements <a class=\"xref\" href=\"system.componentmodel.idataerrorinfo\" data-linktype=\"relative-path\">IDataErrorInfo</a> to report validation errors.  </p>\n<pre><code class=\"lang-cs\" name=\"BindingValidationAttributesSnippets#IDataErrorInfoData\">public class PersonImplementsIDataErrorInfo : IDataErrorInfo\n{\n    private int age;\n\n    public int Age\n    {\n        get { return age; }\n        set { age = value; }\n    }\n\n    public string Error\n    {\n        get\n        {\n            return &quot;&quot;;\n        }\n    }\n\n    public string this[string name]\n    {\n        get\n        {\n            string result = null;\n\n            if (name == &quot;Age&quot;)\n            {\n                if (this.age &lt; 0 || this.age &gt; 150)\n                {\n                    result = &quot;Age must not be less than 0 or greater than 150.&quot;;\n                }\n            }\n            return result;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BindingValidationAttributesSnippets#IDataErrorInfoData\">Public Class PersonImplementsIDataErrorInfo\n    Implements System.ComponentModel.IDataErrorInfo\n    Private m_age As Integer\n\n    Public Property Age() As Integer\n        Get\n            Return m_age\n        End Get\n        Set(ByVal value As Integer)\n            m_age = value\n        End Set\n    End Property\n\n    Public ReadOnly Property [Error]() As String _\n                    Implements System.ComponentModel.IDataErrorInfo.Error\n        Get\n            Return &quot;&quot;\n        End Get\n    End Property\n\n    Default Public ReadOnly Property Item(ByVal name As String) As String _\n                            Implements System.ComponentModel.IDataErrorInfo.Item\n        Get\n            Dim result As String = Nothing\n\n            If name = &quot;Age&quot; Then\n                If Me.m_age &lt; 0 OrElse Me.m_age &gt; 150 Then\n                    result = &quot;Age must not be less than 0 or greater than 150.&quot;\n                End If\n            End If\n            Return result\n        End Get\n    End Property\nEnd Class\n</code></pre><p> The following example binds the <code>Age</code> property to the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> and sets ValidatesOnDataErrors to <code>true</code> on the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a>.  When the user enters an invalid value, a red border appears in the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> and the <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a> reports the error message.  </p>\n<pre><code class=\"lang-xml\" name=\"BindingValidationAttributesSnippets#IDataErrorInfoXaml\">&lt;StackPanel Margin=&quot;20&quot;&gt;\n  &lt;StackPanel.Resources&gt;\n    &lt;src:PersonImplementsIDataErrorInfo x:Key=&quot;data&quot;/&gt;\n    \n    &lt;!--The tool tip for the TextBox to display the validation error message.--&gt;\n    &lt;Style x:Key=&quot;textBoxInError&quot; TargetType=&quot;TextBox&quot;&gt;\n      &lt;Style.Triggers&gt;\n        &lt;Trigger Property=&quot;Validation.HasError&quot; Value=&quot;true&quot;&gt;\n          &lt;Setter Property=&quot;ToolTip&quot;\n              Value=&quot;{Binding RelativeSource={x:Static RelativeSource.Self},\n              Path=(Validation.Errors)[0].ErrorContent}&quot;/&gt;\n        &lt;/Trigger&gt;\n      &lt;/Style.Triggers&gt;\n    &lt;/Style&gt;\n\n  &lt;/StackPanel.Resources&gt;\n  &lt;TextBlock&gt;Enter your age:&lt;/TextBlock&gt;\n  &lt;TextBox Style=&quot;{StaticResource textBoxInError}&quot;&gt;\n    &lt;TextBox.Text&gt;\n      &lt;!--ValidatesOnDataErrors to is set to True, so the Binding\n          checks for errors raised by the IDataErrorInfo object.\n          An alternative syntax is to add &lt;DataErrorValidationRule/&gt; within\n          the &lt;Binding.ValidationRules&gt; section.--&gt;\n      &lt;Binding Path=&quot;Age&quot; Source=&quot;{StaticResource data}&quot;\n               ValidatesOnDataErrors=&quot;True&quot;\n               UpdateSourceTrigger=&quot;PropertyChanged&quot;&gt;\n      &lt;/Binding&gt;\n    &lt;/TextBox.Text&gt;\n  &lt;/TextBox&gt;\n  &lt;TextBlock&gt;Mouse-over to see the validation error message.&lt;/TextBlock&gt;\n&lt;/StackPanel&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ValidatesOnExceptions\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ValidatesOnExceptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidatesOnExceptions</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to include the <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ValidatesOnExceptions { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to include the <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property provides an alternative to using the <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> element explicitly. The <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property. If an exception is thrown, the binding engine creates a <a class=\"xref\" href=\"system.windows.controls.validationerror\" data-linktype=\"relative-path\">ValidationError</a> with the exception and adds it to the &lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName&gt; collection of the bound element. The lack of an error clears this validation feedback, unless another rule raises a validation issue.  </p>\n<p> ValidatesOnExceptions is introduced in the .NET Framework version 3.5.  For more information, see <a href=\"../Topic/.NET%20Framework%20Versions%20and%20Dependencies.md\" data-linktype=\"relative-path\">.NET Framework Versions and Dependencies</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following examples use ValidatesOnExceptions to validate user input in a <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a>. The first example creates a data type that throws an exception when the <code>Age</code> property is set to an invalid property.  </p>\n<pre><code class=\"lang-cs\" name=\"BindingValidationAttributesSnippets#ThrowExceptionData\">public class PersonThrowException\n{\n    private int age;\n\n    public int Age\n    {\n        get { return age; }\n        set\n        {\n\n            if (value &lt; 0 || value &gt; 150)\n            {\n                throw new ArgumentException(&quot;Age must not be less than 0 or greater than 150.&quot;);\n            }\n            age = value;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"BindingValidationAttributesSnippets#ThrowExceptionData\">Public Class PersonThrowException\n    Private m_age As Integer\n\n    Public Property Age() As Integer\n        Get\n            Return m_age\n        End Get\n        Set(ByVal value As Integer)\n\n            If value &lt; 0 OrElse value &gt; 150 Then\n                Throw New ArgumentException(&quot;Age must not be less than 0 or greater than 150.&quot;)\n            End If\n            m_age = value\n        End Set\n    End Property\nEnd Class\n</code></pre><p> The following example binds the <code>Age</code> property to the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> and sets ValidatesOnExceptions to <code>true</code> on the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a>. When the user enters an invalid value, a red border appears in the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> and the <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a> reports the error message.  </p>\n<pre><code class=\"lang-xml\" name=\"BindingValidationAttributesSnippets#ThrowExceptionXaml\">&lt;StackPanel Margin=&quot;20&quot;&gt;\n  &lt;StackPanel.Resources&gt;\n    \n    &lt;src:PersonThrowException x:Key=&quot;data&quot;/&gt;\n    \n    &lt;!--The tool tip for the TextBox to display the validation error message.--&gt;\n    &lt;Style x:Key=&quot;textBoxInError&quot; TargetType=&quot;TextBox&quot;&gt;\n      &lt;Style.Triggers&gt;\n        &lt;Trigger Property=&quot;Validation.HasError&quot; Value=&quot;true&quot;&gt;\n          &lt;Setter Property=&quot;ToolTip&quot;\n              Value=&quot;{Binding RelativeSource={x:Static RelativeSource.Self},\n              Path=(Validation.Errors)[0].ErrorContent}&quot;/&gt;\n        &lt;/Trigger&gt;\n      &lt;/Style.Triggers&gt;\n    &lt;/Style&gt;\n\n  &lt;/StackPanel.Resources&gt;\n  &lt;TextBlock&gt;Enter your age:&lt;/TextBlock&gt;\n  &lt;TextBox Style=&quot;{StaticResource textBoxInError}&quot;&gt;\n    &lt;TextBox.Text&gt;\n      &lt;!--By setting ValidatesOnExceptions to True, it checks for exceptions\n        that are thrown during the update of the source property.\n        An alternative syntax is to add &lt;ExceptionValidationRule/&gt; within\n        the &lt;Binding.ValidationRules&gt; section.--&gt;\n      &lt;Binding Path=&quot;Age&quot; Source=&quot;{StaticResource data}&quot;\n               ValidatesOnExceptions=&quot;True&quot;\n               UpdateSourceTrigger=&quot;PropertyChanged&quot;&gt;\n      &lt;/Binding&gt;\n    &lt;/TextBox.Text&gt;\n  &lt;/TextBox&gt;\n  &lt;TextBlock&gt;Mouse-over to see the validation error message.&lt;/TextBlock&gt;\n&lt;/StackPanel&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ValidatesOnNotifyDataErrors\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ValidatesOnNotifyDataErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidatesOnNotifyDataErrors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to include the <a class=\"xref\" href=\"system.windows.controls.notifydataerrorvalidationrule\" data-linktype=\"relative-path\">NotifyDataErrorValidationRule</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ValidatesOnNotifyDataErrors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to include the <a class=\"xref\" href=\"system.windows.controls.notifydataerrorvalidationrule\" data-linktype=\"relative-path\">NotifyDataErrorValidationRule</a>; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When ValidatesOnNotifyDataErrors is <code>true</code>, the binding checks for and reports errors that are raised by a data source that implements <a class=\"xref\" href=\"system.componentmodel.inotifydataerrorinfo\" data-linktype=\"relative-path\">INotifyDataErrorInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ValidationRules\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ValidationRules_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidationRules</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of rules that check the validity of the user input.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE --> data binding model enables you to associate ValidationRules with your <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> or <a class=\"xref\" href=\"system.windows.data.multibinding\" data-linktype=\"relative-path\">MultiBinding</a> object. You can create custom rules by deriving from the <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> class and implementing the <a class=\"xref\" href=\"system.windows.controls.validationrule#System_Windows_Controls_ValidationRule_Validate_\" data-linktype=\"relative-path\">Validate</a> method, or you can use the built-in <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a>, which invalidates a value if there are exceptions during source updates.  </p>\n<p> The binding engine checks each <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property. For a detailed discussion of the validation process, see the Data Validation section in the <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property can be set in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xaml-md.md&quot; -->Extensible Application Markup Language (XAML)<!--END INCLUDE --> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <code>Add</code>. The property to access the collection object is read-only, whereas the collection itself is read-write.  </p>\n</div>\n<p><a name=\"xamlPropertyElementUsage_ValidationRules\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.ValidationRules&gt;  \n    oneOrMoreValidationRules  \n  &lt;/object.ValidationRules&gt;  \n&lt;/object&gt;\n</code></pre><p><a name=\"xamlValues_ValidationRules\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>oneOrMoreValidationRules</em><br> One or more <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> objects. You can use the <a class=\"xref\" href=\"system.windows.controls.exceptionvalidationrule\" data-linktype=\"relative-path\">ExceptionValidationRule</a> class or create custom rules by subclassing the <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_XPath\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_XPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an <code>XPath</code> query that returns the value on the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> binding source to use.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string XPath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>XPath</code> query. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the binding source is <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> data instead of a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-clr-md.md&quot; -->common language runtime (CLR)<!--END INCLUDE --> object, the XPath property is used instead of the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Path_\" data-linktype=\"relative-path\">Path</a> property to indicate the path to the value on the binding source to use.  </p>\n<p> By setting the XPath property, you are creating an <code>XPath</code> query to select a node or a collection of nodes (<a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">System.Xml.XmlElement</a> and <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">System.Xml.XmlAttribute</a> both derive from <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a>). <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a> is a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-clr-md.md&quot; -->common language runtime (CLR)<!--END INCLUDE --> object, which means you can bind to its properties using the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Path_\" data-linktype=\"relative-path\">Path</a> property.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_\" data-linktype=\"relative-path\">SelectNodes</a> method handles the <code>XPath</code> expressions from the XPath property. <code>XPath</code> functions are not supported. For <code>XPath</code> expression information, see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_\" data-linktype=\"relative-path\">SelectNodes</a> documentation and some examples provided in the Example section.  </p>\n<p> LINQ to XML objects <a class=\"xref\" href=\"system.xml.linq.xdocument\" data-linktype=\"relative-path\">XDocument</a> and <a class=\"xref\" href=\"system.xml.linq.xelement\" data-linktype=\"relative-path\">XElement</a> do not use <code>XPath</code>. For details, see <a href=\"../Topic/How%20to:%20Bind%20to%20XDocument,%20XElement,%20or%20LINQ%20for%20XML%20Query%20Results.md\" data-linktype=\"relative-path\">How to: Bind to XDocument, XElement, or LINQ for XML Query Results</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_AddSourceUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_AddSourceUpdatedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSourceUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a handler for the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a> that listens to the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler</a>&lt;<a class=\"xref\" href=\"system.windows.data.datatransfereventargs\" data-linktype=\"relative-path\">DataTransferEventArgs</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handler to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method supports attached event usage in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE -->.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_AddTargetUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_AddTargetUpdatedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddTargetUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a handler for the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a> that listens to the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler</a>&lt;<a class=\"xref\" href=\"system.windows.data.datatransfereventargs\" data-linktype=\"relative-path\">DataTransferEventArgs</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handler to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method supports attached event usage in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE -->.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_GetXmlNamespaceManager_System_Windows_DependencyObject_\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_GetXmlNamespaceManager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXmlNamespaceManager(DependencyObject)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> namespace manager object used by the binding attached to the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object from which to get namespace information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a></div>\r\n                  </div>\r\n                  <p>A returned object used for viewing <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> namespaces that relate to the binding on the passed object element. This object should be cast as <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>target</code> parameter cannot be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.  </p>\n<p> <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> namespace managers are relevant only if the data in the binding came from an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE --> binding source (<a class=\"xref\" href=\"system.windows.data.xmldataprovider\" data-linktype=\"relative-path\">XmlDataProvider</a> object).  </p>\n<p> If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_SetXmlNamespaceManager_\" data-linktype=\"relative-path\">SetXmlNamespaceManager</a> on the binding, then this method will return <code>null</code>.  </p>\n<p> This method will always return <code>null</code> if the data behind the binding is not <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xml-md.md&quot; -->XML<!--END INCLUDE -->.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_RemoveSourceUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_RemoveSourceUpdatedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveSourceUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a handler for the <span class=\"xref\">stem.Windows.Data.Binding.SourceUpdated</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a> that listens to the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler</a>&lt;<a class=\"xref\" href=\"system.windows.data.datatransfereventargs\" data-linktype=\"relative-path\">DataTransferEventArgs</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handler to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method supports attached event usage in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE -->.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_RemoveTargetUpdatedHandler_System_Windows_DependencyObject_System_EventHandler_System_Windows_Data_DataTransferEventArgs__\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_RemoveTargetUpdatedHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveTargetUpdatedHandler(DependencyObject,EventHandler&lt;DataTransferEventArgs&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a handler for the <span class=\"xref\">stem.Windows.Data.Binding.TargetUpdated</span> attached event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> or <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a> that listens to the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler-1\" data-linktype=\"relative-path\">EventHandler</a>&lt;<a class=\"xref\" href=\"system.windows.data.datatransfereventargs\" data-linktype=\"relative-path\">DataTransferEventArgs</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handler to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method supports attached event usage in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xaml-md.md&quot; -->XAML<!--END INCLUDE -->.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_SetXmlNamespaceManager_System_Windows_DependencyObject_System_Xml_XmlNamespaceManager_\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_SetXmlNamespaceManager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetXmlNamespaceManager(DependencyObject,XmlNamespaceManager)</div>        \r\n          </div>\r\n    \r\n            <p>Sets a namespace manager object used by the binding attached to the provided element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object from which to get namespace information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> to use for namespace evaluation in the passed element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>target</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method supports attached property usage for the &lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt; attached property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ShouldSerializePath\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ShouldSerializePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializePath()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Data.Binding.Path*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializePath ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This <code>ShouldSerialize</code> method is provided because the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Path_\" data-linktype=\"relative-path\">Path</a> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> or developing your own control incorporating the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ShouldSerializeSource\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ShouldSerializeSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeSource()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Data.Binding.Source*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeSource ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This <code>ShouldSerialize</code> method is provided because the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Source_\" data-linktype=\"relative-path\">Source</a> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> or developing your own control incorporating the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Data_Binding_ShouldSerializeValidationRules\">\r\n    \r\n            <a id=\"System_Windows_Data_Binding_ShouldSerializeValidationRules_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeValidationRules()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the <span class=\"xref\">stem.Windows.Data.Binding.ValidationRules*</span> property should be persisted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShouldSerializeValidationRules ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the property value has changed from its default; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This <code>ShouldSerialize</code> method is provided because the <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ValidationRules_\" data-linktype=\"relative-path\">ValidationRules</a> property does not have a simple default value. This method indicates whether the property has changed from its default value. You typically invoke this method if you are either developing a designer for the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> or developing your own control incorporating the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Data.Binding.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Data.Binding.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.AddSourceUpdatedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.AddTargetUpdatedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.AsyncState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.BindsDirectlyToSource\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.Converter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ConverterCulture\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ConverterParameter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.DoNothing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ElementName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.GetXmlNamespaceManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.IndexerName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.IsAsync\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.Mode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.NotifyOnSourceUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.NotifyOnTargetUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.NotifyOnValidationError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.Path\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.RelativeSource\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.RemoveSourceUpdatedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.RemoveTargetUpdatedHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.SetXmlNamespaceManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ShouldSerializePath\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ShouldSerializeSource\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ShouldSerializeValidationRules\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.Source\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.SourceUpdatedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.TargetUpdatedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.UpdateSourceExceptionFilter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.UpdateSourceTrigger\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ValidatesOnDataErrors\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ValidatesOnExceptions\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ValidatesOnNotifyDataErrors\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.ValidationRules\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.XmlNamespaceManagerProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Data.Binding.XPath\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"edfc2e3e-028e-aeb4-d8f2-35ecb26f9c35\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Data\\Binding.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML fileâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Data/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Data.Binding\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Data.Binding.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Data.Binding.yml","open_to_public_contributors":true,"api_name":["System.Windows.Data.Binding","System.Windows.Data.Binding..ctor","System.Windows.Data.Binding.AddSourceUpdatedHandler","System.Windows.Data.Binding.AddTargetUpdatedHandler","System.Windows.Data.Binding.AsyncState","System.Windows.Data.Binding.BindsDirectlyToSource","System.Windows.Data.Binding.Converter","System.Windows.Data.Binding.ConverterCulture","System.Windows.Data.Binding.ConverterParameter","System.Windows.Data.Binding.DoNothing","System.Windows.Data.Binding.ElementName","System.Windows.Data.Binding.GetXmlNamespaceManager","System.Windows.Data.Binding.IndexerName","System.Windows.Data.Binding.IsAsync","System.Windows.Data.Binding.Mode","System.Windows.Data.Binding.NotifyOnSourceUpdated","System.Windows.Data.Binding.NotifyOnTargetUpdated","System.Windows.Data.Binding.NotifyOnValidationError","System.Windows.Data.Binding.Path","System.Windows.Data.Binding.RelativeSource","System.Windows.Data.Binding.RemoveSourceUpdatedHandler","System.Windows.Data.Binding.RemoveTargetUpdatedHandler","System.Windows.Data.Binding.SetXmlNamespaceManager","System.Windows.Data.Binding.ShouldSerializePath","System.Windows.Data.Binding.ShouldSerializeSource","System.Windows.Data.Binding.ShouldSerializeValidationRules","System.Windows.Data.Binding.Source","System.Windows.Data.Binding.SourceUpdatedEvent","System.Windows.Data.Binding.TargetUpdatedEvent","System.Windows.Data.Binding.UpdateSourceExceptionFilter","System.Windows.Data.Binding.UpdateSourceTrigger","System.Windows.Data.Binding.ValidatesOnDataErrors","System.Windows.Data.Binding.ValidatesOnExceptions","System.Windows.Data.Binding.ValidatesOnNotifyDataErrors","System.Windows.Data.Binding.ValidationRules","System.Windows.Data.Binding.XmlNamespaceManagerProperty","System.Windows.Data.Binding.XPath"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Data.Binding","System::Windows::Data::Binding","System.Windows.Data.Binding.#ctor","System::Windows::Data::Binding::#ctor","System.Windows.Data.Binding.AddSourceUpdatedHandler","System::Windows::Data::Binding::AddSourceUpdatedHandler","System.Windows.Data.Binding.AddTargetUpdatedHandler","System::Windows::Data::Binding::AddTargetUpdatedHandler","System.Windows.Data.Binding.AsyncState","System::Windows::Data::Binding::AsyncState","System.Windows.Data.Binding.BindsDirectlyToSource","System::Windows::Data::Binding::BindsDirectlyToSource","System.Windows.Data.Binding.Converter","System::Windows::Data::Binding::Converter","System.Windows.Data.Binding.ConverterCulture","System::Windows::Data::Binding::ConverterCulture","System.Windows.Data.Binding.ConverterParameter","System::Windows::Data::Binding::ConverterParameter","System.Windows.Data.Binding.DoNothing","System::Windows::Data::Binding::DoNothing","System.Windows.Data.Binding.ElementName","System::Windows::Data::Binding::ElementName","System.Windows.Data.Binding.GetXmlNamespaceManager","System::Windows::Data::Binding::GetXmlNamespaceManager","System.Windows.Data.Binding.IndexerName","System::Windows::Data::Binding::IndexerName","System.Windows.Data.Binding.IsAsync","System::Windows::Data::Binding::IsAsync","System.Windows.Data.Binding.Mode","System::Windows::Data::Binding::Mode","System.Windows.Data.Binding.NotifyOnSourceUpdated","System::Windows::Data::Binding::NotifyOnSourceUpdated","System.Windows.Data.Binding.NotifyOnTargetUpdated","System::Windows::Data::Binding::NotifyOnTargetUpdated","System.Windows.Data.Binding.NotifyOnValidationError","System::Windows::Data::Binding::NotifyOnValidationError","System.Windows.Data.Binding.Path","System::Windows::Data::Binding::Path","System.Windows.Data.Binding.RelativeSource","System::Windows::Data::Binding::RelativeSource","System.Windows.Data.Binding.RemoveSourceUpdatedHandler","System::Windows::Data::Binding::RemoveSourceUpdatedHandler","System.Windows.Data.Binding.RemoveTargetUpdatedHandler","System::Windows::Data::Binding::RemoveTargetUpdatedHandler","System.Windows.Data.Binding.SetXmlNamespaceManager","System::Windows::Data::Binding::SetXmlNamespaceManager","System.Windows.Data.Binding.ShouldSerializePath","System::Windows::Data::Binding::ShouldSerializePath","System.Windows.Data.Binding.ShouldSerializeSource","System::Windows::Data::Binding::ShouldSerializeSource","System.Windows.Data.Binding.ShouldSerializeValidationRules","System::Windows::Data::Binding::ShouldSerializeValidationRules","System.Windows.Data.Binding.Source","System::Windows::Data::Binding::Source","System.Windows.Data.Binding.SourceUpdatedEvent","System::Windows::Data::Binding::SourceUpdatedEvent","System.Windows.Data.Binding.TargetUpdatedEvent","System::Windows::Data::Binding::TargetUpdatedEvent","System.Windows.Data.Binding.UpdateSourceExceptionFilter","System::Windows::Data::Binding::UpdateSourceExceptionFilter","System.Windows.Data.Binding.UpdateSourceTrigger","System::Windows::Data::Binding::UpdateSourceTrigger","System.Windows.Data.Binding.ValidatesOnDataErrors","System::Windows::Data::Binding::ValidatesOnDataErrors","System.Windows.Data.Binding.ValidatesOnExceptions","System::Windows::Data::Binding::ValidatesOnExceptions","System.Windows.Data.Binding.ValidatesOnNotifyDataErrors","System::Windows::Data::Binding::ValidatesOnNotifyDataErrors","System.Windows.Data.Binding.ValidationRules","System::Windows::Data::Binding::ValidationRules","System.Windows.Data.Binding.XmlNamespaceManagerProperty","System::Windows::Data::Binding::XmlNamespaceManagerProperty","System.Windows.Data.Binding.XPath","System::Windows::Data::Binding::XPath"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"edfc2e3e-028e-aeb4-d8f2-35ecb26f9c35","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Data\\Binding.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Data/Binding.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Binding class | Microsoft Docs","_op_ogTitle":"Binding class","description":"Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML fileâ€¦","toc_asset_id":"_splitted/System.Windows.Data/toc.json","toc_rel":"_splitted/System.Windows.Data/toc.json","source_url":"","ms.assetid":"System.Windows.Data.Binding","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.data.binding","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.data.binding","fileRelativePath":"System.Windows.Data.Binding.html"},"themesRelativePathToOutputRoot":"_themes/"}