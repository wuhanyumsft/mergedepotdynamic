{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IReadOnlyDictionary&lt;TKey,TValue&gt;</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents a generic read-only collection of key/value pairs.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IReadOnlyDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</code></pre>\r\n  \r\n  \r\n  \r\n  \t\t<h3 class=\"accented\">Type Parameters</h3>\r\n  \t\t<table class=\"nameValue\">\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TKey</td>\r\n  \t\t\t<td><p>The type of keys in the read-only dictionary.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t\t<tr>\r\n  \t\t\t<td>TValue</td>\r\n  \t\t\t<td><p>The type of values in the read-only dictionary.</p>\n</td>\r\n  \t\t\t</tr>\r\n  \t\t</table>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Each element is a key/value pair that is stored in a <a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair&lt;TKey,TValue&gt;</a> object.  </p>\n<p> Each pair must have a unique key. Implementations can vary in whether they allow you to specify a key that is <code>null</code>. The value can be <code>null</code> and does not have to be unique. The <a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary&lt;TKey,TValue&gt;</a> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.  </p>\n<p> The <code>foreach</code> statement of the C# language (<code>For Each</code> in Visual Basic, <code>for each</code> in C++) requires the type of each element in the collection. Because each element of the IReadOnlyDictionary(TKey, interface is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is <a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair&lt;TKey,TValue&gt;</a>, as the following example illustrates.  </p>\n<pre><code class=\"lang-cpp\" name=\"Generic.IDictionary#11\">        for each(KeyValuePair&lt;int, String^&gt; kvp in myDictionary)\n        {\n            Console::WriteLine(&quot;Key = {0}, Value = {1}&quot;, kvp.Key, kvp.Value);\n        }\n</code></pre><pre><code class=\"lang-cs\" name=\"Generic.IDictionary#11\">        foreach (KeyValuePair&lt;int, string&gt; kvp in myDictionary)\n        {\n            Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, kvp.Key, kvp.Value);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"Generic.IDictionary#11\">        For Each kvp As KeyValuePair(Of Integer, String) In myDictionary\n            Console.WriteLine(&quot;Key = {0}, Value = {1}&quot;, kvp.Key, kvp.Value)\n        Next kvp\n</code></pre><p> The <code>foreach</code> statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IReadOnlyDictionary_2_Item__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Item(TKey)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the element that has the specified key in the read-only dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TValue this[TKey key] { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TKey</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key to locate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TValue</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element that has the specified key in the read-only dictionary.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>key</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keynotfoundexception\" data-linktype=\"relative-path\">KeyNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The property is retrieved and <code>key</code> is not found.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property lets you access a specific element in the collection by using the following syntax: <code>myCollection[key]</code> (<code>myCollection(key)</code> in Visual Basic).  </p>\n<p> Implementations can vary in how they determine the equality of objects: for example, the class that implements <a class=\"xref\" href=\"system.collections.generic.ireadonlydictionary-2\" data-linktype=\"relative-path\">IReadOnlyDictionary&lt;TKey,TValue&gt;</a> might use the <a class=\"xref\" href=\"system.collections.generic.comparer-1#System_Collections_Generic_Comparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property, or it might implement the <a class=\"xref\" href=\"system.collections.generic.icomparer-1\" data-linktype=\"relative-path\">IComparer&lt;T&gt;</a> method.  </p>\n<p> Implementations can vary in whether they allow <code>key</code> to be <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IReadOnlyDictionary_2_Keys\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Keys</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an enumerable collection that contains the keys in the read-only dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Generic.IEnumerable&lt;TKey&gt; Keys { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TKey</span>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An enumerable collection that contains the keys in the read-only dictionary.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <a class=\"xref\" href=\"system.collections.generic.ireadonlydictionary-2#System_Collections_Generic_IReadOnlyDictionary_2_Values_\" data-linktype=\"relative-path\">Values</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IReadOnlyDictionary_2_Values\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Values</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an enumerable collection that contains the values in the read-only dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Collections.Generic.IEnumerable&lt;TValue&gt; Values { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TValue</span>&gt;</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An enumerable collection that contains the values in the read-only dictionary.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <a class=\"xref\" href=\"system.collections.generic.ireadonlydictionary-2#System_Collections_Generic_IReadOnlyDictionary_2_Keys_\" data-linktype=\"relative-path\">Keys</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IReadOnlyDictionary_2_ContainsKey__0_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContainsKey(TKey)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the read-only dictionary contains an element that has the specified key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ContainsKey (TKey key);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TKey</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key to locate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the read-only dictionary contains an element that has the specified key; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>key</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Implementations can vary in how they determine the equality of objects; for example, the class that implements <a class=\"xref\" href=\"system.collections.generic.ireadonlydictionary-2\" data-linktype=\"relative-path\">IReadOnlyDictionary&lt;TKey,TValue&gt;</a> might use the <a class=\"xref\" href=\"system.collections.generic.comparer-1#System_Collections_Generic_Comparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property, or it might implement the <a class=\"xref\" href=\"system.collections.generic.icomparer-1\" data-linktype=\"relative-path\">IComparer&lt;T&gt;</a> method.  </p>\n<p> Implementations can vary in whether they allow <code>key</code> to be <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Collections_Generic_IReadOnlyDictionary_2_TryGetValue__0__1__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TryGetValue(TKey,TValue)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that is associated with the specified key.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool TryGetValue (TKey key, out TValue value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>key</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TKey</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key to locate.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><span class=\"xref\">TValue</span></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <code>value</code> parameter. This parameter is passed uninitialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the object that implements the <span class=\"xref\">stem.Collections.Generic.IReadOnlyDictionary`2</span> interface contains an element that has the specified key; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>key</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method combines the functionality of the <a class=\"xref\" href=\"system.collections.generic.ireadonlydictionary-2#System_Collections_Generic_IReadOnlyDictionary_2_ContainsKey_\" data-linktype=\"relative-path\">ContainsKey</a> method and the <a class=\"xref\" href=\"system.collections.generic.ireadonlydictionary-2#System_Collections_Generic_IReadOnlyDictionary_2_Item_\" data-linktype=\"relative-path\">Item</a> property.  </p>\n<p> If the key is not found, the <code>value</code> parameter gets the appropriate default value for the type <code>TValue</code>: for example, 0 (zero) for integer types, <code>false</code> for Boolean types, and <code>null</code> for reference types.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.IReadOnlyDictionary-2.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.ContainsKey\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Item\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.TryGetValue\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-20 09:40 AM\">\r\n<meta name=\"document_id\" content=\"0c86acaf-957f-a06a-e675-1b6489cfc59c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a generic read-only collection of key/value pairs.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Generic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.IReadOnlyDictionary`2\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.IReadOnlyDictionary-2.yml","open_to_public_contributors":true,"api_name":["System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>","System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.ContainsKey","System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Item","System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys","System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.TryGetValue","System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.IReadOnlyDictionary`2","System::Collections::Generic::IReadOnlyDictionary`2","System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey","System::Collections::Generic::IReadOnlyDictionary`2::ContainsKey","System.Collections.Generic.IReadOnlyDictionary`2.Item","System::Collections::Generic::IReadOnlyDictionary`2::Item","System.Collections.Generic.IReadOnlyDictionary`2.Keys","System::Collections::Generic::IReadOnlyDictionary`2::Keys","System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue","System::Collections::Generic::IReadOnlyDictionary`2::TryGetValue","System.Collections.Generic.IReadOnlyDictionary`2.Values","System::Collections::Generic::IReadOnlyDictionary`2::Values"],"dev_langs":["csharp"],"updated_at":"2017-03-20 09:40 AM","document_id":"0c86acaf-957f-a06a-e675-1b6489cfc59c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Generic/IReadOnlyDictionary`2.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IReadOnlyDictionary<TKey,TValue> interface | Microsoft Docs","_op_ogTitle":"IReadOnlyDictionary<TKey,TValue> interface","description":"Represents a generic read-only collection of key/value pairs.\n","toc_asset_id":"_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.IReadOnlyDictionary`2","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.ireadonlydictionary-2","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.ireadonlydictionary-2","fileRelativePath":"System.Collections.Generic.IReadOnlyDictionary-2.html"},"themesRelativePathToOutputRoot":"_themes/"}