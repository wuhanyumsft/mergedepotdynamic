{"content":"    \r\n    <h1 id=\"System_Diagnostics_FileVersionInfo\">\r\n      <span class=\"lang-csharp\">FileVersionInfo</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides version information for a physical file on disk.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class FileVersionInfo</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FileVersionInfo</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A file version number is a 64-bit number that holds the version number for a file as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMajorPart_\" data-linktype=\"relative-path\">FileMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMinorPart_\" data-linktype=\"relative-path\">FileMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileBuildPart_\" data-linktype=\"relative-path\">FileBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FilePrivatePart_\" data-linktype=\"relative-path\">FilePrivatePart</a> number.  </p>\n<p>Use the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> method of this class to get a FileVersionInfo containing information about a file, then look at the properties for information about the file. The <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileVersion_\" data-linktype=\"relative-path\">FileVersion</a> property provides version information about the file. The <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMajorPart_\" data-linktype=\"relative-path\">ProductMajorPart</a>, <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMinorPart_\" data-linktype=\"relative-path\">ProductMinorPart</a>, <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductBuildPart_\" data-linktype=\"relative-path\">ProductBuildPart</a>, <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductPrivatePart_\" data-linktype=\"relative-path\">ProductPrivatePart</a>, and <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductVersion_\" data-linktype=\"relative-path\">ProductVersion</a> properties provide version information for the product that the specified file is a part of. Call <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ToString_\" data-linktype=\"relative-path\">ToString</a> to get a partial list of properties and their values for this file.  </p>\n<p>The FileVersionInfo properties are based on version resource information built into the file. Version resources are often built into binary files such as .exe or .dll files; text files do not have version resource information.  </p>\n<p>Version resources are typically specified in a Win32 resource file, or in assembly attributes. For example the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_IsDebug_\" data-linktype=\"relative-path\">IsDebug</a> property reflects the <code>VS_FF_DEBUG</code> flag value in the file&#39;s <code>VS_FIXEDFILEINFO</code> block, which is built from the <code>VERSIONINFO</code> resource in a Win32 resource file.  For more information about specifying version resources in a Win32 resource file, see &quot;About Resource Files&quot; and &quot;VERSIONINFO Resource&quot; in the Platform SDK. For more information about specifying version resources in a .NET module, see the <a href=\"../Topic/Setting%20Assembly%20Attributes.md\" data-linktype=\"relative-path\">Setting Assembly Attributes</a> topic.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> This class makes a link demand at the class level that applies to all members. A <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown when the immediate caller does not have full trust permission. For details about link demands, see <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_Comments\" data-linktype=\"self-bookmark\">Comments</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the comments associated with the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_CompanyName\" data-linktype=\"self-bookmark\">CompanyName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the company that produced the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FileBuildPart\" data-linktype=\"self-bookmark\">FileBuildPart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the build number of the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FileDescription\" data-linktype=\"self-bookmark\">FileDescription</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the description of the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FileMajorPart\" data-linktype=\"self-bookmark\">FileMajorPart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the major part of the version number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FileMinorPart\" data-linktype=\"self-bookmark\">FileMinorPart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the minor part of the version number of the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FileName\" data-linktype=\"self-bookmark\">FileName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the file that this instance of <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> describes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FilePrivatePart\" data-linktype=\"self-bookmark\">FilePrivatePart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the file private part number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_FileVersion\" data-linktype=\"self-bookmark\">FileVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the file version number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_InternalName\" data-linktype=\"self-bookmark\">InternalName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the internal name of the file, if one exists.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_IsDebug\" data-linktype=\"self-bookmark\">IsDebug</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the file contains debugging information or is compiled with debugging features enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_IsPatched\" data-linktype=\"self-bookmark\">IsPatched</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the file has been modified and is not identical to the original shipping file of the same version number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_IsPreRelease\" data-linktype=\"self-bookmark\">IsPreRelease</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the file is a development version, rather than a commercially released product.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_IsPrivateBuild\" data-linktype=\"self-bookmark\">IsPrivateBuild</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the file was built using standard release procedures.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_IsSpecialBuild\" data-linktype=\"self-bookmark\">IsSpecialBuild</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the file is a special build.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_Language\" data-linktype=\"self-bookmark\">Language</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default language string for the version info block.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_LegalCopyright\" data-linktype=\"self-bookmark\">LegalCopyright</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all copyright notices that apply to the specified file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_LegalTrademarks\" data-linktype=\"self-bookmark\">LegalTrademarks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the trademarks and registered trademarks that apply to the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_OriginalFilename\" data-linktype=\"self-bookmark\">OriginalFilename</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name the file was created with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_PrivateBuild\" data-linktype=\"self-bookmark\">PrivateBuild</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets information about a private version of the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ProductBuildPart\" data-linktype=\"self-bookmark\">ProductBuildPart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the build number of the product this file is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ProductMajorPart\" data-linktype=\"self-bookmark\">ProductMajorPart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the major part of the version number for the product this file is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ProductMinorPart\" data-linktype=\"self-bookmark\">ProductMinorPart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the minor part of the version number for the product the file is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ProductName\" data-linktype=\"self-bookmark\">ProductName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the product this file is distributed with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ProductPrivatePart\" data-linktype=\"self-bookmark\">ProductPrivatePart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the private part number of the product this file is associated with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ProductVersion\" data-linktype=\"self-bookmark\">ProductVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the version of the product this file is distributed with.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_SpecialBuild\" data-linktype=\"self-bookmark\">SpecialBuild</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the special build information for the file.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_GetVersionInfo_System_String_\" data-linktype=\"self-bookmark\">GetVersionInfo(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> representing the version information associated with the specified file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_FileVersionInfo_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a partial list of properties in the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> and their values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_Comments\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_Comments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Comments</div>        \r\n          </div>\r\n    \r\n            <p>Gets the comments associated with the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Comments { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The comments associated with the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property contains additional information that can be displayed for diagnostic purposes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the comments in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.Comments Example#1\">    void GetComments()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n        // Print the comments in a text box.\n        textBox1.Text = &quot;Comments: &quot; + myFileVersionInfo.Comments;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.Comments Example#1\">    void GetComments()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo(Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n        // Print the comments in a text box.\n        textBox1-&gt;Text = &quot;Comments: &quot; + myFileVersionInfo-&gt;Comments;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.Comments Example#1\">    Sub GetComments()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n           FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n\n        &#39; Print the comments in a text box.\n        textBox1.Text = &quot;Comments: &quot; &amp; myFileVersionInfo.Comments\n    End Sub &#39;GetComments\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_CompanyName\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_CompanyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompanyName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the company that produced the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CompanyName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the company that produced the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the CompanyName in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.CompanyName Example#1\">    private void GetCompanyName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the company name.\n        textBox1.Text = &quot;The company name: &quot; + myFileVersionInfo.CompanyName;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.CompanyName Example#1\">private:\n    void GetCompanyName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo(Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the company name.\n        textBox1-&gt;Text = &quot;The company name: &quot; + myFileVersionInfo-&gt;CompanyName;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.CompanyName Example#1\">    Private Sub GetCompanyName()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n\n        &#39; Print the company name.\n        textBox1.Text = &quot;The company name: &quot; &amp; myFileVersionInfo.CompanyName\n    End Sub &#39;GetCompanyName\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FileBuildPart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FileBuildPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileBuildPart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the build number of the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FileBuildPart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the build number of the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A file version number is a 64-bit number that holds the version number for a file as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMajorPart_\" data-linktype=\"relative-path\">FileMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMinorPart_\" data-linktype=\"relative-path\">FileMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the FileBuildPart number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FilePrivatePart_\" data-linktype=\"relative-path\">FilePrivatePart</a> number.  </p>\n<p>This property gets the third set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the FileBuildPart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.FileBuildPart Example#1\">    private void GetFileBuildPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the file build number.\n        textBox1.Text = &quot;File build number: &quot; + myFileVersionInfo.FileBuildPart;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.FileBuildPart Example#1\">    Private Sub GetFileBuildPart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the file build number.\n        textBox1.Text = &quot;File build number: &quot; &amp; myFileVersionInfo.FileBuildPart\n    End Sub &#39;GetFileBuildPart\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.FileBuildPart Example#1\">private:\n    void GetFileBuildPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo(Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the file build number.\n        textBox1-&gt;Text = String::Format( &quot;File build number: {0}&quot;, myFileVersionInfo-&gt;FileBuildPart );\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FileDescription\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FileDescription_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileDescription</div>        \r\n          </div>\r\n    \r\n            <p>Gets the description of the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FileDescription { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The description of the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the FileDescription in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.FileDescription Example#1\">    private void GetFileDescription()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the file description.\n        textBox1.Text = &quot;File description: &quot; + myFileVersionInfo.FileDescription;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.FileDescription Example#1\">    Private Sub GetFileDescription()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the file description.\n        textBox1.Text = &quot;File description: &quot; &amp; myFileVersionInfo.FileDescription\n    End Sub &#39;GetFileDescription\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.FileDescription Example#1\">private:\n    void GetFileDescription()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n        FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the file description.\n        textBox1-&gt;Text = String::Concat( &quot;File description: &quot;, myFileVersionInfo-&gt;FileDescription );\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FileMajorPart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FileMajorPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileMajorPart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the major part of the version number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FileMajorPart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the major part of the version number or 0 (zero) if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A file version number is a 64-bit number that holds the version number for a file as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the FileMajorPart number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMinorPart_\" data-linktype=\"relative-path\">FileMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileBuildPart_\" data-linktype=\"relative-path\">FileBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FilePrivatePart_\" data-linktype=\"relative-path\">FilePrivatePart</a> number.  </p>\n<p>This property gets the first set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the FileMajorPart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.FileMajorPart Example#1\">private void GetFileMajorPart() {\n    // Get the file version for the notepad.\n    FileVersionInfo myFileVersionInfo = FileVersionInfo.GetVersionInfo(&quot;%systemroot%\\<br>otepad.exe&quot;);\n \n    // Print the file major part number.\n    textBox1.Text = &quot;File major part number: &quot; + myFileVersionInfo.FileMajorPart;\n }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.FileMajorPart Example#1\">private:\n   void GetFileMajorPart()\n   {\n      // Get the file version for the notepad.\n      FileVersionInfo^ myFileVersionInfo = FileVersionInfo::GetVersionInfo( &quot;%systemroot%\\<br>otepad.exe&quot; );\n      \n      // Print the file major part number.\n      textBox1-&gt;Text = String::Concat( &quot;File major part number: &quot;, myFileVersionInfo-&gt;FileMajorPart );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.FileMajorPart Example#1\">    Private Sub GetFileMajorPart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(&quot;%systemroot%<br>otepad.exe&quot;)\n        \n        &#39; Print the file major part number.\n        textBox1.Text = &quot;File major part number: &quot; &amp; myFileVersionInfo.FileMajorPart\n    End Sub &#39;GetFileMajorPart\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FileMinorPart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FileMinorPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileMinorPart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the minor part of the version number of the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FileMinorPart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the minor part of the version number of the file or 0 (zero) if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A file version number is a 64-bit number that holds the version number for a file as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMajorPart_\" data-linktype=\"relative-path\">FileMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the FileMinorPart number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileBuildPart_\" data-linktype=\"relative-path\">FileBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FilePrivatePart_\" data-linktype=\"relative-path\">FilePrivatePart</a> number.  </p>\n<p>This property gets the second set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the FileMinorPart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.FileMinorPart Example#1\">    Private Sub GetFileMinorPart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the file minor part number.\n        textBox1.Text = &quot;File minor part number: &quot; &amp; myFileVersionInfo.FileMinorPart\n    End Sub &#39;GetFileMinorPart\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.FileMinorPart Example#1\">private:\n    void GetFileMinorPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the file minor part number.\n        textBox1-&gt;Text = String::Concat( &quot;File minor part number: &quot;, myFileVersionInfo-&gt;FileMinorPart );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.FileMinorPart Example#1\">    private void GetFileMinorPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the file minor part number.\n        textBox1.Text = &quot;File minor part number: &quot; + myFileVersionInfo.FileMinorPart;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FileName\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FileName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the file that this instance of <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> describes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FileName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the file described by this instance of <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the FileName in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.FileName Example#1\">    Private Sub GetFileName()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the file name.\n        textBox1.Text = &quot;File name: &quot; &amp; myFileVersionInfo.FileName\n    End Sub &#39;GetFileName\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.FileName Example#1\">private:\n    void GetFileName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the file name.\n        textBox1-&gt;Text = String::Concat( &quot;File name: &quot;, myFileVersionInfo-&gt;FileName );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.FileName Example#1\">    private void GetFileName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the file name.\n        textBox1.Text = &quot;File name: &quot; + myFileVersionInfo.FileName;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FilePrivatePart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FilePrivatePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FilePrivatePart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the file private part number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FilePrivatePart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the file private part number or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A file version number is a 64-bit number that holds the version number for a file as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMajorPart_\" data-linktype=\"relative-path\">FileMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMinorPart_\" data-linktype=\"relative-path\">FileMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileBuildPart_\" data-linktype=\"relative-path\">FileBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the FilePrivatePart number.  </p>\n<p>This property gets the last set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the FilePrivatePart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.FilePrivatePart Example#1\">private:\n    void GetFilePrivatePart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the file private part number.\n        textBox1-&gt;Text = String::Concat( &quot;File private part number: &quot;, myFileVersionInfo-&gt;FilePrivatePart );\n     }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.FilePrivatePart Example#1\">    private void GetFilePrivatePart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the file private part number.\n        textBox1.Text = &quot;File private part number: &quot; + myFileVersionInfo.FilePrivatePart;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.FilePrivatePart Example#1\">    Private Sub GetFilePrivatePart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the file private part number.\n        textBox1.Text = &quot;File private part number: &quot; &amp; myFileVersionInfo.FilePrivatePart\n    End Sub &#39;GetFilePrivatePart\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_FileVersion\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_FileVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FileVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets the file version number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FileVersion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The version number of the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A file version number is a 64-bit number that holds the version number for a file as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMajorPart_\" data-linktype=\"relative-path\">FileMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileMinorPart_\" data-linktype=\"relative-path\">FileMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FileBuildPart_\" data-linktype=\"relative-path\">FileBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_FilePrivatePart_\" data-linktype=\"relative-path\">FilePrivatePart</a> number.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the file description and version number in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"classic fileversioninfo example#1\">\nusing System;\nusing System.IO;\nusing System.Diagnostics;\n\nclass Class1\n{\n    public static void Main(string[] args)\n    {\n        // Get the file version for the notepad.\n        // Use either of the two following commands.\n        FileVersionInfo.GetVersionInfo(Path.Combine(Environment.SystemDirectory, &quot;Notepad.exe&quot;));\n        FileVersionInfo myFileVersionInfo = FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n\n        // Print the file name and version number.\n        Console.WriteLine(&quot;File: &quot; + myFileVersionInfo.FileDescription + &#39;<br>&#39; +\n           &quot;Version number: &quot; + myFileVersionInfo.FileVersion);\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"classic fileversioninfo example#1\">Imports System\nImports System.IO\nImports System.Diagnostics\n\n\n\nClass Class1\n\n    Public Shared Sub Main(ByVal args() As String)\n        &#39; Get the file version for the notepad.\n        &#39; Use either of the following two commands.\n        FileVersionInfo.GetVersionInfo(Path.Combine(Environment.SystemDirectory, &quot;Notepad.exe&quot;))\n        Dim myFileVersionInfo As FileVersionInfo = FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n\n\n        &#39; Print the file name and version number.\n        Console.WriteLine(&quot;File: &quot; + myFileVersionInfo.FileDescription + vbLf + &quot;Version number: &quot; + myFileVersionInfo.FileVersion)\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"classic fileversioninfo example#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Diagnostics;\n\n\npublic ref class Class1\n{\n    \npublic:\n    static void Main()\n    {\n        // Get the file version for the notepad.\n        // Use either of the two following methods.\n        FileVersionInfo::GetVersionInfo(Path::Combine(Environment::SystemDirectory, &quot;Notepad.exe&quot;));\n        FileVersionInfo^ myFileVersionInfo = FileVersionInfo::GetVersionInfo(Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n\n        // Print the file name and version number.\n        Console::WriteLine(&quot;File: &quot; + myFileVersionInfo-&gt;FileDescription + &quot;<br>&quot; +\n           &quot;Version number: &quot; + myFileVersionInfo-&gt;FileVersion);\n    }\n};\n\nint main()\n{\n    Class1::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_InternalName\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_InternalName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InternalName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the internal name of the file, if one exists.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string InternalName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The internal name of the file. If none exists, this property will contain the original name of the file without the extension.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the InternalName in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.InternalName Example#1\">private:\n    void GetInternalName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the internal name.\n        textBox1-&gt;Text = String::Concat( &quot;Internal name: &quot;, myFileVersionInfo-&gt;InternalName );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.InternalName Example#1\">    Private Sub GetInternalName()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the internal name.\n        textBox1.Text = &quot;Internal name: &quot; &amp; myFileVersionInfo.InternalName\n    End Sub &#39;GetInternalName\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.InternalName Example#1\">    private void GetInternalName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the internal name.\n        textBox1.Text = &quot;Internal name: &quot; + myFileVersionInfo.InternalName;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_IsDebug\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_IsDebug_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDebug</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the file contains debugging information or is compiled with debugging features enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDebug { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the file contains debugging information or is compiled with debugging features enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> properties are based on version resource information built into the file. Version resources are often built into binary files such as .exe or .dll files; text files do not have version resource information.  </p>\n<p> Version resources are typically specified in a Win32 resource file, or in assembly attributes. The IsDebug property reflects the <code>VS_FF_DEBUG</code> flag value in the file&#39;s <code>VS_FIXEDFILEINFO</code> block, which is built from the <code>VERSIONINFO</code> resource in a Win32 resource file. For more information about specifying version resources in a Win32 resource file, see the Platform SDK <code>About Resource Files</code> topic and <code>VERSIONINFO Resource</code> topic topics.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it displays the state of the Boolean IsDebug in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.IsDebug Example#1\">    private void GetIsDebug()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print whether the file contains debugging information.\n        textBox1.Text = &quot;File contains debugging information: &quot; +\n            myFileVersionInfo.IsDebug;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.IsDebug Example#1\">private:\n    void GetIsDebug()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print whether the file contains debugging information.\n        textBox1-&gt;Text = String::Concat( &quot;File contains debugging information: &quot;,\n            myFileVersionInfo-&gt;IsDebug );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.IsDebug Example#1\">    Private Sub GetIsDebug()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print whether the file contains debugging information.\n        textBox1.Text = &quot;File contains debugging information: &quot; &amp; myFileVersionInfo.IsDebug\n    End Sub &#39;GetIsDebug\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_IsPatched\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_IsPatched_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsPatched</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the file has been modified and is not identical to the original shipping file of the same version number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsPatched { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the file is patched; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it displays the state of the Boolean IsPatched in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.IsPatched Example#1\">private:\n    void GetIsPatched()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print whether the file has a patch installed.\n        textBox1-&gt;Text = String::Concat( &quot;File has patch installed: &quot;, myFileVersionInfo-&gt;IsPatched );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.IsPatched Example#1\">    private void GetIsPatched()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print whether the file has a patch installed.\n        textBox1.Text = &quot;File has patch installed: &quot; + myFileVersionInfo.IsPatched;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.IsPatched Example#1\">    Private Sub GetIsPatched()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print whether the file has a patch installed.\n        textBox1.Text = &quot;File has patch installed: &quot; &amp; myFileVersionInfo.IsPatched\n    End Sub &#39;GetIsPatched\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_IsPreRelease\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_IsPreRelease_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsPreRelease</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the file is a development version, rather than a commercially released product.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsPreRelease { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the file is prerelease; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it displays whether this version is a prerelease version in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.IsPreRelease Example#1\">private:\n    void GetIsPreRelease()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print whether the file is a prerelease version.\n        textBox1-&gt;Text = String::Concat( &quot;File is prerelease version &quot;, myFileVersionInfo-&gt;IsPreRelease );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.IsPreRelease Example#1\">     private void GetIsPreRelease()\n     {\n         // Get the file version for the notepad.\n         FileVersionInfo myFileVersionInfo =\n             FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n         // Print whether the file is a prerelease version.\n         textBox1.Text = &quot;File is prerelease version &quot; + myFileVersionInfo.IsPreRelease;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.IsPreRelease Example#1\">    Private Sub GetIsPreRelease()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print whether the file is a prerelease version.\n        textBox1.Text = &quot;File is prerelease version &quot; &amp; myFileVersionInfo.IsPreRelease\n    End Sub &#39;GetIsPreRelease\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_IsPrivateBuild\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_IsPrivateBuild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsPrivateBuild</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the file was built using standard release procedures.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsPrivateBuild { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the file is a private build; <code>false</code> if the file was built using standard release procedures or if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this value is <code>true</code>, <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_PrivateBuild_\" data-linktype=\"relative-path\">PrivateBuild</a> will describe how this version of the file differs from the standard version.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it displays the private build information in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.IsPrivateBuild Example#1\">    private void GetIsPrivateBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print whether the version is a private build.\n        textBox1.Text = &quot;Version is a private build: &quot; + myFileVersionInfo.IsPrivateBuild;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.IsPrivateBuild Example#1\">    Private Sub GetIsPrivateBuild()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print whether the version is a private build.\n        textBox1.Text = &quot;Version is a private build: &quot; &amp; myFileVersionInfo.IsPrivateBuild\n    End Sub &#39;GetIsPrivateBuild\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.IsPrivateBuild Example#1\">private:\n    void GetIsPrivateBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print whether the version is a private build.\n        textBox1-&gt;Text = String::Concat( &quot;Version is a private build: &quot;, myFileVersionInfo-&gt;IsPrivateBuild );\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_IsSpecialBuild\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_IsSpecialBuild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSpecialBuild</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the file is a special build.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSpecialBuild { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the file is a special build; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A file that is a special build was built using standard release procedures, but the file differs from a standard file of the same version number. If this value is <code>true</code>, the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_SpecialBuild_\" data-linktype=\"relative-path\">SpecialBuild</a> property must specify how this file differs from the standard version.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it displays whether this version is a special build version in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.IsSpecialBuild Example#1\">private:\n    void GetIsSpecialBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print whether the file is a special build.\n        textBox1-&gt;Text = String::Concat( &quot;File is a special build: &quot;, myFileVersionInfo-&gt;IsSpecialBuild );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.IsSpecialBuild Example#1\">    Private Sub GetIsSpecialBuild()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print whether the file is a special build.\n        textBox1.Text = &quot;File is a special build: &quot; &amp; myFileVersionInfo.IsSpecialBuild\n    End Sub &#39;GetIsSpecialBuild\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.IsSpecialBuild Example#1\">    private void GetIsSpecialBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print whether the file is a special build.\n        textBox1.Text = &quot;File is a special build: &quot; + myFileVersionInfo.IsSpecialBuild;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_Language\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_Language_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Language</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default language string for the version info block.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Language { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The description string for the Microsoft Language Identifier in the version resource or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_LegalCopyright\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_LegalCopyright_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LegalCopyright</div>        \r\n          </div>\r\n    \r\n            <p>Gets all copyright notices that apply to the specified file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string LegalCopyright { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The copyright notices that apply to the specified file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This should include the full text of all notices, legal symbols, copyright dates, and so on or <code>null</code> if the file did not contain version information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the LegalCopyright in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.LegalCopyright Example#1\">private:\n    void GetCopyright()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the copyright notice.\n        textBox1-&gt;Text = String::Concat( &quot;Copyright notice: &quot;, myFileVersionInfo-&gt;LegalCopyright );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.LegalCopyright Example#1\">    private void GetCopyright()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the copyright notice.\n        textBox1.Text = &quot;Copyright notice: &quot; + myFileVersionInfo.LegalCopyright;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.LegalCopyright Example#1\">    Private Sub GetCopyright()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the copyright notice.\n        textBox1.Text = &quot;Copyright notice: &quot; &amp; myFileVersionInfo.LegalCopyright\n    End Sub &#39;GetCopyright\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_LegalTrademarks\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_LegalTrademarks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LegalTrademarks</div>        \r\n          </div>\r\n    \r\n            <p>Gets the trademarks and registered trademarks that apply to the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string LegalTrademarks { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The trademarks and registered trademarks that apply to the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The legal trademarks include the full text of all notices, legal symbols, and trademark numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the LegalTrademarks in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.LegalTrademarks Example#1\">private:\n    void GetTrademarks()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the trademarks.\n        textBox1-&gt;Text = String::Concat( &quot;Trademarks: &quot;, myFileVersionInfo-&gt;LegalTrademarks );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.LegalTrademarks Example#1\">    private void GetTrademarks()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the trademarks.\n        textBox1.Text = &quot;Trademarks: &quot; + myFileVersionInfo.LegalTrademarks;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.LegalTrademarks Example#1\">    Private Sub GetTrademarks()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the trademarks.\n        textBox1.Text = &quot;Trademarks: &quot; &amp; myFileVersionInfo.LegalTrademarks\n    End Sub &#39;GetTrademarks\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_OriginalFilename\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_OriginalFilename_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OriginalFilename</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name the file was created with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string OriginalFilename { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name the file was created with or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property enables an application to determine whether a file has been renamed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the OriginalFilename in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.OriginalFilename Example#1\">private:\n    void GetOriginalName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the original file name.\n        textBox1-&gt;Text = String::Concat( &quot;Original file name: &quot;, myFileVersionInfo-&gt;OriginalFilename );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.OriginalFilename Example#1\">    Private Sub GetOriginalName()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the original file name.\n        textBox1.Text = &quot;Original file name: &quot; &amp; myFileVersionInfo.OriginalFilename\n    End Sub &#39;GetOriginalName\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.OriginalFilename Example#1\">    private void GetOriginalName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the original file name.\n        textBox1.Text = &quot;Original file name: &quot; + myFileVersionInfo.OriginalFilename;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_PrivateBuild\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_PrivateBuild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrivateBuild</div>        \r\n          </div>\r\n    \r\n            <p>Gets information about a private version of the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PrivateBuild { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Information about a private version of the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This information is present when <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_IsPrivateBuild_\" data-linktype=\"relative-path\">IsPrivateBuild</a> is <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the private build information in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.PrivateBuild Example#1\">private:\n    void GetPrivateBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the private build number.\n        textBox1-&gt;Text = String::Concat( &quot;Private build number: &quot;, myFileVersionInfo-&gt;PrivateBuild );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.PrivateBuild Example#1\">    Private Sub GetPrivateBuild()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the private build number.\n        textBox1.Text = &quot;Private build number: &quot; &amp; myFileVersionInfo.PrivateBuild\n    End Sub &#39;GetPrivateBuild\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.PrivateBuild Example#1\">    private void GetPrivateBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the private build number.\n        textBox1.Text = &quot;Private build number: &quot; + myFileVersionInfo.PrivateBuild;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ProductBuildPart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ProductBuildPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProductBuildPart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the build number of the product this file is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ProductBuildPart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the build number of the product this file is associated with or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A product version number is a 64-bit number that holds the version number as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMajorPart_\" data-linktype=\"relative-path\">ProductMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMinorPart_\" data-linktype=\"relative-path\">ProductMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the ProductBuildPart number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductPrivatePart_\" data-linktype=\"relative-path\">ProductPrivatePart</a> number.  </p>\n<p>This property gets the third set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the ProductBuildPart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ProductBuildPart Example#1\">private:\n    void GetProductBuildPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the product build part number.\n        textBox1-&gt;Text = String::Concat( &quot;Product build part number: &quot;, myFileVersionInfo-&gt;ProductBuildPart );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ProductBuildPart Example#1\">    private void GetProductBuildPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the product build part number.\n        textBox1.Text = &quot;Product build part number: &quot; + myFileVersionInfo.ProductBuildPart;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ProductBuildPart Example#1\">    Private Sub GetProductBuildPart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the product build part number.\n        textBox1.Text = &quot;Product build part number: &quot; &amp; myFileVersionInfo.ProductBuildPart\n    End Sub &#39;GetProductBuildPart\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ProductMajorPart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ProductMajorPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProductMajorPart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the major part of the version number for the product this file is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ProductMajorPart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the major part of the product version number or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A product version number is a 64-bit number that holds the version number as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the ProductMajorPart number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMinorPart_\" data-linktype=\"relative-path\">ProductMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductBuildPart_\" data-linktype=\"relative-path\">ProductBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductPrivatePart_\" data-linktype=\"relative-path\">ProductPrivatePart</a> number.  </p>\n<p>This property gets the first set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the ProductMajorPart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ProductMajorPart Example#1\">    Private Sub GetProductMajorPart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the product major part number.\n        textBox1.Text = &quot;Product major part number: &quot; &amp; myFileVersionInfo.ProductMajorPart\n    End Sub &#39;GetProductMajorPart\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ProductMajorPart Example#1\">private:\n    void GetProductMajorPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the product major part number.\n        textBox1-&gt;Text = String::Concat( &quot;Product major part number: &quot;, myFileVersionInfo-&gt;ProductMajorPart );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ProductMajorPart Example#1\">    private void GetProductMajorPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the product major part number.\n        textBox1.Text = &quot;Product major part number: &quot; + myFileVersionInfo.ProductMajorPart;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ProductMinorPart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ProductMinorPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProductMinorPart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the minor part of the version number for the product the file is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ProductMinorPart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the minor part of the product version number or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A product version number is a 64-bit number that holds the version number as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMajorPart_\" data-linktype=\"relative-path\">ProductMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the ProductMinorPart number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductBuildPart_\" data-linktype=\"relative-path\">ProductBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductPrivatePart_\" data-linktype=\"relative-path\">ProductPrivatePart</a> number.  </p>\n<p>This property gets the second set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the ProductMinorPart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ProductMinorPart Example#1\">private:\n    void GetProductMinorPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the product minor part number.\n        textBox1-&gt;Text = String::Concat( &quot;Product minor part number: &quot;, myFileVersionInfo-&gt;ProductMinorPart );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ProductMinorPart Example#1\">    private void GetProductMinorPart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the product minor part number.\n        textBox1.Text = &quot;Product minor part number: &quot; + myFileVersionInfo.ProductMinorPart;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ProductMinorPart Example#1\">    Private Sub GetProductMinorPart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the product minor part number.\n        textBox1.Text = &quot;Product minor part number: &quot; &amp; myFileVersionInfo.ProductMinorPart\n    End Sub &#39;GetProductMinorPart\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ProductName\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ProductName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProductName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the product this file is distributed with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ProductName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the product this file is distributed with or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the ProductName in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ProductName Example#1\">    private void GetProductName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the product name.\n        textBox1.Text = &quot;Product name: &quot; + myFileVersionInfo.ProductName;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ProductName Example#1\">private:\n    void GetProductName()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the product name.\n        textBox1-&gt;Text = String::Concat( &quot;Product name: &quot;, myFileVersionInfo-&gt;ProductName );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ProductName Example#1\">    Private Sub GetProductName()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the product name.\n        textBox1.Text = &quot;Product name: &quot; &amp; myFileVersionInfo.ProductName\n    End Sub &#39;GetProductName\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ProductPrivatePart\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ProductPrivatePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProductPrivatePart</div>        \r\n          </div>\r\n    \r\n            <p>Gets the private part number of the product this file is associated with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ProductPrivatePart { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A value representing the private part number of the product this file is associated with or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A product version number is a 64-bit number that holds the version number as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMajorPart_\" data-linktype=\"relative-path\">ProductMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMinorPart_\" data-linktype=\"relative-path\">ProductMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductBuildPart_\" data-linktype=\"relative-path\">ProductBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the ProductPrivatePart number.  </p>\n<p>This property gets the last set of 16 bits.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the ProductPrivatePart in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ProductPrivatePart Example#1\">    private void GetProductPrivatePart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the product private part number.\n        textBox1.Text = &quot;Product private part number: &quot; + myFileVersionInfo.ProductPrivatePart;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ProductPrivatePart Example#1\">    Private Sub GetProductPrivatePart()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the product private part number.\n        textBox1.Text = &quot;Product private part number: &quot; &amp; myFileVersionInfo.ProductPrivatePart\n    End Sub &#39;GetProductPrivatePart\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ProductPrivatePart Example#1\">private:\n    void GetProductPrivatePart()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the product private part number.\n        textBox1-&gt;Text = String::Concat( &quot;Product private part number: &quot;, myFileVersionInfo-&gt;ProductPrivatePart );\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ProductVersion\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ProductVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProductVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets the version of the product this file is distributed with.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ProductVersion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The version of the product this file is distributed with or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, a version number is displayed as &quot;major number.minor number.build number.private part number&quot;. A product version number is a 64-bit number that holds the version number as follows:  </p>\n<ul>\n<li><p>The first 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMajorPart_\" data-linktype=\"relative-path\">ProductMajorPart</a> number.  </p>\n</li>\n<li><p>The next 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductMinorPart_\" data-linktype=\"relative-path\">ProductMinorPart</a> number.  </p>\n</li>\n<li><p>The third set of 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductBuildPart_\" data-linktype=\"relative-path\">ProductBuildPart</a> number.  </p>\n</li>\n<li><p>The last 16 bits are the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_ProductPrivatePart_\" data-linktype=\"relative-path\">ProductPrivatePart</a> number.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the ProductVersion in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ProductVersion Example#1\">    private void GetProductVersion()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the product version number.\n        textBox1.Text = &quot;Product version number: &quot; + myFileVersionInfo.ProductVersion;\n     }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ProductVersion Example#1\">private:\n    void GetProductVersion()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the product version number.\n        textBox1-&gt;Text = String::Concat( &quot;Product version number: &quot;, myFileVersionInfo-&gt;ProductVersion );\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ProductVersion Example#1\">    Private Sub GetProductVersion()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the product version number.\n        textBox1.Text = &quot;Product version number: &quot; &amp; myFileVersionInfo.ProductVersion\n    End Sub &#39;GetProductVersion\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_SpecialBuild\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_SpecialBuild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpecialBuild</div>        \r\n          </div>\r\n    \r\n            <p>Gets the special build information for the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SpecialBuild { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The special build information for the file or <code>null</code> if the file did not contain version information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_IsSpecialBuild_\" data-linktype=\"relative-path\">IsSpecialBuild</a> is <code>true</code>, SpecialBuild must specify how this file differs from the standard version of the file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it prints the special build information in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.SpecialBuild Example#1\">private:\n    void GetSpecialBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print the special build information.\n        textBox1-&gt;Text = String::Concat( &quot;Special build information: &quot;, myFileVersionInfo-&gt;SpecialBuild );\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.SpecialBuild Example#1\">    private void GetSpecialBuild()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print the special build information.\n        textBox1.Text = &quot;Special build information: &quot; + myFileVersionInfo.SpecialBuild;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.SpecialBuild Example#1\">    Private Sub GetSpecialBuild()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print the special build information.\n        textBox1.Text = &quot;Special build information: &quot; &amp; myFileVersionInfo.SpecialBuild\n    End Sub &#39;GetSpecialBuild\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_GetVersionInfo_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_GetVersionInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetVersionInfo(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> representing the version information associated with the specified file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified path and name of the file to retrieve the version information for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> containing information about the file. If the file did not contain version information, the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> contains only the name of the file requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a></div>\r\n                  </div>\r\n                  <p>The file specified cannot be found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls GetVersionInfo to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for Notepad and  displays the file description and version number in the console window.  </p>\n<pre><code class=\"lang-cs\" name=\"classic fileversioninfo example#1\">\nusing System;\nusing System.IO;\nusing System.Diagnostics;\n\nclass Class1\n{\n    public static void Main(string[] args)\n    {\n        // Get the file version for the notepad.\n        // Use either of the two following commands.\n        FileVersionInfo.GetVersionInfo(Path.Combine(Environment.SystemDirectory, &quot;Notepad.exe&quot;));\n        FileVersionInfo myFileVersionInfo = FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n\n        // Print the file name and version number.\n        Console.WriteLine(&quot;File: &quot; + myFileVersionInfo.FileDescription + &#39;<br>&#39; +\n           &quot;Version number: &quot; + myFileVersionInfo.FileVersion);\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"classic fileversioninfo example#1\">Imports System\nImports System.IO\nImports System.Diagnostics\n\n\n\nClass Class1\n\n    Public Shared Sub Main(ByVal args() As String)\n        &#39; Get the file version for the notepad.\n        &#39; Use either of the following two commands.\n        FileVersionInfo.GetVersionInfo(Path.Combine(Environment.SystemDirectory, &quot;Notepad.exe&quot;))\n        Dim myFileVersionInfo As FileVersionInfo = FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n\n\n        &#39; Print the file name and version number.\n        Console.WriteLine(&quot;File: &quot; + myFileVersionInfo.FileDescription + vbLf + &quot;Version number: &quot; + myFileVersionInfo.FileVersion)\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"classic fileversioninfo example#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Diagnostics;\n\n\npublic ref class Class1\n{\n    \npublic:\n    static void Main()\n    {\n        // Get the file version for the notepad.\n        // Use either of the two following methods.\n        FileVersionInfo::GetVersionInfo(Path::Combine(Environment::SystemDirectory, &quot;Notepad.exe&quot;));\n        FileVersionInfo^ myFileVersionInfo = FileVersionInfo::GetVersionInfo(Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n\n        // Print the file name and version number.\n        Console::WriteLine(&quot;File: &quot; + myFileVersionInfo-&gt;FileDescription + &quot;<br>&quot; +\n           &quot;Version number: &quot; + myFileVersionInfo-&gt;FileVersion);\n    }\n};\n\nint main()\n{\n    Class1::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_FileVersionInfo_ToString\">\r\n    \r\n            <a id=\"System_Diagnostics_FileVersionInfo_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a partial list of properties in the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> and their values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A list of the following properties in this class and their values:  </p>\n<p> <span class=\"xref\">stem.Diagnostics.FileVersionInfo.FileName*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.InternalName*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.OriginalFilename*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.FileVersion*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.FileDescription*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.ProductName*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.ProductVersion*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.IsDebug*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.IsPatched*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.IsPreRelease*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.IsPrivateBuild*</span>, <span class=\"xref\">stem.Diagnostics.FileVersionInfo.IsSpecialBuild*</span>,  </p>\n<p> <span class=\"xref\">stem.Diagnostics.FileVersionInfo.Language*</span>.  </p>\n<p> If the file did not contain version information, this list will contain only the name of the requested file. Boolean values will be <code>false</code>, and all other entries will be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls <a class=\"xref\" href=\"system.diagnostics.fileversioninfo#System_Diagnostics_FileVersionInfo_GetVersionInfo_\" data-linktype=\"relative-path\">GetVersionInfo</a> to get the <a class=\"xref\" href=\"system.diagnostics.fileversioninfo\" data-linktype=\"relative-path\">FileVersionInfo</a> for the Notepad. Then it calls ToString to print a list of the file version information in a text box. This code assumes <code>textBox1</code> has been instantiated.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic FileVersionInfo.ToString Example#1\">    private void GetFileVersion2()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo myFileVersionInfo =\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;\\<br>otepad.exe&quot;);\n\n        // Print all the version information.\n        textBox1.Text = myFileVersionInfo.ToString();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic FileVersionInfo.ToString Example#1\">private:\n    void GetFileVersion2()\n    {\n        // Get the file version for the notepad.\n        FileVersionInfo^ myFileVersionInfo =\n            FileVersionInfo::GetVersionInfo( Environment::SystemDirectory + &quot;\\<br>otepad.exe&quot; );\n\n        // Print all the version information.\n        textBox1-&gt;Text = myFileVersionInfo-&gt;ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic FileVersionInfo.ToString Example#1\">    Private Sub GetFileVersion2()\n        &#39; Get the file version for the notepad.\n        Dim myFileVersionInfo As FileVersionInfo = _\n            FileVersionInfo.GetVersionInfo(Environment.SystemDirectory + &quot;<br>otepad.exe&quot;)\n        \n        &#39; Print all the version information.\n        textBox1.Text = myFileVersionInfo.ToString()\n    End Sub &#39;GetFileVersion2\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.FileVersionInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.FileVersionInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.Comments\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.CompanyName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FileBuildPart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FileDescription\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FileMajorPart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FileMinorPart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FileName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FilePrivatePart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.FileVersion\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.GetVersionInfo\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.InternalName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.IsDebug\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.IsPatched\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.IsPreRelease\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.IsPrivateBuild\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.IsSpecialBuild\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.Language\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.LegalCopyright\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.LegalTrademarks\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.OriginalFilename\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.PrivateBuild\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ProductBuildPart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ProductMajorPart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ProductMinorPart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ProductName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ProductPrivatePart\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ProductVersion\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.SpecialBuild\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.FileVersionInfo.ToString\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0584a499-4089-5f9a-8014-1b73116d2df0\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\FileVersionInfo.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides version information for a physical file on disk.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.FileVersionInfo\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.FileVersionInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.FileVersionInfo.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.FileVersionInfo","System.Diagnostics.FileVersionInfo.Comments","System.Diagnostics.FileVersionInfo.CompanyName","System.Diagnostics.FileVersionInfo.FileBuildPart","System.Diagnostics.FileVersionInfo.FileDescription","System.Diagnostics.FileVersionInfo.FileMajorPart","System.Diagnostics.FileVersionInfo.FileMinorPart","System.Diagnostics.FileVersionInfo.FileName","System.Diagnostics.FileVersionInfo.FilePrivatePart","System.Diagnostics.FileVersionInfo.FileVersion","System.Diagnostics.FileVersionInfo.GetVersionInfo","System.Diagnostics.FileVersionInfo.InternalName","System.Diagnostics.FileVersionInfo.IsDebug","System.Diagnostics.FileVersionInfo.IsPatched","System.Diagnostics.FileVersionInfo.IsPreRelease","System.Diagnostics.FileVersionInfo.IsPrivateBuild","System.Diagnostics.FileVersionInfo.IsSpecialBuild","System.Diagnostics.FileVersionInfo.Language","System.Diagnostics.FileVersionInfo.LegalCopyright","System.Diagnostics.FileVersionInfo.LegalTrademarks","System.Diagnostics.FileVersionInfo.OriginalFilename","System.Diagnostics.FileVersionInfo.PrivateBuild","System.Diagnostics.FileVersionInfo.ProductBuildPart","System.Diagnostics.FileVersionInfo.ProductMajorPart","System.Diagnostics.FileVersionInfo.ProductMinorPart","System.Diagnostics.FileVersionInfo.ProductName","System.Diagnostics.FileVersionInfo.ProductPrivatePart","System.Diagnostics.FileVersionInfo.ProductVersion","System.Diagnostics.FileVersionInfo.SpecialBuild","System.Diagnostics.FileVersionInfo.ToString"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.FileVersionInfo","System::Diagnostics::FileVersionInfo","System.Diagnostics.FileVersionInfo.Comments","System::Diagnostics::FileVersionInfo::Comments","System.Diagnostics.FileVersionInfo.CompanyName","System::Diagnostics::FileVersionInfo::CompanyName","System.Diagnostics.FileVersionInfo.FileBuildPart","System::Diagnostics::FileVersionInfo::FileBuildPart","System.Diagnostics.FileVersionInfo.FileDescription","System::Diagnostics::FileVersionInfo::FileDescription","System.Diagnostics.FileVersionInfo.FileMajorPart","System::Diagnostics::FileVersionInfo::FileMajorPart","System.Diagnostics.FileVersionInfo.FileMinorPart","System::Diagnostics::FileVersionInfo::FileMinorPart","System.Diagnostics.FileVersionInfo.FileName","System::Diagnostics::FileVersionInfo::FileName","System.Diagnostics.FileVersionInfo.FilePrivatePart","System::Diagnostics::FileVersionInfo::FilePrivatePart","System.Diagnostics.FileVersionInfo.FileVersion","System::Diagnostics::FileVersionInfo::FileVersion","System.Diagnostics.FileVersionInfo.GetVersionInfo","System::Diagnostics::FileVersionInfo::GetVersionInfo","System.Diagnostics.FileVersionInfo.InternalName","System::Diagnostics::FileVersionInfo::InternalName","System.Diagnostics.FileVersionInfo.IsDebug","System::Diagnostics::FileVersionInfo::IsDebug","System.Diagnostics.FileVersionInfo.IsPatched","System::Diagnostics::FileVersionInfo::IsPatched","System.Diagnostics.FileVersionInfo.IsPreRelease","System::Diagnostics::FileVersionInfo::IsPreRelease","System.Diagnostics.FileVersionInfo.IsPrivateBuild","System::Diagnostics::FileVersionInfo::IsPrivateBuild","System.Diagnostics.FileVersionInfo.IsSpecialBuild","System::Diagnostics::FileVersionInfo::IsSpecialBuild","System.Diagnostics.FileVersionInfo.Language","System::Diagnostics::FileVersionInfo::Language","System.Diagnostics.FileVersionInfo.LegalCopyright","System::Diagnostics::FileVersionInfo::LegalCopyright","System.Diagnostics.FileVersionInfo.LegalTrademarks","System::Diagnostics::FileVersionInfo::LegalTrademarks","System.Diagnostics.FileVersionInfo.OriginalFilename","System::Diagnostics::FileVersionInfo::OriginalFilename","System.Diagnostics.FileVersionInfo.PrivateBuild","System::Diagnostics::FileVersionInfo::PrivateBuild","System.Diagnostics.FileVersionInfo.ProductBuildPart","System::Diagnostics::FileVersionInfo::ProductBuildPart","System.Diagnostics.FileVersionInfo.ProductMajorPart","System::Diagnostics::FileVersionInfo::ProductMajorPart","System.Diagnostics.FileVersionInfo.ProductMinorPart","System::Diagnostics::FileVersionInfo::ProductMinorPart","System.Diagnostics.FileVersionInfo.ProductName","System::Diagnostics::FileVersionInfo::ProductName","System.Diagnostics.FileVersionInfo.ProductPrivatePart","System::Diagnostics::FileVersionInfo::ProductPrivatePart","System.Diagnostics.FileVersionInfo.ProductVersion","System::Diagnostics::FileVersionInfo::ProductVersion","System.Diagnostics.FileVersionInfo.SpecialBuild","System::Diagnostics::FileVersionInfo::SpecialBuild","System.Diagnostics.FileVersionInfo.ToString","System::Diagnostics::FileVersionInfo::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0584a499-4089-5f9a-8014-1b73116d2df0","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\FileVersionInfo.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/FileVersionInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FileVersionInfo class | Microsoft Docs","_op_ogTitle":"FileVersionInfo class","description":"Provides version information for a physical file on disk.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.FileVersionInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.fileversioninfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.fileversioninfo","fileRelativePath":"System.Diagnostics.FileVersionInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}