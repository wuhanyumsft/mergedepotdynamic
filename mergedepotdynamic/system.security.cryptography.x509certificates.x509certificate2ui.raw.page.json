{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI\">\r\n      <span class=\"lang-csharp\">X509Certificate2UI</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Displays user interface dialogs that allow you to select and view X.509 certificates. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class X509Certificate2UI</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">X509Certificate2UI</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Use the methods of the X509Certificate2UI class to present user interface dialogs that display detailed information about an X.509 certificate or allow users to select one or more certificates from a collection of X.509 certificates.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate2UI_DisplayCertificate_System_Security_Cryptography_X509Certificates_X509Certificate2_\" data-linktype=\"self-bookmark\">DisplayCertificate(X509Certificate2)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate2UI_DisplayCertificate_System_Security_Cryptography_X509Certificates_X509Certificate2_System_IntPtr_\" data-linktype=\"self-bookmark\">DisplayCertificate(X509Certificate2,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain using a handle to a parent window.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate2UI_SelectFromCollection_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_System_String_System_String_System_Security_Cryptography_X509Certificates_X509SelectionFlag_\" data-linktype=\"self-bookmark\">SelectFromCollection(X509Certificate2Collection,String,String,X509SelectionFlag)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays a dialog box for selecting an X.509 certificate from a certificate collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate2UI_SelectFromCollection_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_System_String_System_String_System_Security_Cryptography_X509Certificates_X509SelectionFlag_System_IntPtr_\" data-linktype=\"self-bookmark\">SelectFromCollection(X509Certificate2Collection,String,String,X509SelectionFlag,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays a dialog box for selecting an X.509 certificate from a certificate collection using a handle to a parent window.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_DisplayCertificate_System_Security_Cryptography_X509Certificates_X509Certificate2_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_DisplayCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayCertificate(X509Certificate2)</div>        \r\n          </div>\r\n    \r\n            <p>Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void DisplayCertificate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to display.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificate</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificate</code> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DisplayCertificate method displays a dialog box with detailed information about the specified X.509 certificate. The dialog box includes buttons for installing or copying the certificate.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to display user interface dialogs to select and view X.509 certificates.  </p>\n<pre><code class=\"lang-vb\" name=\"CertSelect#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\nClass CertSelect\n\n    Shared Sub Main()\n\n        Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly)\n\n        Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n        Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n        Console.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine)\n         \n        For Each x509 As X509Certificate2 In scollection\n            Try\n                Dim rawdata As Byte() = x509.RawData\n                Console.WriteLine(&quot;Content Type: {0}{1}&quot;, X509Certificate2.GetCertContentType(rawdata), Environment.NewLine)\n                Console.WriteLine(&quot;Friendly Name: {0}{1}&quot;, x509.FriendlyName, Environment.NewLine)\n                Console.WriteLine(&quot;Certificate Verified?: {0}{1}&quot;, x509.Verify(), Environment.NewLine)\n                Console.WriteLine(&quot;Simple Name: {0}{1}&quot;, x509.GetNameInfo(X509NameType.SimpleName, True), Environment.NewLine)\n                Console.WriteLine(&quot;Signature Algorithm: {0}{1}&quot;, x509.SignatureAlgorithm.FriendlyName, Environment.NewLine)\n                Console.WriteLine(&quot;Private Key: {0}{1}&quot;, x509.PrivateKey.ToXmlString(False), Environment.NewLine)\n                Console.WriteLine(&quot;Public Key: {0}{1}&quot;, x509.PublicKey.Key.ToXmlString(False), Environment.NewLine)\n                Console.WriteLine(&quot;Certificate Archived?: {0}{1}&quot;, x509.Archived, Environment.NewLine)\n                Console.WriteLine(&quot;Length of Raw Data: {0}{1}&quot;, x509.RawData.Length, Environment.NewLine)\n                X509Certificate2UI.DisplayCertificate(x509)\n                x509.Reset()         \n             Catch cExcept As CryptographicException\n                 Console.WriteLine(&quot;Information could not be written out for this certificate.&quot;)\n             End Try\n        Next x509\n\n        store.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"CertSelect#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass CertSelect\n{\n    static void Main()\n    {\n        X509Store store = new X509Store(&quot;MY&quot;,StoreLocation.CurrentUser);\n        store.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\n        X509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n        X509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid,DateTime.Now,false);\n        X509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag.MultiSelection);\n        Console.WriteLine(&quot;Number of certificates: {0}{1}&quot;,scollection.Count,Environment.NewLine);\n\n        foreach (X509Certificate2 x509 in scollection)\n        {\n            try\n            {\n                byte[] rawdata = x509.RawData;\n                Console.WriteLine(&quot;Content Type: {0}{1}&quot;,X509Certificate2.GetCertContentType(rawdata),Environment.NewLine);\n                Console.WriteLine(&quot;Friendly Name: {0}{1}&quot;,x509.FriendlyName,Environment.NewLine);\n                Console.WriteLine(&quot;Certificate Verified?: {0}{1}&quot;,x509.Verify(),Environment.NewLine);\n                Console.WriteLine(&quot;Simple Name: {0}{1}&quot;,x509.GetNameInfo(X509NameType.SimpleName,true),Environment.NewLine);\n                Console.WriteLine(&quot;Signature Algorithm: {0}{1}&quot;,x509.SignatureAlgorithm.FriendlyName,Environment.NewLine);\n                Console.WriteLine(&quot;Private Key: {0}{1}&quot;,x509.PrivateKey.ToXmlString(false),Environment.NewLine);\n                Console.WriteLine(&quot;Public Key: {0}{1}&quot;,x509.PublicKey.Key.ToXmlString(false),Environment.NewLine);\n                Console.WriteLine(&quot;Certificate Archived?: {0}{1}&quot;,x509.Archived,Environment.NewLine);\n                Console.WriteLine(&quot;Length of Raw Data: {0}{1}&quot;,x509.RawData.Length,Environment.NewLine);\n                X509Certificate2UI.DisplayCertificate(x509);\n                x509.Reset();\n            }\n            catch (CryptographicException)\n            {\n                Console.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n            }\n        }\n        store.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"CertSelect#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         array&lt;Byte&gt;^rawdata = x509-&gt;RawData;\n         Console::WriteLine( &quot;Content Type: {0}{1}&quot;, X509Certificate2::GetCertContentType( rawdata ), Environment::NewLine );\n         Console::WriteLine( &quot;Friendly Name: {0}{1}&quot;, x509-&gt;FriendlyName, Environment::NewLine );\n         Console::WriteLine( &quot;Certificate Verified?: {0}{1}&quot;, x509-&gt;Verify(), Environment::NewLine );\n         Console::WriteLine( &quot;Simple Name: {0}{1}&quot;, x509-&gt;GetNameInfo( X509NameType::SimpleName, true ), Environment::NewLine );\n         Console::WriteLine( &quot;Signature Algorithm: {0}{1}&quot;, x509-&gt;SignatureAlgorithm-&gt;FriendlyName, Environment::NewLine );\n         Console::WriteLine( &quot;Private Key: {0}{1}&quot;, x509-&gt;PrivateKey-&gt;ToXmlString( false ), Environment::NewLine );\n         Console::WriteLine( &quot;Public Key: {0}{1}&quot;, x509-&gt;PublicKey-&gt;Key-&gt;ToXmlString( false ), Environment::NewLine );\n         Console::WriteLine( &quot;Certificate Archived?: {0}{1}&quot;, x509-&gt;Archived, Environment::NewLine );\n         Console::WriteLine( &quot;Length of Raw Data: {0}{1}&quot;, x509-&gt;RawData-&gt;Length, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_DisplayCertificate_System_Security_Cryptography_X509Certificates_X509Certificate2_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_DisplayCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayCertificate(X509Certificate2,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain using a handle to a parent window.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void DisplayCertificate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, IntPtr hwndParent);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to display.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hwndParent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to the parent window to use for the display dialog.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificate</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificate</code> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DisplayCertificate method displays a dialog box with detailed information about the specified X.509 certificate. This method can be used to nest dialog boxes that display certificate information. The dialog box includes buttons for installing or copying the certificate.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_SelectFromCollection_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_System_String_System_String_System_Security_Cryptography_X509Certificates_X509SelectionFlag_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_SelectFromCollection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectFromCollection(X509Certificate2Collection,String,String,X509SelectionFlag)</div>        \r\n          </div>\r\n    \r\n            <p>Displays a dialog box for selecting an X.509 certificate from a certificate collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.X509Certificates.X509Certificate2Collection SelectFromCollection (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates, string title, string message, System.Security.Cryptography.X509Certificates.X509SelectionFlag selectionFlag);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of X.509 certificates to select from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>title</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The title of the dialog box.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A descriptive message to guide the user.  The message is displayed in the dialog box.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectionFlag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509selectionflag\" data-linktype=\"relative-path\">X509SelectionFlag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509selectionflag\" data-linktype=\"relative-path\">X509SelectionFlag</a> values that specifies whether single or multiple selections are allowed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a> object that contains the selected certificate or certificates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>selectionFlag</code> parameter is not a valid flag.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificates</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificates</code> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SelectFromCollection method if you require users to manually select X.509 certificates using a dialog box. If no user interaction is required, use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection#System_Security_Cryptography_X509Certificates_X509Certificate2Collection_Find_\" data-linktype=\"relative-path\">Find</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to display user interface dialogs to select and view X.509 certificates.  </p>\n<pre><code class=\"lang-vb\" name=\"CertSelect#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Permissions\nImports System.IO\nImports System.Security.Cryptography.X509Certificates\n\nClass CertSelect\n\n    Shared Sub Main()\n\n        Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n        store.Open(OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly)\n\n        Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n        Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n        Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;, &quot;Select a certificate from the following list to get information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n        Console.WriteLine(&quot;Number of certificates: {0}{1}&quot;, scollection.Count, Environment.NewLine)\n         \n        For Each x509 As X509Certificate2 In scollection\n            Try\n                Dim rawdata As Byte() = x509.RawData\n                Console.WriteLine(&quot;Content Type: {0}{1}&quot;, X509Certificate2.GetCertContentType(rawdata), Environment.NewLine)\n                Console.WriteLine(&quot;Friendly Name: {0}{1}&quot;, x509.FriendlyName, Environment.NewLine)\n                Console.WriteLine(&quot;Certificate Verified?: {0}{1}&quot;, x509.Verify(), Environment.NewLine)\n                Console.WriteLine(&quot;Simple Name: {0}{1}&quot;, x509.GetNameInfo(X509NameType.SimpleName, True), Environment.NewLine)\n                Console.WriteLine(&quot;Signature Algorithm: {0}{1}&quot;, x509.SignatureAlgorithm.FriendlyName, Environment.NewLine)\n                Console.WriteLine(&quot;Private Key: {0}{1}&quot;, x509.PrivateKey.ToXmlString(False), Environment.NewLine)\n                Console.WriteLine(&quot;Public Key: {0}{1}&quot;, x509.PublicKey.Key.ToXmlString(False), Environment.NewLine)\n                Console.WriteLine(&quot;Certificate Archived?: {0}{1}&quot;, x509.Archived, Environment.NewLine)\n                Console.WriteLine(&quot;Length of Raw Data: {0}{1}&quot;, x509.RawData.Length, Environment.NewLine)\n                X509Certificate2UI.DisplayCertificate(x509)\n                x509.Reset()         \n             Catch cExcept As CryptographicException\n                 Console.WriteLine(&quot;Information could not be written out for this certificate.&quot;)\n             End Try\n        Next x509\n\n        store.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"CertSelect#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Permissions;\nusing System.IO;\nusing System.Security.Cryptography.X509Certificates;\n\nclass CertSelect\n{\n    static void Main()\n    {\n        X509Store store = new X509Store(&quot;MY&quot;,StoreLocation.CurrentUser);\n        store.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\n        X509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n        X509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid,DateTime.Now,false);\n        X509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag.MultiSelection);\n        Console.WriteLine(&quot;Number of certificates: {0}{1}&quot;,scollection.Count,Environment.NewLine);\n\n        foreach (X509Certificate2 x509 in scollection)\n        {\n            try\n            {\n                byte[] rawdata = x509.RawData;\n                Console.WriteLine(&quot;Content Type: {0}{1}&quot;,X509Certificate2.GetCertContentType(rawdata),Environment.NewLine);\n                Console.WriteLine(&quot;Friendly Name: {0}{1}&quot;,x509.FriendlyName,Environment.NewLine);\n                Console.WriteLine(&quot;Certificate Verified?: {0}{1}&quot;,x509.Verify(),Environment.NewLine);\n                Console.WriteLine(&quot;Simple Name: {0}{1}&quot;,x509.GetNameInfo(X509NameType.SimpleName,true),Environment.NewLine);\n                Console.WriteLine(&quot;Signature Algorithm: {0}{1}&quot;,x509.SignatureAlgorithm.FriendlyName,Environment.NewLine);\n                Console.WriteLine(&quot;Private Key: {0}{1}&quot;,x509.PrivateKey.ToXmlString(false),Environment.NewLine);\n                Console.WriteLine(&quot;Public Key: {0}{1}&quot;,x509.PublicKey.Key.ToXmlString(false),Environment.NewLine);\n                Console.WriteLine(&quot;Certificate Archived?: {0}{1}&quot;,x509.Archived,Environment.NewLine);\n                Console.WriteLine(&quot;Length of Raw Data: {0}{1}&quot;,x509.RawData.Length,Environment.NewLine);\n                X509Certificate2UI.DisplayCertificate(x509);\n                x509.Reset();\n            }\n            catch (CryptographicException)\n            {\n                Console.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n            }\n        }\n        store.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"CertSelect#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Permissions;\nusing namespace System::IO;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   try\n   {\n      X509Store ^ store = gcnew X509Store( &quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection ^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection ^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      X509Certificate2Collection ^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, &quot;Test Certificate Select&quot;,&quot;Select a certificate from the following list to get information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      Console::WriteLine( &quot;Number of certificates: {0}{1}&quot;, scollection-&gt;Count, Environment::NewLine );\n      System::Collections::IEnumerator^ myEnum = scollection-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         X509Certificate2 ^ x509 = safe_cast&lt;X509Certificate2 ^&gt;(myEnum-&gt;Current);\n         array&lt;Byte&gt;^rawdata = x509-&gt;RawData;\n         Console::WriteLine( &quot;Content Type: {0}{1}&quot;, X509Certificate2::GetCertContentType( rawdata ), Environment::NewLine );\n         Console::WriteLine( &quot;Friendly Name: {0}{1}&quot;, x509-&gt;FriendlyName, Environment::NewLine );\n         Console::WriteLine( &quot;Certificate Verified?: {0}{1}&quot;, x509-&gt;Verify(), Environment::NewLine );\n         Console::WriteLine( &quot;Simple Name: {0}{1}&quot;, x509-&gt;GetNameInfo( X509NameType::SimpleName, true ), Environment::NewLine );\n         Console::WriteLine( &quot;Signature Algorithm: {0}{1}&quot;, x509-&gt;SignatureAlgorithm-&gt;FriendlyName, Environment::NewLine );\n         Console::WriteLine( &quot;Private Key: {0}{1}&quot;, x509-&gt;PrivateKey-&gt;ToXmlString( false ), Environment::NewLine );\n         Console::WriteLine( &quot;Public Key: {0}{1}&quot;, x509-&gt;PublicKey-&gt;Key-&gt;ToXmlString( false ), Environment::NewLine );\n         Console::WriteLine( &quot;Certificate Archived?: {0}{1}&quot;, x509-&gt;Archived, Environment::NewLine );\n         Console::WriteLine( &quot;Length of Raw Data: {0}{1}&quot;, x509-&gt;RawData-&gt;Length, Environment::NewLine );\n         x509-&gt;Reset();\n      }\n      store-&gt;Close();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( &quot;Information could not be written out for this certificate.&quot; );\n   }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_SelectFromCollection_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_System_String_System_String_System_Security_Cryptography_X509Certificates_X509SelectionFlag_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate2UI_SelectFromCollection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectFromCollection(X509Certificate2Collection,String,String,X509SelectionFlag,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Displays a dialog box for selecting an X.509 certificate from a certificate collection using a handle to a parent window.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.X509Certificates.X509Certificate2Collection SelectFromCollection (System.Security.Cryptography.X509Certificates.X509Certificate2Collection certificates, string title, string message, System.Security.Cryptography.X509Certificates.X509SelectionFlag selectionFlag, IntPtr hwndParent);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of X.509 certificates to select from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>title</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The title of the dialog box.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A descriptive message to guide the user.  The message is displayed in the dialog box.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectionFlag</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509selectionflag\" data-linktype=\"relative-path\">X509SelectionFlag</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509selectionflag\" data-linktype=\"relative-path\">X509SelectionFlag</a> values that specifies whether single or multiple selections are allowed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hwndParent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to the parent window to use for the display dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a> object that contains the selected certificate or certificates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>selectionFlag</code> parameter is not a valid flag.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificates</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificates</code> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SelectFromCollection method if you require users to manually select X.509 certificates using a dialog box. If no user interaction is required, use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection#System_Security_Cryptography_X509Certificates_X509Certificate2Collection_Find_\" data-linktype=\"relative-path\">Find</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate2UI.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate2UI.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate2UI\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"6eba4ace-ca0a-e5dd-8437-0bbed7286aff\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Security.Cryptography.X509Certificates\\X509Certificate2UI.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Displays user interface dialogs that allow you to select and view X.509 certificates. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.X509Certificates/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate2UI\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate2UI.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate2UI.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.X509Certificates.X509Certificate2UI","System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate","System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.X509Certificate2UI","System::Security::Cryptography::X509Certificates::X509Certificate2UI","System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate","System::Security::Cryptography::X509Certificates::X509Certificate2UI::DisplayCertificate","System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection","System::Security::Cryptography::X509Certificates::X509Certificate2UI::SelectFromCollection"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"6eba4ace-ca0a-e5dd-8437-0bbed7286aff","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Security.Cryptography.X509Certificates\\X509Certificate2UI.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.X509Certificates/X509Certificate2UI.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"X509Certificate2UI class | Microsoft Docs","_op_ogTitle":"X509Certificate2UI class","description":"Displays user interface dialogs that allow you to select and view X.509 certificates. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.X509Certificate2UI","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509certificate2ui","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509certificate2ui","fileRelativePath":"System.Security.Cryptography.X509Certificates.X509Certificate2UI.html"},"themesRelativePathToOutputRoot":"_themes/"}