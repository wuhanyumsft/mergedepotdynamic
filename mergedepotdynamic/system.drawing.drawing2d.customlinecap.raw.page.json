{"content":"    \r\n    <h1 id=\"System_Drawing_Drawing2D_CustomLineCap\">\r\n      <span class=\"lang-csharp\">CustomLineCap</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates a custom user-defined line cap.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CustomLineCap</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> objects. GDI+ supports several predefined cap styles, and also allows users to define their own cap styles. This class is used to create custom cap styles.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap__ctor_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_GraphicsPath_\" data-linktype=\"self-bookmark\">CustomLineCap(GraphicsPath,GraphicsPath)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> class with the specified outline and fill.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap__ctor_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_LineCap_\" data-linktype=\"self-bookmark\">CustomLineCap(GraphicsPath,GraphicsPath,LineCap)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> class from the specified existing <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration with the specified outline and fill.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap__ctor_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_LineCap_System_Single_\" data-linktype=\"self-bookmark\">CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> class from the specified existing <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration with the specified outline, fill, and inset.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_BaseCap\" data-linktype=\"self-bookmark\">BaseCap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration on which this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> is based.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_BaseInset\" data-linktype=\"self-bookmark\">BaseInset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the distance between the cap and the line.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_StrokeJoin\" data-linktype=\"self-bookmark\">StrokeJoin</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a> enumeration that determines how lines that compose this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object are joined.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_WidthScale\" data-linktype=\"self-bookmark\">WidthScale</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount by which to scale this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> Class object with respect to the width of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> to attempt to free resources and perform other cleanup operations before the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_GetStrokeCaps_System_Drawing_Drawing2D_LineCap__System_Drawing_Drawing2D_LineCap__\" data-linktype=\"self-bookmark\">GetStrokeCaps(LineCap,LineCap)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the caps used to start and end lines that make up this custom cap.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_CustomLineCap_SetStrokeCaps_System_Drawing_Drawing2D_LineCap_System_Drawing_Drawing2D_LineCap_\" data-linktype=\"self-bookmark\">SetStrokeCaps(LineCap,LineCap)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the caps used to start and end lines that make up this custom cap.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap__ctor_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_GraphicsPath_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomLineCap(GraphicsPath,GraphicsPath)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> class with the specified outline and fill.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object that defines the fill for the custom cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>strokePath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object that defines the outline of the custom cap.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> uses a fill mode of &quot;winding&quot; regardless of the fill mode specified for the operation.  </p>\n<p> The <code>fillPath</code> and <code>strokePath</code> parameters cannot be used at the same time. One parameter must be passed a null value. If neither parameter is passed a null value, <code>fillPath</code> will be ignored. If <code>strokePath</code> is <code>null</code>, <code>fillPath</code> should intercept the negative y-axis.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the CustomLineCap constructor. To run this example, paste the code into a Windows Form. Handle the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call <code>DrawCaps</code> from the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Misc3#1\">    Protected Sub DrawCaps(ByVal e As PaintEventArgs)\n        Dim hPath As New GraphicsPath()\n\n        &#39; Create the outline for our custom end cap.\n        hPath.AddLine(New Point(0, 0), New Point(0, 5))\n        hPath.AddLine(New Point(0, 5), New Point(5, 1))\n        hPath.AddLine(New Point(5, 1), New Point(3, 1))\n\n        &#39; Construct the hook-shaped end cap.\n        Dim HookCap As New CustomLineCap(Nothing, hPath)\n\n        &#39; Set the start cap and end cap of the HookCap to be rounded.\n        HookCap.SetStrokeCaps(LineCap.Round, LineCap.Round)\n\n        &#39; Create a pen and set end custom start and end\n        &#39; caps to the hook cap.\n        Dim customCapPen As New Pen(Color.Black, 5)\n        customCapPen.CustomStartCap = HookCap\n        customCapPen.CustomEndCap = HookCap\n\n        &#39; Create a second pen using the start and end caps from\n        &#39; the hook cap.\n        Dim capPen As New Pen(Color.Red, 10)\n        Dim startCap As LineCap\n        Dim endCap As LineCap\n        HookCap.GetStrokeCaps(startCap, endCap)\n        capPen.StartCap = startCap\n        capPen.EndCap = endCap\n\n        &#39; Create a line to draw.\n        Dim points As Point() = {New Point(100, 100), New Point(200, 50), _\n            New Point(250, 300)}\n\n        &#39; Draw the lines.\n        e.Graphics.DrawLines(capPen, points)\n        e.Graphics.DrawLines(customCapPen, points)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Misc3#1\">\n    protected void DrawCaps(PaintEventArgs e)\n    {\n        GraphicsPath hPath = new GraphicsPath();\n\n        // Create the outline for our custom end cap.\n        hPath.AddLine(new Point(0, 0), new Point(0, 5));\n        hPath.AddLine(new Point(0, 5), new Point(5, 1));\n        hPath.AddLine(new Point(5, 1), new Point(3, 1));\n\n        // Construct the hook-shaped end cap.\n        CustomLineCap HookCap = new CustomLineCap(null, hPath);\n\n        // Set the start cap and end cap of the HookCap to be rounded.\n        HookCap.SetStrokeCaps(LineCap.Round, LineCap.Round);\n\n        // Create a pen and set end custom start and end\n        // caps to the hook cap.\n        Pen customCapPen = new Pen(Color.Black, 5);\n        customCapPen.CustomStartCap = HookCap;\n        customCapPen.CustomEndCap = HookCap;\n\n        // Create a second pen using the start and end caps from\n        // the hook cap.\n        Pen capPen = new Pen(Color.Red, 10);\n        LineCap startCap;\n        LineCap endCap;\n        HookCap.GetStrokeCaps(out startCap, out endCap);\n        capPen.StartCap = startCap;\n        capPen.EndCap = endCap;\n\n        // Create a line to draw.\n        Point[] points = { new Point(100, 100), new Point(200, 50), \n            new Point(250, 300) };\n\n        // Draw the lines.\n        e.Graphics.DrawLines(capPen, points);\n        e.Graphics.DrawLines(customCapPen, points);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap__ctor_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_LineCap_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomLineCap(GraphicsPath,GraphicsPath,LineCap)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> class from the specified existing <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration with the specified outline and fill.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object that defines the fill for the custom cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>strokePath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object that defines the outline of the custom cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The line cap from which to create the custom cap.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> uses a fill mode of &quot;winding&quot; regardless of the fill mode specified for the operation.  </p>\n<p> The <code>fillPath</code> and <code>strokePath</code> parameters cannot be used at the same time. One parameter must be passed a null value. If neither parameter is passed a null value, <code>fillPath</code> will be ignored. If <code>strokePath</code> is <code>null</code>, <code>fillPath</code> should intercept the negative y-axis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap__ctor_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_GraphicsPath_System_Drawing_Drawing2D_LineCap_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomLineCap(GraphicsPath,GraphicsPath,LineCap,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> class from the specified existing <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration with the specified outline, fill, and inset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fillPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object that defines the fill for the custom cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>strokePath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object that defines the outline of the custom cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The line cap from which to create the custom cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseInset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The distance between the cap and the line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> uses a fill mode of &quot;winding&quot; regardless of the fill mode specified for the operation.  </p>\n<p> The <code>fillPath</code> and <code>strokePath</code> parameters cannot be used at the same time. One parameter must be passed a null value. If neither parameter is passed a null value, <code>fillPath</code> will be ignored. If <code>strokePath</code> is <code>null</code>, <code>fillPath</code> should intercept the negative y-axis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_BaseCap\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_BaseCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseCap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration on which this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> is based.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration on which this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> is based.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_BaseInset\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_BaseInset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseInset</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the distance between the cap and the line.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float BaseInset { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The distance between the beginning of the cap and the end of the line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_StrokeJoin\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_StrokeJoin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StrokeJoin</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a> enumeration that determines how lines that compose this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object are joined.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a> enumeration this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object uses to join lines.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property specifies a <a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a> enumeration that is used to join lines and curves that make up the stroked path of this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_WidthScale\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_WidthScale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WidthScale</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount by which to scale this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> Class object with respect to the width of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float WidthScale { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The amount by which to scale the cap.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property specifies the multiple of the pen width by which to multiply the size of the custom cap. For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high. Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> this method creates, cast as an object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a custom line cap by using the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object.  </p>\n</li>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object, <code>firstCap</code>,using the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object just created.  </p>\n</li>\n<li><p>Creates a clone of <code>firstCap</code> by using the Clone method.  </p>\n</li>\n<li><p>Sets up the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_CustomStartCap_\" data-linktype=\"relative-path\">CustomStartCap</a> and <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_CustomEndCap_\" data-linktype=\"relative-path\">CustomEndCap</a> properties of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> object, and uses that pen to draw a line and the custom caps to the screen.  </p>\n</li>\n</ul>\n<pre><code class=\"lang-vb#\">Public Sub CloneExample(e As PaintEventArgs)  \n Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  \n New Point(5, - 5)  \n Dim capPath As New GraphicsPath()  \n &#39; Create a Path and add two lines to it,  \n &#39; forming a custom line cap.  \n capPath.AddLines(points)  \n &#39; Create a CustomLineCap object.  \n Dim firstCap As New CustomLineCap(Nothing, capPath)  \n &#39; Create a copy of firstCap.  \n Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  \n CustomLineCap)  \n &#39; Create a Pen object.  \n Dim pen As New Pen(Color.Black, 3F)  \n &#39;Set up the line.  \n Dim point1 As New Point(20, 20)  \n Dim point2 As New Point(100, 100)  \n &#39; Set up the caps.  \n pen.CustomStartCap = firstCap  \n pen.CustomEndCap = secondCap  \n &#39; Draw the line and caps to the screen.  \n e.Graphics.DrawLine(pen, point1, point2)  \n End Sub  \n</code></pre><pre><code class=\"lang-c#\">private void CloneExample(PaintEventArgs e)  \n {  \n // Create a Path and add two lines to it,  \n // forming a custom line cap.  \n Point[] points =  \n {  \n new Point(-5, -5),  \n new Point(0, 0),  \n new Point(5, -5)  \n };  \n GraphicsPath capPath = new GraphicsPath();  \n capPath.AddLines(points);  \n // Create a CustomLineCap object.  \n CustomLineCap firstCap = new CustomLineCap(null, capPath);  \n // Create a copy of firstCap.  \n CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  \n // Create a Pen object.  \n Pen pen = new Pen(Color.Black, 3.0f);  \n // Set up the line.  \n Point point1 = new Point(20, 20);  \n Point point2 = new Point(100, 100);  \n // Set up the caps.  \n pen.CustomStartCap = firstCap;  \n pen.CustomEndCap = secondCap;  \n // Draw the line and caps to the screen.  \n e.Graphics.DrawLine(pen, point1, point2);  \n }  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_Dispose\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> allows the resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> object to be reallocated for other purposes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_Finalize\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> to attempt to free resources and perform other cleanup operations before the <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~CustomLineCap ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_GetStrokeCaps_System_Drawing_Drawing2D_LineCap__System_Drawing_Drawing2D_LineCap__\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_GetStrokeCaps_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStrokeCaps(LineCap,LineCap)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the caps used to start and end lines that make up this custom cap.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>startCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration used at the beginning of a line within this cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration used at the end of a line within this cap.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the GetStrokeCaps method. To run this example, paste the code into a Windows Form. Handle the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call <code>DrawCaps</code> from the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Misc3#1\">    Protected Sub DrawCaps(ByVal e As PaintEventArgs)\n        Dim hPath As New GraphicsPath()\n\n        &#39; Create the outline for our custom end cap.\n        hPath.AddLine(New Point(0, 0), New Point(0, 5))\n        hPath.AddLine(New Point(0, 5), New Point(5, 1))\n        hPath.AddLine(New Point(5, 1), New Point(3, 1))\n\n        &#39; Construct the hook-shaped end cap.\n        Dim HookCap As New CustomLineCap(Nothing, hPath)\n\n        &#39; Set the start cap and end cap of the HookCap to be rounded.\n        HookCap.SetStrokeCaps(LineCap.Round, LineCap.Round)\n\n        &#39; Create a pen and set end custom start and end\n        &#39; caps to the hook cap.\n        Dim customCapPen As New Pen(Color.Black, 5)\n        customCapPen.CustomStartCap = HookCap\n        customCapPen.CustomEndCap = HookCap\n\n        &#39; Create a second pen using the start and end caps from\n        &#39; the hook cap.\n        Dim capPen As New Pen(Color.Red, 10)\n        Dim startCap As LineCap\n        Dim endCap As LineCap\n        HookCap.GetStrokeCaps(startCap, endCap)\n        capPen.StartCap = startCap\n        capPen.EndCap = endCap\n\n        &#39; Create a line to draw.\n        Dim points As Point() = {New Point(100, 100), New Point(200, 50), _\n            New Point(250, 300)}\n\n        &#39; Draw the lines.\n        e.Graphics.DrawLines(capPen, points)\n        e.Graphics.DrawLines(customCapPen, points)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Misc3#1\">\n    protected void DrawCaps(PaintEventArgs e)\n    {\n        GraphicsPath hPath = new GraphicsPath();\n\n        // Create the outline for our custom end cap.\n        hPath.AddLine(new Point(0, 0), new Point(0, 5));\n        hPath.AddLine(new Point(0, 5), new Point(5, 1));\n        hPath.AddLine(new Point(5, 1), new Point(3, 1));\n\n        // Construct the hook-shaped end cap.\n        CustomLineCap HookCap = new CustomLineCap(null, hPath);\n\n        // Set the start cap and end cap of the HookCap to be rounded.\n        HookCap.SetStrokeCaps(LineCap.Round, LineCap.Round);\n\n        // Create a pen and set end custom start and end\n        // caps to the hook cap.\n        Pen customCapPen = new Pen(Color.Black, 5);\n        customCapPen.CustomStartCap = HookCap;\n        customCapPen.CustomEndCap = HookCap;\n\n        // Create a second pen using the start and end caps from\n        // the hook cap.\n        Pen capPen = new Pen(Color.Red, 10);\n        LineCap startCap;\n        LineCap endCap;\n        HookCap.GetStrokeCaps(out startCap, out endCap);\n        capPen.StartCap = startCap;\n        capPen.EndCap = endCap;\n\n        // Create a line to draw.\n        Point[] points = { new Point(100, 100), new Point(200, 50), \n            new Point(250, 300) };\n\n        // Draw the lines.\n        e.Graphics.DrawLines(capPen, points);\n        e.Graphics.DrawLines(customCapPen, points);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_CustomLineCap_SetStrokeCaps_System_Drawing_Drawing2D_LineCap_System_Drawing_Drawing2D_LineCap_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_CustomLineCap_SetStrokeCaps_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetStrokeCaps(LineCap,LineCap)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the caps used to start and end lines that make up this custom cap.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>startCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration used at the beginning of a line within this cap.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> enumeration used at the end of a line within this cap.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the SetStrokeCaps method. To run this example, paste the code into a Windows Form. Handle the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event and call <code>DrawCaps</code> from the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event-handling method, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.Misc3#1\">    Protected Sub DrawCaps(ByVal e As PaintEventArgs)\n        Dim hPath As New GraphicsPath()\n\n        &#39; Create the outline for our custom end cap.\n        hPath.AddLine(New Point(0, 0), New Point(0, 5))\n        hPath.AddLine(New Point(0, 5), New Point(5, 1))\n        hPath.AddLine(New Point(5, 1), New Point(3, 1))\n\n        &#39; Construct the hook-shaped end cap.\n        Dim HookCap As New CustomLineCap(Nothing, hPath)\n\n        &#39; Set the start cap and end cap of the HookCap to be rounded.\n        HookCap.SetStrokeCaps(LineCap.Round, LineCap.Round)\n\n        &#39; Create a pen and set end custom start and end\n        &#39; caps to the hook cap.\n        Dim customCapPen As New Pen(Color.Black, 5)\n        customCapPen.CustomStartCap = HookCap\n        customCapPen.CustomEndCap = HookCap\n\n        &#39; Create a second pen using the start and end caps from\n        &#39; the hook cap.\n        Dim capPen As New Pen(Color.Red, 10)\n        Dim startCap As LineCap\n        Dim endCap As LineCap\n        HookCap.GetStrokeCaps(startCap, endCap)\n        capPen.StartCap = startCap\n        capPen.EndCap = endCap\n\n        &#39; Create a line to draw.\n        Dim points As Point() = {New Point(100, 100), New Point(200, 50), _\n            New Point(250, 300)}\n\n        &#39; Draw the lines.\n        e.Graphics.DrawLines(capPen, points)\n        e.Graphics.DrawLines(customCapPen, points)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Misc3#1\">\n    protected void DrawCaps(PaintEventArgs e)\n    {\n        GraphicsPath hPath = new GraphicsPath();\n\n        // Create the outline for our custom end cap.\n        hPath.AddLine(new Point(0, 0), new Point(0, 5));\n        hPath.AddLine(new Point(0, 5), new Point(5, 1));\n        hPath.AddLine(new Point(5, 1), new Point(3, 1));\n\n        // Construct the hook-shaped end cap.\n        CustomLineCap HookCap = new CustomLineCap(null, hPath);\n\n        // Set the start cap and end cap of the HookCap to be rounded.\n        HookCap.SetStrokeCaps(LineCap.Round, LineCap.Round);\n\n        // Create a pen and set end custom start and end\n        // caps to the hook cap.\n        Pen customCapPen = new Pen(Color.Black, 5);\n        customCapPen.CustomStartCap = HookCap;\n        customCapPen.CustomEndCap = HookCap;\n\n        // Create a second pen using the start and end caps from\n        // the hook cap.\n        Pen capPen = new Pen(Color.Red, 10);\n        LineCap startCap;\n        LineCap endCap;\n        HookCap.GetStrokeCaps(out startCap, out endCap);\n        capPen.StartCap = startCap;\n        capPen.EndCap = endCap;\n\n        // Create a line to draw.\n        Point[] points = { new Point(100, 100), new Point(200, 50), \n            new Point(250, 300) };\n\n        // Draw the lines.\n        e.Graphics.DrawLines(capPen, points);\n        e.Graphics.DrawLines(customCapPen, points);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.CustomLineCap.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.CustomLineCap.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.BaseCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.BaseInset\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.StrokeJoin\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.CustomLineCap.WidthScale\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"dd46221b-1aef-8e62-6ca4-6fd0b4ea57f9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates a custom user-defined line cap.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Drawing2D/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Drawing2D.CustomLineCap\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.CustomLineCap.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.CustomLineCap.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Drawing2D.CustomLineCap","System.Drawing.Drawing2D.CustomLineCap..ctor","System.Drawing.Drawing2D.CustomLineCap.BaseCap","System.Drawing.Drawing2D.CustomLineCap.BaseInset","System.Drawing.Drawing2D.CustomLineCap.Clone","System.Drawing.Drawing2D.CustomLineCap.Dispose","System.Drawing.Drawing2D.CustomLineCap.Finalize","System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps","System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps","System.Drawing.Drawing2D.CustomLineCap.StrokeJoin","System.Drawing.Drawing2D.CustomLineCap.WidthScale"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Drawing2D.CustomLineCap","System::Drawing::Drawing2D::CustomLineCap","System.Drawing.Drawing2D.CustomLineCap.#ctor","System::Drawing::Drawing2D::CustomLineCap::#ctor","System.Drawing.Drawing2D.CustomLineCap.BaseCap","System::Drawing::Drawing2D::CustomLineCap::BaseCap","System.Drawing.Drawing2D.CustomLineCap.BaseInset","System::Drawing::Drawing2D::CustomLineCap::BaseInset","System.Drawing.Drawing2D.CustomLineCap.Clone","System::Drawing::Drawing2D::CustomLineCap::Clone","System.Drawing.Drawing2D.CustomLineCap.Dispose","System::Drawing::Drawing2D::CustomLineCap::Dispose","System.Drawing.Drawing2D.CustomLineCap.Finalize","System::Drawing::Drawing2D::CustomLineCap::Finalize","System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps","System::Drawing::Drawing2D::CustomLineCap::GetStrokeCaps","System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps","System::Drawing::Drawing2D::CustomLineCap::SetStrokeCaps","System.Drawing.Drawing2D.CustomLineCap.StrokeJoin","System::Drawing::Drawing2D::CustomLineCap::StrokeJoin","System.Drawing.Drawing2D.CustomLineCap.WidthScale","System::Drawing::Drawing2D::CustomLineCap::WidthScale"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"dd46221b-1aef-8e62-6ca4-6fd0b4ea57f9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Drawing2D/CustomLineCap.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CustomLineCap class | Microsoft Docs","_op_ogTitle":"CustomLineCap class","description":"Encapsulates a custom user-defined line cap.\n","toc_asset_id":"_splitted/System.Drawing.Drawing2D/toc.json","toc_rel":"_splitted/System.Drawing.Drawing2D/toc.json","source_url":"","ms.assetid":"System.Drawing.Drawing2D.CustomLineCap","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.customlinecap","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.customlinecap","fileRelativePath":"System.Drawing.Drawing2D.CustomLineCap.html"},"themesRelativePathToOutputRoot":"_themes/"}