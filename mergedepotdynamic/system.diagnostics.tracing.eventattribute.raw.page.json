{"content":"    \r\n    <h1 id=\"System_Diagnostics_Tracing_EventAttribute\">\r\n      <span class=\"lang-csharp\">EventAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies additional event schema information for an event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Method)]\npublic sealed class EventAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EventAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>When you apply this attribute to an ETW event method defined on an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class, you must call the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed. You should follow the pattern shown in the following examples.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute__ctor_System_Int32_\" data-linktype=\"self-bookmark\">EventAttribute(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute\" data-linktype=\"relative-path\">EventAttribute</a> class with the specified event identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_ActivityOptions\" data-linktype=\"self-bookmark\">ActivityOptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Channel\" data-linktype=\"self-bookmark\">Channel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an additional event log where the event should be written.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_EventId\" data-linktype=\"self-bookmark\">EventId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the identifier for the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Keywords\" data-linktype=\"self-bookmark\">Keywords</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the keywords for the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Level\" data-linktype=\"self-bookmark\">Level</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the level for the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Message\" data-linktype=\"self-bookmark\">Message</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the message for the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Opcode\" data-linktype=\"self-bookmark\">Opcode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the operation code for the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Tags\" data-linktype=\"self-bookmark\">Tags</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the <a class=\"xref\" href=\"system.diagnostics.tracing.eventtags\" data-linktype=\"relative-path\">EventTags</a> value for this <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute\" data-linktype=\"relative-path\">EventAttribute</a> object. An event tag is a user-defined value that is passed through when the event is logged.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Task\" data-linktype=\"self-bookmark\">Task</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the task for the event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventAttribute_Version\" data-linktype=\"self-bookmark\">Version</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the version of the event.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute__ctor_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventAttribute(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute\" data-linktype=\"relative-path\">EventAttribute</a> class with the specified event identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EventAttribute (int eventId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the EventAttribute constructor to specify events. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#1\">Imports System\nImports System.Diagnostics.Tracing\n\n\nEnum MyColor\n    Red\n    Yellow\n    Blue\nEnd Enum &#39;MyColor \n&lt;EventSource(Name:=&quot;MyCompany&quot;)&gt; _\nClass MyCompanyEventSource\n    Inherits EventSource\n\n    Public Class Keywords\n        Public Const Page As EventKeywords = CType(1, EventKeywords)\n        Public Const DataBase As EventKeywords = CType(2, EventKeywords)\n        Public Const Diagnostic As EventKeywords = CType(4, EventKeywords)\n        Public Const Perf As EventKeywords = CType(8, EventKeywords)\n    End Class &#39;Keywords\n\n    Public Class Tasks\n        Public Const Page As EventTask = CType(1, EventTask)\n        Public Const DBQuery As EventTask = CType(2, EventTask)\n    End Class &#39;Tasks\n\n    &lt;[Event](1, Message:=&quot;Application Failure: {0}&quot;, Level:=EventLevel.Error, Keywords:=Keywords.Diagnostic)&gt; _\n    Public Sub Failure(ByVal message As String)\n        WriteEvent(1, message)\n    End Sub &#39;Failure\n\n    &lt;[Event](2, Message:=&quot;Starting up.&quot;, Keywords:=Keywords.Perf, Level:=EventLevel.Informational)&gt; _\n    Public Sub Startup()\n        WriteEvent(2)\n    End Sub &#39;Startup\n\n    &lt;[Event](3, Message:=&quot;loading page {1} activityID={0}&quot;, Opcode:=EventOpcode.Start, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStart(ByVal ID As Integer, ByVal url As String)\n        If IsEnabled() Then\n            WriteEvent(3, ID, url)\n        End If\n    End Sub &#39;PageStart\n\n    &lt;[Event](4, Opcode:=EventOpcode.Stop, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStop(ByVal ID As Integer)\n        If IsEnabled() Then\n            WriteEvent(4, ID)\n        End If\n    End Sub &#39;PageStop\n\n    &lt;[Event](5, Opcode:=EventOpcode.Start, Task:=Tasks.DBQuery, Keywords:=Keywords.DataBase, Level:=EventLevel.Informational)&gt; _\n    Public Sub DBQueryStart(ByVal sqlQuery As String)\n        WriteEvent(5, sqlQuery)\n    End Sub &#39;DBQueryStart\n\n    &lt;[Event](6, Opcode:=EventOpcode.Stop, Task:=Tasks.DBQuery, Keywords:=Keywords.DataBase, Level:=EventLevel.Informational)&gt; _\n    Public Sub DBQueryStop()\n        WriteEvent(6)\n    End Sub &#39;DBQueryStop\n\n    &lt;[Event](7, Level:=EventLevel.Verbose, Keywords:=Keywords.DataBase)&gt; _\n    Public Sub Mark(ByVal ID As Integer)\n        If IsEnabled() Then\n            WriteEvent(7, ID)\n        End If\n    End Sub &#39;Mark\n\n    &lt;[Event](8)&gt; _\n    Public Sub LogColor(ByVal color As MyColor)\n        WriteEvent(8, Fix(color))\n    End Sub &#39;LogColor \n    Public Shared Log As New MyCompanyEventSource()\nEnd Class &#39;MyCompanyEventSource\n\n\nClass Program\n\n    Shared Sub Main(ByVal args() As String)\n        MyCompanyEventSource.Log.Startup()\n        Console.WriteLine(&quot;Starting up&quot;)\n        MyCompanyEventSource.Log.DBQueryStart(&quot;Select * from MYTable&quot;)\n        Dim url As String = &quot;http:&#39;localhost&quot;\n        Dim i As Integer\n        For i = 0 To 9\n            MyCompanyEventSource.Log.PageStart(i, url)\n            MyCompanyEventSource.Log.Mark(i)\n            MyCompanyEventSource.Log.PageStop(i)\n        Next i\n        MyCompanyEventSource.Log.DBQueryStop()\n        MyCompanyEventSource.Log.LogColor(MyColor.Blue)\n\n        MyCompanyEventSource.Log.Failure(&quot;This is a failure 1&quot;)\n        MyCompanyEventSource.Log.Failure(&quot;This is a failure 2&quot;)\n        MyCompanyEventSource.Log.Failure(&quot;This is a failure 3&quot;)\n    End Sub &#39;Main\nEnd Class &#39;Program\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#1\">using System;\nusing System.Diagnostics.Tracing;\n\nnamespace Demo2\n{\n    enum MyColor { Red, Yellow, Blue };\n\n    [EventSource(Name = &quot;MyCompany&quot;)]\n    class MyCompanyEventSource : EventSource\n    {\n        public class Keywords\n        {\n            public const EventKeywords Page = (EventKeywords)1;\n            public const EventKeywords DataBase = (EventKeywords)2;\n            public const EventKeywords Diagnostic = (EventKeywords)4;\n            public const EventKeywords Perf = (EventKeywords)8;\n        }\n\n        public class Tasks\n        {\n            public const EventTask Page = (EventTask)1;\n            public const EventTask DBQuery = (EventTask)2;\n        }\n\n        [Event(1, Message = &quot;Application Failure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]\n        public void Failure(string message) { WriteEvent(1, message); }\n\n        [Event(2, Message = &quot;Starting up.&quot;, Keywords = Keywords.Perf, Level = EventLevel.Informational)]\n        public void Startup() { WriteEvent(2); }\n\n        [Event(3, Message = &quot;loading page {1} activityID={0}&quot;, Opcode = EventOpcode.Start, \n            Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStart(int ID, string url) { if (IsEnabled()) WriteEvent(3, ID, url); }\n\n        [Event(4, Opcode = EventOpcode.Stop, Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStop(int ID) { if (IsEnabled()) WriteEvent(4, ID); }\n\n        [Event(5, Opcode = EventOpcode.Start, Task = Tasks.DBQuery, Keywords = Keywords.DataBase, Level = EventLevel.Informational)]\n        public void DBQueryStart(string sqlQuery) { WriteEvent(5, sqlQuery); }\n\n        [Event(6, Opcode = EventOpcode.Stop, Task = Tasks.DBQuery, Keywords = Keywords.DataBase, Level = EventLevel.Informational)]\n        public void DBQueryStop() { WriteEvent(6); }\n\n        [Event(7, Level = EventLevel.Verbose, Keywords = Keywords.DataBase)]\n        public void Mark(int ID) { if (IsEnabled()) WriteEvent(7, ID); }\n\n        [Event(8)]\n        public void LogColor(MyColor color) { WriteEvent(8, (int) color); }\n\n        public static MyCompanyEventSource Log = new MyCompanyEventSource();\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            MyCompanyEventSource.Log.Startup();\n            Console.WriteLine(&quot;Starting up&quot;);\n\n            MyCompanyEventSource.Log.DBQueryStart(&quot;Select * from MYTable&quot;);\n            var url = &quot;http://localhost&quot;;\n            for (int i = 0; i &lt; 10; i++)\n            {\n                MyCompanyEventSource.Log.PageStart(i, url);\n                MyCompanyEventSource.Log.Mark(i);\n                MyCompanyEventSource.Log.PageStop(i);\n            }\n            MyCompanyEventSource.Log.DBQueryStop();\n            MyCompanyEventSource.Log.LogColor(MyColor.Blue);\n\n            MyCompanyEventSource.Log.Failure(&quot;This is a failure 1&quot;);\n            MyCompanyEventSource.Log.Failure(&quot;This is a failure 2&quot;);\n            MyCompanyEventSource.Log.Failure(&quot;This is a failure 3&quot;);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#2\">    Public Class Keywords\n        Public Const Page As EventKeywords = CType(1, EventKeywords)\n        Public Const DataBase As EventKeywords = CType(2, EventKeywords)\n        Public Const Diagnostic As EventKeywords = CType(4, EventKeywords)\n        Public Const Perf As EventKeywords = CType(8, EventKeywords)\n    End Class &#39;Keywords\n\n    Public Class Tasks\n        Public Const Page As EventTask = CType(1, EventTask)\n        Public Const DBQuery As EventTask = CType(2, EventTask)\n    End Class &#39;Tasks\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#2\">        public class Keywords\n        {\n            public const EventKeywords Page = (EventKeywords)1;\n            public const EventKeywords DataBase = (EventKeywords)2;\n            public const EventKeywords Diagnostic = (EventKeywords)4;\n            public const EventKeywords Perf = (EventKeywords)8;\n        }\n\n        public class Tasks\n        {\n            public const EventTask Page = (EventTask)1;\n            public const EventTask DBQuery = (EventTask)2;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_ActivityOptions\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_ActivityOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActivityOptions</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventActivityOptions ActivityOptions { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventactivityoptions\" data-linktype=\"relative-path\">EventActivityOptions</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.diagnostics.tracing.eventactivityoptions\" data-linktype=\"relative-path\">EventActivityOptions</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Channel\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Channel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Channel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an additional event log where the event should be written.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventChannel Channel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventchannel\" data-linktype=\"relative-path\">EventChannel</a></div>\r\n                  </div>\r\n                  <p>An additional event log where the event should be written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_EventId\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_EventId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventId</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the identifier for the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int EventId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The event identifier. This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>EventId should be greater than 0 or less than 65535 or errors can occur in a tracing operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Keywords\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Keywords_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Keywords</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the keywords for the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventKeywords Keywords { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventkeywords\" data-linktype=\"relative-path\">EventKeywords</a></div>\r\n                  </div>\r\n                  <p>A bitwise combination of the enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Keywords property to define event keywords. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#3\">    Public Class Keywords\n        Public Const Page As EventKeywords = CType(1, EventKeywords)\n        Public Const DataBase As EventKeywords = CType(2, EventKeywords)\n        Public Const Diagnostic As EventKeywords = CType(4, EventKeywords)\n        Public Const Perf As EventKeywords = CType(8, EventKeywords)\n    End Class &#39;Keywords\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#3\">        public class Keywords\n        {\n            public const EventKeywords Page = (EventKeywords)1;\n            public const EventKeywords DataBase = (EventKeywords)2;\n            public const EventKeywords Diagnostic = (EventKeywords)4;\n            public const EventKeywords Perf = (EventKeywords)8;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#5\">    &lt;[Event](1, Message:=&quot;Application Failure: {0}&quot;, Level:=EventLevel.Error, Keywords:=Keywords.Diagnostic)&gt; _\n    Public Sub Failure(ByVal message As String)\n        WriteEvent(1, message)\n    End Sub &#39;Failure\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#5\">        [Event(1, Message = &quot;Application Failure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]\n        public void Failure(string message) { WriteEvent(1, message); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#6\">    &lt;[Event](2, Message:=&quot;Starting up.&quot;, Keywords:=Keywords.Perf, Level:=EventLevel.Informational)&gt; _\n    Public Sub Startup()\n        WriteEvent(2)\n    End Sub &#39;Startup\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#6\">        [Event(2, Message = &quot;Starting up.&quot;, Keywords = Keywords.Perf, Level = EventLevel.Informational)]\n        public void Startup() { WriteEvent(2); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#7\">    &lt;[Event](3, Message:=&quot;loading page {1} activityID={0}&quot;, Opcode:=EventOpcode.Start, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStart(ByVal ID As Integer, ByVal url As String)\n        If IsEnabled() Then\n            WriteEvent(3, ID, url)\n        End If\n    End Sub &#39;PageStart\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#7\">        [Event(3, Message = &quot;loading page {1} activityID={0}&quot;, Opcode = EventOpcode.Start, \n            Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStart(int ID, string url) { if (IsEnabled()) WriteEvent(3, ID, url); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Level\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Level_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Level</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the level for the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventLevel Level { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventlevel\" data-linktype=\"relative-path\">EventLevel</a></div>\r\n                  </div>\r\n                  <p>One of the enumeration values that specifies the level for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Level property to specify event levels. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#5\">    &lt;[Event](1, Message:=&quot;Application Failure: {0}&quot;, Level:=EventLevel.Error, Keywords:=Keywords.Diagnostic)&gt; _\n    Public Sub Failure(ByVal message As String)\n        WriteEvent(1, message)\n    End Sub &#39;Failure\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#5\">        [Event(1, Message = &quot;Application Failure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]\n        public void Failure(string message) { WriteEvent(1, message); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#6\">    &lt;[Event](2, Message:=&quot;Starting up.&quot;, Keywords:=Keywords.Perf, Level:=EventLevel.Informational)&gt; _\n    Public Sub Startup()\n        WriteEvent(2)\n    End Sub &#39;Startup\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#6\">        [Event(2, Message = &quot;Starting up.&quot;, Keywords = Keywords.Perf, Level = EventLevel.Informational)]\n        public void Startup() { WriteEvent(2); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#11\">    &lt;[Event](7, Level:=EventLevel.Verbose, Keywords:=Keywords.DataBase)&gt; _\n    Public Sub Mark(ByVal ID As Integer)\n        If IsEnabled() Then\n            WriteEvent(7, ID)\n        End If\n    End Sub &#39;Mark\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#11\">        [Event(7, Level = EventLevel.Verbose, Keywords = Keywords.DataBase)]\n        public void Mark(int ID) { if (IsEnabled()) WriteEvent(7, ID); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Message\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Message_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Message</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the message for the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Message { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The message for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use standard .NET Framework substitution operators (for example, {1}) in the string). They will be replaced with the string representation of the corresponding part of the event payload.  </p>\n<pre><code>[Event(1, Message = &quot;Application Falure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]  \n        public void Failure(string message) { WriteEvent(1, message); }  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Message property to specify event messages. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#5\">    &lt;[Event](1, Message:=&quot;Application Failure: {0}&quot;, Level:=EventLevel.Error, Keywords:=Keywords.Diagnostic)&gt; _\n    Public Sub Failure(ByVal message As String)\n        WriteEvent(1, message)\n    End Sub &#39;Failure\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#5\">        [Event(1, Message = &quot;Application Failure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]\n        public void Failure(string message) { WriteEvent(1, message); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#6\">    &lt;[Event](2, Message:=&quot;Starting up.&quot;, Keywords:=Keywords.Perf, Level:=EventLevel.Informational)&gt; _\n    Public Sub Startup()\n        WriteEvent(2)\n    End Sub &#39;Startup\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#6\">        [Event(2, Message = &quot;Starting up.&quot;, Keywords = Keywords.Perf, Level = EventLevel.Informational)]\n        public void Startup() { WriteEvent(2); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#7\">    &lt;[Event](3, Message:=&quot;loading page {1} activityID={0}&quot;, Opcode:=EventOpcode.Start, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStart(ByVal ID As Integer, ByVal url As String)\n        If IsEnabled() Then\n            WriteEvent(3, ID, url)\n        End If\n    End Sub &#39;PageStart\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#7\">        [Event(3, Message = &quot;loading page {1} activityID={0}&quot;, Opcode = EventOpcode.Start, \n            Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStart(int ID, string url) { if (IsEnabled()) WriteEvent(3, ID, url); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Opcode\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Opcode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Opcode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the operation code for the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventOpcode Opcode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventopcode\" data-linktype=\"relative-path\">EventOpcode</a></div>\r\n                  </div>\r\n                  <p>One of the enumeration values that specifies the operation code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Opcode property to specify operation codes. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#8\">    &lt;[Event](4, Opcode:=EventOpcode.Stop, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStop(ByVal ID As Integer)\n        If IsEnabled() Then\n            WriteEvent(4, ID)\n        End If\n    End Sub &#39;PageStop\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#8\">        [Event(4, Opcode = EventOpcode.Stop, Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStop(int ID) { if (IsEnabled()) WriteEvent(4, ID); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#9\">    &lt;[Event](5, Opcode:=EventOpcode.Start, Task:=Tasks.DBQuery, Keywords:=Keywords.DataBase, Level:=EventLevel.Informational)&gt; _\n    Public Sub DBQueryStart(ByVal sqlQuery As String)\n        WriteEvent(5, sqlQuery)\n    End Sub &#39;DBQueryStart\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#9\">        [Event(5, Opcode = EventOpcode.Start, Task = Tasks.DBQuery, Keywords = Keywords.DataBase, Level = EventLevel.Informational)]\n        public void DBQueryStart(string sqlQuery) { WriteEvent(5, sqlQuery); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#10\">    &lt;[Event](6, Opcode:=EventOpcode.Stop, Task:=Tasks.DBQuery, Keywords:=Keywords.DataBase, Level:=EventLevel.Informational)&gt; _\n    Public Sub DBQueryStop()\n        WriteEvent(6)\n    End Sub &#39;DBQueryStop\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#10\">        [Event(6, Opcode = EventOpcode.Stop, Task = Tasks.DBQuery, Keywords = Keywords.DataBase, Level = EventLevel.Informational)]\n        public void DBQueryStop() { WriteEvent(6); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Tags\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Tags_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Tags</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the <a class=\"xref\" href=\"system.diagnostics.tracing.eventtags\" data-linktype=\"relative-path\">EventTags</a> value for this <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute\" data-linktype=\"relative-path\">EventAttribute</a> object. An event tag is a user-defined value that is passed through when the event is logged.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventTags Tags { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventtags\" data-linktype=\"relative-path\">EventTags</a></div>\r\n                  </div>\r\n                  <p>Returns the <a class=\"xref\" href=\"system.diagnostics.tracing.eventtags\" data-linktype=\"relative-path\">EventTags</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Task\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Task_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Task</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the task for the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventTask Task { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventtask\" data-linktype=\"relative-path\">EventTask</a></div>\r\n                  </div>\r\n                  <p>The task for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Task property to define event tasks. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#4\">    Public Class Tasks\n        Public Const Page As EventTask = CType(1, EventTask)\n        Public Const DBQuery As EventTask = CType(2, EventTask)\n    End Class &#39;Tasks\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#4\">        public class Tasks\n        {\n            public const EventTask Page = (EventTask)1;\n            public const EventTask DBQuery = (EventTask)2;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#8\">    &lt;[Event](4, Opcode:=EventOpcode.Stop, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStop(ByVal ID As Integer)\n        If IsEnabled() Then\n            WriteEvent(4, ID)\n        End If\n    End Sub &#39;PageStop\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#8\">        [Event(4, Opcode = EventOpcode.Stop, Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStop(int ID) { if (IsEnabled()) WriteEvent(4, ID); }\n</code></pre><pre><code class=\"lang-vb\" name=\"ETWTrace#9\">    &lt;[Event](5, Opcode:=EventOpcode.Start, Task:=Tasks.DBQuery, Keywords:=Keywords.DataBase, Level:=EventLevel.Informational)&gt; _\n    Public Sub DBQueryStart(ByVal sqlQuery As String)\n        WriteEvent(5, sqlQuery)\n    End Sub &#39;DBQueryStart\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#9\">        [Event(5, Opcode = EventOpcode.Start, Task = Tasks.DBQuery, Keywords = Keywords.DataBase, Level = EventLevel.Informational)]\n        public void DBQueryStart(string sqlQuery) { WriteEvent(5, sqlQuery); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventAttribute_Version\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventAttribute_Version_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Version</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the version of the event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte Version { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </div>\r\n                  <p>The version of the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.Tracing.EventAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.ActivityOptions\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Channel\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.EventId\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Keywords\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Level\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Message\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Opcode\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Tags\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Task\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventAttribute.Version\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"7c279757-beca-dad7-a4a9-69fad5a9ac43\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies additional event schema information for an event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics.Tracing/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.Tracing.EventAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.Tracing.EventAttribute.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.Tracing.EventAttribute","System.Diagnostics.Tracing.EventAttribute..ctor","System.Diagnostics.Tracing.EventAttribute.ActivityOptions","System.Diagnostics.Tracing.EventAttribute.Channel","System.Diagnostics.Tracing.EventAttribute.EventId","System.Diagnostics.Tracing.EventAttribute.Keywords","System.Diagnostics.Tracing.EventAttribute.Level","System.Diagnostics.Tracing.EventAttribute.Message","System.Diagnostics.Tracing.EventAttribute.Opcode","System.Diagnostics.Tracing.EventAttribute.Tags","System.Diagnostics.Tracing.EventAttribute.Task","System.Diagnostics.Tracing.EventAttribute.Version"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.Tracing.EventAttribute","System::Diagnostics::Tracing::EventAttribute","System.Diagnostics.Tracing.EventAttribute.#ctor","System::Diagnostics::Tracing::EventAttribute::#ctor","System.Diagnostics.Tracing.EventAttribute.ActivityOptions","System::Diagnostics::Tracing::EventAttribute::ActivityOptions","System.Diagnostics.Tracing.EventAttribute.Channel","System::Diagnostics::Tracing::EventAttribute::Channel","System.Diagnostics.Tracing.EventAttribute.EventId","System::Diagnostics::Tracing::EventAttribute::EventId","System.Diagnostics.Tracing.EventAttribute.Keywords","System::Diagnostics::Tracing::EventAttribute::Keywords","System.Diagnostics.Tracing.EventAttribute.Level","System::Diagnostics::Tracing::EventAttribute::Level","System.Diagnostics.Tracing.EventAttribute.Message","System::Diagnostics::Tracing::EventAttribute::Message","System.Diagnostics.Tracing.EventAttribute.Opcode","System::Diagnostics::Tracing::EventAttribute::Opcode","System.Diagnostics.Tracing.EventAttribute.Tags","System::Diagnostics::Tracing::EventAttribute::Tags","System.Diagnostics.Tracing.EventAttribute.Task","System::Diagnostics::Tracing::EventAttribute::Task","System.Diagnostics.Tracing.EventAttribute.Version","System::Diagnostics::Tracing::EventAttribute::Version"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"7c279757-beca-dad7-a4a9-69fad5a9ac43","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics.Tracing/EventAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventAttribute class | Microsoft Docs","_op_ogTitle":"EventAttribute class","description":"Specifies additional event schema information for an event.\n","toc_asset_id":"_splitted/System.Diagnostics.Tracing/toc.json","toc_rel":"_splitted/System.Diagnostics.Tracing/toc.json","source_url":"","ms.assetid":"System.Diagnostics.Tracing.EventAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.tracing.eventattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.tracing.eventattribute","fileRelativePath":"System.Diagnostics.Tracing.EventAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}