{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EventLog</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides interaction with Windows event logs.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;EntryWritten&quot;)]\n[System.ComponentModel.InstallerType(&quot;System.Diagnostics.EventLogInstaller, System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Diagnostics.MonitoringDescription(&quot;EventLogDesc&quot;)]\npublic class EventLog : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">EventLog</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>EventLog lets you access or customize Windows event logs, which record information about important software or hardware events. Using EventLog, you can read from existing logs, write entries to logs, create or delete event sources, delete logs, and respond to log entries. You can also create new logs when creating an event source.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n</div>\n<p> In addition to providing access to individual event logs and their entries, the EventLog class lets you access the collection of all event logs. You can use the <code>static</code> members of EventLog to delete logs, get log lists, create or delete a source, or determine if a computer already contains a particular source.  </p>\n<p> There are three default event logs: Application, System, and Security. A Security log is read-only. Other applications and services you install, such as Active Directory, might have additional event logs.  </p>\n<p> There are security considerations when using the EventLog class. EventLog requires <a class=\"xref\" href=\"system.diagnostics.eventlogpermission\" data-linktype=\"relative-path\">EventLogPermission</a> permissions for specific actions in the .NET Framework 2.0 and later versions, or full trust in the .NET Framework 1.0 and 1.1. We recommend that <a class=\"xref\" href=\"system.diagnostics.eventlogpermission\" data-linktype=\"relative-path\">EventLogPermission</a> not be granted to partially trusted code.  You should never pass any event log object, including <a class=\"xref\" href=\"system.diagnostics.eventlogentrycollection\" data-linktype=\"relative-path\">EventLogEntryCollection</a> and <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> objects, to less trusted code. For example, creating an EventLog object, writing an entry, and then passing the EventLog object to partially trusted code can create a security issue, because the ability to read and write to the event log allows code to perform actions such as issuing event log messages in the name of another application.  </p>\n<p> Starting with Windows Vista, User Account Control (UAC) determines the credentials of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To run the code that accesses the Security log, you must first elevate your credentials from standard user to administrator. You can do this when you start an application by opening the shortcut menu for the application (if you&#39;re using a mouse, right-click the application icon) and indicating that you want to run as an administrator.  </p>\n<p> You can use EventLog to create custom event logs that you can view through the server&#39;s Event Viewer. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_RegisterDisplayName_\" data-linktype=\"relative-path\">RegisterDisplayName</a> method to display a localized name for your event log in the Event Viewer. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_ModifyOverflowPolicy_\" data-linktype=\"relative-path\">ModifyOverflowPolicy</a> method to configure the behavior of your event log when it reaches its maximum log size.  </p>\n<p> To read from an event log, specify the log name (<a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property) and server computer name (<a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property for the event log. If you don&#39;t specify the server computer name, the local computer, &quot;.&quot;, is assumed. It&#39;s not necessary to specify the event source (<a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property), because a source is required only for writing to logs. The  <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> property is automatically populated with the event log&#39;s list of entries.  </p>\n<p> To write to an event log, specify or create an event source (<a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property). You must have administrative credentials on the computer to create a new event source. The event source registers your application with the event log as a valid source of entries. You can use the event source  to write to only one log at a time. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property can be any random string, but the name must be distinct from other sources on the computer. The event source is typically the name of the application or another identifying string. Trying to create a duplicate <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> value throws an exception. However, a single event log can be associated with multiple sources.  </p>\n<p> If the event source for the event log associated with the EventLog instance doesn&#39;t exist, a new event source is created. To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative credentials.  </p>\n<p> This requirement is because all event logs, including Security logs, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the Security log; therefore, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Creating or deleting an event source requires synchronization of the underlying code by using a named mutex. If a highly privileged application locks the named mutex, trying to create or delete an event source causes the application to stop responding until the lock is released. To help prevent this problem, never grant <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission to untrusted code. In addition, <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.  </p>\n</div>\n<p> Applications and services should write to the Application log or to a custom log. Device drivers should write to the System log. If you do not explicitly set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property, the event log defaults to the Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> There is nothing to protect an application from writing as any registered source.  If an application is granted <a class=\"xref\" href=\"system.diagnostics.eventlogpermissionaccess\" data-linktype=\"relative-path\">EventLogPermissionAccess</a> permission, it can write events for any valid source registered on the computer.  </p>\n</div>\n<p> Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> methods to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system hasn&#39;t refreshed its list of event sources, and you try to write an event with the new source, the write operation will fail. You can configure a new source by using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> object or the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative credentials on the computer to create a new event source.  </p>\n<p> Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files. To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration instead of deleting the existing source.  </p>\n<p> You can register the event source with localized resources for your event category and message strings. Your application can write event log entries by using resource identifiers instead of specifying the actual string values. Refer to the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> and <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata\" data-linktype=\"relative-path\">EventSourceCreationData</a> classes for more information about configuring your source with resource files.  </p>\n<p> If your application writes string values directly to the event log, you do not have to set the resource file properties for the source. The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<p> When writing events, you must at least specify either a message string or the resource identifier for a message string. Other event properties are optional. Examples of optional event settings include the following:  </p>\n<ul>\n<li><p>You can set the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> to specify the icon that the Event Viewer displays for the entry.  </p>\n</li>\n<li><p>You can specify a category identifier for the event, if your application uses categories for filtering the events.  </p>\n</li>\n<li><p>You can attach binary data to your event entry if you want to associate additional information with a given event.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Event logging consumes disk space, processor time, and other system resources. It is important to log only essential information. We recommend that you place event log calls in an error path, rather than in the main code path, so they don&#39;t adversely affect performance.  </p>\n</div>\n<p> For a list of initial property values for an instance of EventLog, see the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog__ctor_\" data-linktype=\"relative-path\">EventLog</a> constructor.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EventLog()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class. Does not associate the instance with any log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventLog ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Before calling <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance. If you are only reading <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> from the log, you can alternatively specify only the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a></td>\n<td>An empty string (&quot;&quot;).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a></td>\n<td>An empty string (&quot;&quot;).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a></td>\n<td>The local computer (&quot;.&quot;).</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog__ctor_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EventLog(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class. Associates the instance with a log on the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventLog (string logName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log name is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log name is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This overload sets the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property to the <code>logName</code> parameter. Before calling <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance. If you are only reading <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> from the log, you can alternatively specify only the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, the local computer (&quot;.&quot;) is assumed. This overload of the constructor specifies the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property, but you can change this before reading the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> property.  </p>\n</div>\n<p> If the source you specify in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property is unique from other sources on the computer, a subsequent call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> creates a log with the specified name, if it does not already exist.  </p>\n<p> The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a></td>\n<td>An empty string (&quot;&quot;).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a></td>\n<td>The <code>logName</code> parameter.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a></td>\n<td>The local computer (&quot;.&quot;).</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog__ctor_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EventLog(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class. Associates the instance with a log on the specified computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventLog (string logName, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The computer on which the log exists.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log name is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log name is invalid.  </p>\n<p> -or-  </p>\n<p> The computer name is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This overload sets the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property to the <code>logName</code> parameter and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the <code>machineName</code> parameter. Before calling <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>. If you are only reading <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> from the log, you can alternatively specify only the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This overload of the constructor specifies the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties, but you can change either before reading the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Entries_\" data-linktype=\"relative-path\">Entries</a> property.  </p>\n</div>\n<p> The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a></td>\n<td>An empty string (&quot;&quot;).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a></td>\n<td>The <code>logName</code> parameter.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a></td>\n<td>The <code>machineName</code> parameter.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog__ctor_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EventLog(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class. Associates the instance with a log on the specified computer and creates or assigns the specified source to the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EventLog (string logName, string machineName, string source);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log on the specified computer</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The computer on which the log exists.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source of event log entries.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log name is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log name is invalid.  </p>\n<p> -or-  </p>\n<p> The computer name is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor sets the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property to the <code>logName</code> parameter, the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property to the <code>machineName</code> parameter, and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property to the <code>source</code> parameter. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property is required when writing to an event log. However, if you are only reading from an event log, only the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties are required (as long as the event log on the server has a source already associated with it). If you are only reading from the event log, another overload of the constructor might suffice.  </p>\n<p> The following table shows initial property values for an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a></td>\n<td>The <code>source</code> parameter.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a></td>\n<td>The <code>logName</code> parameter.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a></td>\n<td>The <code>machineName</code> parameter.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_EnableRaisingEvents\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EnableRaisingEvents</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> receives <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event notifications.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool EnableRaisingEvents { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> receives notification when an entry is written to the log; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The event log is on a remote computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The EnableRaisingEvents property determines whether the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> raises events when entries are written to the log. When the property is <code>true</code>, components that receive the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event will receive notification any time an entry is written to the log that is specified in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property. If EnableRaisingEvents is <code>false</code>, no events are raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can receive event notifications only when entries are written on the local computer. You cannot receive notifications for entries written on remote computers.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Entries\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Entries</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the contents of the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Diagnostics.EventLogEntryCollection Entries { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrycollection\" data-linktype=\"relative-path\">EventLogEntryCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventlogentrycollection\" data-linktype=\"relative-path\">EventLogEntryCollection</a> holding the entries in the event log. Each entry is associated with an instance of the <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> class.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the Entries member when reading from the event log.  </p>\n<p> Because the property is read-only, you cannot modify an entry or write to the log using Entries. Instead, specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> and call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> to write a new log entry. You can use Entries to count the number of entries in the event log, and view each <a class=\"xref\" href=\"system.diagnostics.eventlogentry\" data-linktype=\"relative-path\">EventLogEntry</a> in the collection. Use the indexed <a class=\"xref\" href=\"system.diagnostics.eventlogentrycollection#System_Diagnostics_EventLogEntryCollection_Item_\" data-linktype=\"relative-path\">Item</a> member to retrieve information about a specific entry, such as <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_Message_\" data-linktype=\"relative-path\">Message</a>, <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_Category_\" data-linktype=\"relative-path\">Category</a>, <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_TimeWritten_\" data-linktype=\"relative-path\">TimeWritten</a>, or <a class=\"xref\" href=\"system.diagnostics.eventlogentry#System_Diagnostics_EventLogEntry_EntryType_\" data-linktype=\"relative-path\">EntryType</a>.  </p>\n<p> It is not necessary to specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> when only reading from a log. You can specify only the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> name and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> (server computer name) properties for the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance. In either case, the Entries member is automatically populated with the event log&#39;s list of entries. You can select the appropriate index for an item in this list to read individual entries.  </p>\n<p> An important distinction between reading and writing log entries is that it is not necessary to explicitly call a read method. After the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> are specified, the Entries property is automatically populated. If you change the value of the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property, the Entries property is repopulated the next time you read it.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You are not required to specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> if you are connecting to a log. If you do not specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, the local computer, &quot;.&quot;, is assumed.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Log\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Log</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the log to read from or write to.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Log { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log. This can be Application, System, Security, or a custom log name. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Three log files exist by default on the server: Application, System, and Security. Applications and services use the Application log file. Device drivers use the System log file. The system generates success and failure audit events in the Security log when auditing is turned on. If you have other applications installed, like Active Directory on Windows servers, there might be other default log files. In addition, you can create custom log files on a local or remote computer. Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Log names are limited to eight characters. According to the system, MyLogSample1 and MyLogSample2 are the same log.  </p>\n</div>\n<p> If you write to an event log, it is not enough to specify the Log property. You must associate a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property with your event log resource to connect it to a particular log. It is not necessary to specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> when only reading from a log, but an event source must be associated with the event log resource in the server&#39;s registry. You can specify only the Log name and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> (server computer name) to read from it.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You are not required to specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> if you are connecting to a log. If you do not specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property has not been specified, a call to Log returns an empty string if Log has not been explicitly set (by setting the Log property, or through the constructor). If the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> has been specified, Log returns the name of the log to which that source was registered.  </p>\n<p> A source can only be registered to one log at a time. If the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property was set for an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>, you cannot change the Log property for that <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> without changing the value of <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> or calling <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> first. If you change the Log property after the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property has been set, writing a log entry throws an exception.  </p>\n<p> The operating system stores event logs as files. When you use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the Log property with the &quot;.evt&quot; file name extension.  </p>\n<p> You cannot create a new log using the Log property alone (without specifying a source for the log). You can call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a>, passing in a new log name as a parameter, and then call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a>. However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.  </p>\n<p> If the Log value changes, the event log is closed and all event handles are released.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> If you set the Log property to the name of a log that does not exist, the system attaches the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to the Application log, but does not warn you that it is using a log other than the one you specified.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_LogDisplayName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogDisplayName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the event log&#39;s friendly name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string LogDisplayName { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A name that represents the event log in the system&#39;s event viewer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified <span class=\"xref\">stem.Diagnostics.EventLog.Log*</span> does not exist in the registry for this computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista and later, users do not have permission to access the security log. If you are running Windows Vista or later as a user, you will get a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> when you attempt to access the display name for an event in the security log.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_MachineName\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MachineName</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the name of the computer on which to read or write events.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string MachineName { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the server on which the event log resides. The default is the local computer (&quot;.&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The computer name is invalid.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you write to an event log, you must associate a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> with your event log object to connect it to a particular log. It is not necessary to specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property when only reading from a log. You can specify only the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> name and MachineName (server computer name).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You need not specify the MachineName if you are connecting to a log. If you do not specify the MachineName, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> A source can only be registered to one log at a time. If the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property was set for an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>, you cannot change the MachineName property for that <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> without changing the value of <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> or calling <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> first. If you change the MachineName property, the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> closes all handles and reattaches to the log and source on the new computer.  </p>\n<p> The MachineName value cannot be an empty string. If it is not explicitly set, it defaults to the local computer (&quot;.&quot;).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_MaximumKilobytes\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaximumKilobytes</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the maximum event log size in kilobytes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long MaximumKilobytes { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum event log size in kilobytes. The default is 512, indicating a maximum file size of 512 kilobytes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Log*</span> value is not a valid log name.  </p>\n<p> - or -  </p>\n<p> The registry key for the event log could not be opened on the target computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The MaximumKilobytes property represents the size limit of the event log file. When the event log reaches the size limit, the configured <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_OverflowAction_\" data-linktype=\"relative-path\">OverflowAction</a> value determines whether new entries are discarded, or whether new entries overwrite older entries.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property represents a configuration setting for the event log represented by this instance. When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_MinimumRetentionDays\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinimumRetentionDays</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of days to retain entries in the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int MinimumRetentionDays { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of days that entries in the event log are retained. The default value is 7.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the MinimumRetentionDays property to examine the current setting for an event log. Use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_ModifyOverflowPolicy_\" data-linktype=\"relative-path\">ModifyOverflowPolicy</a> to change the minimum number of days that each entry in the event log must be retained.  </p>\n<p> The MinimumRetentionDays value depends on the configured overflow behavior of the event log. If the <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> property for an event log is set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>, then the MinimumRetentionDays value is 0. If the <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> property for an event log is set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>, then the MinimumRetentionDays value is -1. If the <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> property for an event log is set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>, then the MinimumRetentionDays value is greater than zero, and represents the number of days to retain event log entries when the event log is full.  </p>\n<p> The overflow behavior only occurs when an event log reaches its size limit. When an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has its <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_OverflowAction_\" data-linktype=\"relative-path\">OverflowAction</a> set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>, and the event log reaches its maximum size, then new entries are written only if they can replace entries whose age exceeds the MinimumRetentionDays period. Retaining event entries for a minimum period is appropriate when the event log is archived regularly. Otherwise, you risk losing new entries when the event log reaches its limit. To avoid losing new event information, set the minimum retention days for events based on your archive schedule for a particular event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_OverflowAction\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OverflowAction</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Diagnostics.OverflowAction OverflowAction { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size. The default is <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Event logs grow in size as new events are written to them. Each event log has a configured maximum size limit; the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MaximumKilobytes_\" data-linktype=\"relative-path\">MaximumKilobytes</a> property defines the maximum number of kilobytes allowed for the event log file size.  </p>\n<p> Use the OverflowAction property value to examine the configured overflow behavior for an event log at its maximum size. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_ModifyOverflowPolicy_\" data-linktype=\"relative-path\">ModifyOverflowPolicy</a> method to change the overflow behavior for an event log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The overflow behavior takes effect only when an event log reaches its maximum file size. The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Source\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Source</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the source name to register and use when writing to the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Source { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name registered with the event log as a source of entries. The default is an empty string (&quot;&quot;).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The event source indicates what logs the event. It is often the name of the application, or the name of a subcomponent of the application, if the application is large. Applications and services should write to the Application log or a custom log. Device drivers should write to the System log.  </p>\n<p> You only need to specify an event source if you are writing to an event log. Before writing an entry to an event log, you must register the event source with the event log as a valid source of events. When you write a log entry, the system uses the Source property to find the appropriate log in which to place your entry. If you are reading the event log, you can either specify the Source, or a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You are not required to specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> if you are connecting to a log on the local computer. If you do not specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  </p>\n<p> The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name. Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  </p>\n<p> If you change the Source value, the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to which it is registered is closed and all event handles are released.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<p> To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_SynchronizingObject\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SynchronizingObject</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the object used to marshal the event handler calls issued as a result of an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> entry written event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke\" data-linktype=\"relative-path\">ISynchronizeInvoke</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.componentmodel.isynchronizeinvoke\" data-linktype=\"relative-path\">ISynchronizeInvoke</a> used to marshal event-handler calls issued as a result of an <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event on the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When SynchronizingObject is <code>null</code>, methods handling the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event are called on a thread from the system thread pool. For more information on system thread pools, see <a class=\"xref\" href=\"system.threading.threadpool\" data-linktype=\"relative-path\">ThreadPool</a>.  </p>\n<p> When the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system thread pool might not work, or might result in an exception. Avoid this by setting SynchronizingObject to a Windows Forms component, which causes the methods handling the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EntryWritten\" data-linktype=\"relative-path\">EntryWritten</a> event to be called on the same thread on which the component was created.  </p>\n<p> If the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> is used inside Visual Studio 2005 in a Windows Forms designer, SynchronizingObject is automatically set to the control containing the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>. For example, if you place an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> on a designer for Form1 (which inherits from <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>) the SynchronizingObject property of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> is set to the instance of Form1.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_BeginInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins the initialization of an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> used on a form or used by another component. The initialization occurs at runtime.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> is already initialized.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Visual Studio 2005 design environment uses this method to start the initialization of a component used on a form or by another component. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EndInit_\" data-linktype=\"relative-path\">EndInit</a> method ends the initialization. Using the BeginInit and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EndInit_\" data-linktype=\"relative-path\">EndInit</a> methods prevent the control from being used before it is fully initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Clear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Clear()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes all entries from the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Clear ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The event log was not cleared successfully.  </p>\n<p> -or-  </p>\n<p> The log cannot be opened. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>A value is not specified for the <span class=\"xref\">stem.Diagnostics.EventLog.Log*</span> property. Make sure the log name is not an empty string.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The log does not exist.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Event logs are set with a maximum size that determines how many entries they can contain. When an event log is full, it stops recording new event information or begins to overwrite earlier entries. If event recording stops, you can use this method to clear the log of existing entries and allow it to start recording events again. You must have administrator permissions to the computer on which the log resides to clear event log entries.  </p>\n<p> Clear closes the event log, releases the event handles, retrieves new read and write handles, and reopens the event log. Events received after the call to the method are not cleared along with the existing events.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Close\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Close()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Closes the event log and releases read and write handles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void Close ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The event log&#39;s read handle or write handle was not released successfully.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Close method is called by the protected <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method. You do not need to invoke Close before calling <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_\" data-linktype=\"relative-path\">Dispose</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_CreateEventSource_System_Diagnostics_EventSourceCreationData_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateEventSource(EventSourceCreationData)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void CreateEventSource (System.Diagnostics.EventSourceCreationData sourceData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sourceData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata\" data-linktype=\"relative-path\">EventSourceCreationData</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The configuration properties for the event source and its target event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The computer name specified in <code>sourceData</code> is not valid.  </p>\n<p> - or -  </p>\n<p> The source name specified in <code>sourceData</code> is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> The log name specified in <code>sourceData</code> is not valid. Event log names must consist of printable characters and cannot include the characters &#39;*&#39;, &#39;?&#39;, or &#39;\\&#39;.  </p>\n<p> - or -  </p>\n<p> The log name specified in <code>sourceData</code> is not valid for user log creation. The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  </p>\n<p> - or -  </p>\n<p> The log name matches an existing event source name.  </p>\n<p> - or -  </p>\n<p> The source name specified in <code>sourceData</code> results in a registry key path longer than 254 characters.  </p>\n<p> - or -  </p>\n<p> The first 8 characters of the log name specified in <code>sourceData</code> are not unique.  </p>\n<p> - or -  </p>\n<p> The source name specified in <code>sourceData</code> is already registered.  </p>\n<p> - or -  </p>\n<p> The source name specified in <code>sourceData</code> matches an existing event log name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>sourceData</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer. It is not necessary to use this method to read from an event log.  </p>\n<p> The CreateEventSource method uses the input <code>sourceData</code><a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_Source_\" data-linktype=\"relative-path\">Source</a>, <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_LogName_\" data-linktype=\"relative-path\">LogName</a> and <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties to create registry values on the target computer for the new source and its associated event log. A new source name cannot match an existing source name or an existing event log name on the target computer. If the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_LogName_\" data-linktype=\"relative-path\">LogName</a> property is not set, the source is registered for the Application event log. If the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_MachineName_\" data-linktype=\"relative-path\">MachineName</a> is not set, the source is registered on the local computer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  </p>\n<p> The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown.  </p>\n<p> Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  </p>\n<p> The operating system stores event logs as files. When you use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property with the &quot;.evt&quot; file name extension.  </p>\n<p> Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  </p>\n<p> You can register the event source with localized resource file(s) for your event category and message strings. Your application can write event log entries using resource identifiers, rather than specifying the actual string. The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings. You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_CategoryCount_\" data-linktype=\"relative-path\">CategoryCount</a>, <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_CategoryResourceFile_\" data-linktype=\"relative-path\">CategoryResourceFile</a>, <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_MessageResourceFile_\" data-linktype=\"relative-path\">MessageResourceFile</a>, and <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata#System_Diagnostics_EventSourceCreationData_ParameterResourceFile_\" data-linktype=\"relative-path\">ParameterResourceFile</a> properties to configure the source to write localized entries to the event log. If your application writes strings values directly to the event log, you do not need to set these properties.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<p> To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_CreateEventSource_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateEventSource(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Establishes the specified source name as a valid event source for writing entries to a log on the local computer. This method can also create a new custom log on the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void CreateEventSource (string source, string logName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source name by which the application is registered on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log the source&#39;s entries are written to. Possible values include Application, System, or a custom event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>source</code> is an empty string (&quot;&quot;) or <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>logName</code> is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters &#39;*&#39;, &#39;?&#39;, or &#39;\\&#39;.  </p>\n<p> - or -  </p>\n<p> <code>logName</code> is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  </p>\n<p> - or -  </p>\n<p> The log name matches an existing event source name.  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.  </p>\n<p> - or -  </p>\n<p> The first 8 characters of <code>logName</code> match the first 8 characters of an existing event log name.  </p>\n<p> - or -  </p>\n<p> The source cannot be registered because it already exists on the local computer.  </p>\n<p> - or -  </p>\n<p> The source name matches an existing event log name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this overload to create a custom log or to create and register a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> to an existing log on the local computer.  </p>\n<p> If <code>logName</code> is <code>null</code> or an empty string (&quot;&quot;) when you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a>, the log defaults to the Application log. If the log does not exist on the local computer, the system creates a custom log and registers your application as a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> for that log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  </p>\n<p> The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> You only need to create an event source if you are writing to the event log. Before writing an entry to an event log, you must register the event source with the event log as a valid source of events. When you write a log entry, the system uses the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> to find the appropriate log in which to place your entry. If you are reading the event log, you can either specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>, or a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You are not required to specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> if you are connecting to a log on the local computer. If you do not specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> when reading from a log, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  </p>\n<p> The operating system stores event logs as files. When you use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property with the &quot;.evt&quot; file name extension.  </p>\n<p> The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name. Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<p> To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_CreateEventSource_System_String_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CreateEventSource(String,String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Establishes the specified source name as a valid event source for writing entries to a log on the specified computer. This method can also be used to create a new custom log on the specified computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void CreateEventSource (string source, string logName, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source by which the application is registered on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log the source&#39;s entries are written to. Possible values include Application, System, or a custom event log. If you do not specify a value, <code>logName</code> defaults to Application.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the computer to register this event source with, or &quot;.&quot; for the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>machineName</code> is not a valid computer name.  </p>\n<p> - or -  </p>\n<p> <code>source</code> is an empty string (&quot;&quot;) or <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>logName</code> is not a valid event log name. Event log names must consist of printable characters, and cannot include the characters &#39;*&#39;, &#39;?&#39;, or &#39;\\&#39;.  </p>\n<p> - or -  </p>\n<p> <code>logName</code> is not valid for user log creation. The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.  </p>\n<p> - or -  </p>\n<p> The log name matches an existing event source name.  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.  </p>\n<p> - or -  </p>\n<p> The first 8 characters of <code>logName</code> match the first 8 characters of an existing event log name on the specified computer.  </p>\n<p> - or -  </p>\n<p> The source cannot be registered because it already exists on the specified computer.  </p>\n<p> - or -  </p>\n<p> The source name matches an existing event source name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this overload to create a custom log or to create and register a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> to an existing log on the specified computer.  </p>\n<p> If <code>logName</code> is <code>null</code> or an empty string (&quot;&quot;) when you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a>, the log defaults to the Application log. If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> for that log.  </p>\n<p> You only need to create an event source if you are writing to the event log. Before writing an entry to an event log, you must register the event source with the event log as a valid source of events. When you write a log entry, the system uses the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> to find the appropriate log in which to place your entry. If you are reading the event log, you can either specify the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>, or a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  </p>\n<p> The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. In Windows Vista and later, users do not have permission to access the security log; therefore, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> Use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> to write events to an event log. You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> You can create an event source for an existing event log or a new event log. When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.  </p>\n<p> The operating system stores event logs as files. When you use <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> to create a new event log, the associated file is stored in the %SystemRoot%\\System32\\Config directory on the specified computer. The file name is set by appending the first 8 characters of the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property with the &quot;.evt&quot; file name extension.  </p>\n<p> The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name. Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs. For example, your application might require multiple sources configured for different event logs or different resource files.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<p> To change the configuration details of an existing source, you must delete the source and then create it with the new configuration. If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Delete_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Delete(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes an event log from the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void Delete (string logName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log to delete. Possible values include: Application, Security, System, and any custom event logs on the computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>logName</code> is an empty string (&quot;&quot;) or <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened on the local computer.  </p>\n<p> - or -  </p>\n<p> The log does not exist on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The event log was not cleared successfully.  </p>\n<p> -or-  </p>\n<p> The log cannot be opened. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method when the log you want to delete is on the local computer. You can delete any log on the computer, provided you have the appropriate registry permissions.  </p>\n<p> Delete removes the log specified by <code>logName</code> from the local computer. If you want to delete only the source registered to a log, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a>. If you only want to delete the log entries, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Clear_\" data-linktype=\"relative-path\">Clear</a>. Delete and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> are <code>static</code> methods, so they can be called on the class itself. It is not necessary to create a new instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call either method.  </p>\n<p> The Delete method first deletes the file that holds the contents of the log. It then accesses the registry and removes all the event sources registered for that log. If you recreate the log at a later point, you should register the event sources again, if they are to be reused. If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log. Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Recreating an event log can be a difficult process. Avoid deleting any of the system-created event logs, such as the Application log.  </p>\n</div>\n<p> Deleting a log through a call to Delete automatically deletes the sources registered to that log. This can make other applications using that log inoperative.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Delete_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Delete(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes an event log from the specified computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void Delete (string logName, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log to delete. Possible values include: Application, Security, System, and any custom event logs on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the computer to delete the log from, or &quot;.&quot; for the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>logName</code> is an empty string (&quot;&quot;) or <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>machineName</code> is not a valid computer name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened on the specified computer.  </p>\n<p> - or -  </p>\n<p> The log does not exist on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The event log was not cleared successfully.  </p>\n<p> -or-  </p>\n<p> The log cannot be opened. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method when the log you want to delete is on a remote computer. You can delete any log on the computer, provided you have the appropriate registry permissions.  </p>\n<p> <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> removes the log specified by <code>logName</code> from the computer specified by <code>machineName</code>. If you want to delete only the source registered to a log, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a>. If you only want to delete the log entries, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Clear_\" data-linktype=\"relative-path\">Clear</a>. <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> are <code>static</code> methods, so they can be called on the class itself. It is not necessary to create an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call either method.  </p>\n<p> This method first deletes the file that holds the contents of the log. It then accesses the registry and removes all the event sources registered for that log. If you recreate the log at a later point, you should register the event sources again, if they are to be reused. If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log. Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Recreating an event log can be a difficult process. Avoid deleting any of the system-created event logs, such as the Application log.  </p>\n</div>\n<p> Deleting a log through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> automatically deletes the sources registered to that log. This can make other applications using that log inoperative.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_DeleteEventSource_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeleteEventSource(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the event source registration from the event log of the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DeleteEventSource (string source);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name by which the application is registered in the event log system.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> parameter does not exist in the registry of the local computer.  </p>\n<p> - or -  </p>\n<p> You do not have write access on the registry key for the event log.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to remove the registration of a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> from the local computer. DeleteEventSource accesses the registry on the local computer and removes the registration of your application as a valid source of events.  </p>\n<p> You can remove your component as a valid source of events if you no longer need it to write entries to that log. For example, you might do this if you need to change your component from one log to another. Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.  </p>\n<p> DeleteEventSource removes only the source registered to a log. If you want to remove the log itself, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a>. If you only want to delete the log entries, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Clear_\" data-linktype=\"relative-path\">Clear</a>. <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> and DeleteEventSource are <code>static</code> methods, so they can be called on the class itself. It is not necessary to create an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call either method.  </p>\n<p> Deleting a log through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> automatically deletes the sources registered to that log. This can make other applications using that log inoperative.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_DeleteEventSource_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DeleteEventSource(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the application&#39;s event source registration from the specified computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void DeleteEventSource (string source, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name by which the application is registered in the event log system.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the computer to remove the registration from, or &quot;.&quot; for the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>machineName</code> parameter is invalid.  </p>\n<p> - or -  </p>\n<p> The <code>source</code> parameter does not exist in the registry of the specified computer.  </p>\n<p> - or -  </p>\n<p> You do not have write access on the registry key for the event log.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>source</code> cannot be deleted because in the registry, the parent registry key for <code>source</code> does not contain a subkey with the same name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this overload to remove the registration of a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> from a remote computer. <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> accesses the registry on the computer specified by <code>machineName</code> and removes the registration of your application as a valid source of events.  </p>\n<p> You can remove your component as a valid source of events if you no longer need it to write entries to that log. For example, you might do this if you need to change your component from one log to another. Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.  </p>\n<p> <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> removes only the source registered to a log. If you want to remove the log itself, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a>. If you only want to delete the log entries, call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Clear_\" data-linktype=\"relative-path\">Clear</a>. <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_DeleteEventSource_\" data-linktype=\"relative-path\">DeleteEventSource</a> are <code>static</code> methods, so they can be called on the class itself. It is not necessary to create an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call either method.  </p>\n<p> Deleting a log through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Delete_\" data-linktype=\"relative-path\">Delete</a> automatically deletes the sources registered to that log. This can make other applications using that log inoperative.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Dispose_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Dispose(Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>, and optionally releases the managed resources.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void Dispose (bool disposing);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>disposing</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called by the public <code>Dispose()</code>method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_EndInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Ends the initialization of an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> used on a form or by another component. The initialization occurs at runtime.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void EndInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Visual Studio 2005 design environment uses this method to end the initialization of a component used on a form or by another component. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> method starts the initialization. Using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> and EndInit methods prevents the control from being used before it is fully initialized.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Exists_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Exists(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the log exists on the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool Exists (string logName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log to search for. Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the log exists on the local computer; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The logName is <code>null</code> or the value is empty.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to determine if a log exists on the local computer. If you want to determine whether a source exists on the local computer, use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_SourceExists_\" data-linktype=\"relative-path\">SourceExists</a>.  </p>\n<p> Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, the query returns <code>false</code>.  </p>\n<p> Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if the specified <code>logName</code> already exists on the local computer. The <code>logName</code> parameter is not case sensitive.  </p>\n<p> Exists is a <code>static</code> method, so it can be called on the class itself. It is not necessary to create an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call Exists.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_Exists_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Exists(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether the log exists on the specified computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool Exists (string logName, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>logName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The log for which to search. Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the computer on which to search for the log, or &quot;.&quot; for the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the log exists on the specified computer; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>machineName</code> parameter is an invalid format. Make sure you have used proper syntax for the computer on which you are searching.  </p>\n<p> -or-  </p>\n<p> The <code>logName</code> is <code>null</code> or the value is empty.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to determine if a log exists on a remote computer. If you want to determine whether a source exists on a remote computer, use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_SourceExists_\" data-linktype=\"relative-path\">SourceExists</a>.  </p>\n<p> Because this method accesses the registry, you must have the appropriate registry permissions on the specified computer; otherwise, the query returns <code>false</code>.  </p>\n<p> Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if one with the specified <code>logName</code> already exists on the server specified by the <code>machineName</code> parameter. The <code>logName</code> and <code>machineName</code> parameters are not case sensitive.  </p>\n<p> <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Exists_\" data-linktype=\"relative-path\">Exists</a> is a <code>static</code> method, so it can be called on the class itself. It is not necessary to create a new instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Exists_\" data-linktype=\"relative-path\">Exists</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_GetEventLogs\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEventLogs()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Searches for all event logs on the local computer and creates an array of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> objects that contain the list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Diagnostics.EventLog[] GetEventLogs ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of type <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> that represents the logs on the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">SystemException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>You do not have read access to the registry.  </p>\n<p> -or-  </p>\n<p> There is no event log service on the computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The array of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> objects is a snapshot of all event logs on the local computer when the call to GetEventLogs is made. This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time. You should verify that a log in the array exists before you read or write to it. The array usually includes at least three logs: Application, System, and Security. If you created custom logs on the local computer, they will appear in the array as well.  </p>\n<p> To retrieve the list of event logs, you must have the appropriate registry permissions. These permissions are identical to those required to call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Exists_\" data-linktype=\"relative-path\">Exists</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_SourceExists_\" data-linktype=\"relative-path\">SourceExists</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_GetEventLogs_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEventLogs(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Searches for all event logs on the given computer and creates an array of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> objects that contain the list.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Diagnostics.EventLog[] GetEventLogs (string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The computer on which to search for event logs.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of type <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> that represents the logs on the given computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>machineName</code> parameter is an invalid computer name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>You do not have read access to the registry.  </p>\n<p> -or-  </p>\n<p> There is no event log service on the computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The array of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> objects is a snapshot of all event logs on the computer specified by the <code>machineName</code> parameter when the call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_GetEventLogs_\" data-linktype=\"relative-path\">GetEventLogs</a> is made. This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time. You should verify that a log in the array exists before you read or write to it. The array usually includes at least three logs: Application, System, and Security. If you created custom logs on the specified computer, they will appear in the array as well.  </p>\n<p> <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_GetEventLogs_\" data-linktype=\"relative-path\">GetEventLogs</a> is a <code>static</code> method, so it can be called on the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> class itself. It is not necessary to create an instance of an <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> object to make a call to the method.  </p>\n<p> To retrieve the list of event logs, you must have the appropriate registry permissions. These permissions are identical to those required to call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Exists_\" data-linktype=\"relative-path\">Exists</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_SourceExists_\" data-linktype=\"relative-path\">SourceExists</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_LogNameFromSourceName_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogNameFromSourceName(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the name of the log to which the specified source is registered.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static string LogNameFromSourceName (string source, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the event source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the computer on which to look, or &quot;.&quot; for the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the log associated with the specified source in the registry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The event source indicates what logs the event. It is often the name of the application, or the name of a subcomponent of the application, if the application is large. Applications and services should write to the Application log or a custom log. Device drivers should write to the System log.  </p>\n<p> When you create a new source, which can only write to one log at a time, the system registers your application with the event log as a valid source of entries. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property can be any string, but the name cannot be used by other sources on the computer. An attempt to create a duplicated <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> value throws an exception. However, a single event log can have many different sources writing to it.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_ModifyOverflowPolicy_System_Diagnostics_OverflowAction_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ModifyOverflowPolicy(OverflowAction,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Changes the configured behavior for writing new entries when the event log reaches its maximum file size.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void ModifyOverflowPolicy (System.Diagnostics.OverflowAction action, int retentionDays);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>action</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The overflow behavior for writing new entries to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>retentionDays</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minimum number of days each event log entry is retained. This parameter is used only if <code>action</code> is set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>action</code> is not a valid <span class=\"xref\">stem.Diagnostics.EventLog.OverflowAction*</span> value.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>retentionDays</code> is less than one, or larger than 365.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Log*</span> value is not a valid log name.  </p>\n<p> - or -  </p>\n<p> The registry key for the event log could not be opened on the target computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The overflow behavior for an event log specifies what happens when new entries are to be written to a log that has reached its maximum file size.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The overflow behavior takes effect only when an event log reaches its maximum file size. The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.  </p>\n</div>\n<p> The ModifyOverflowPolicy method configures the overflow behavior of an event log. <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance. After calling this method for the event log specified by the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property, the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_OverflowAction_\" data-linktype=\"relative-path\">OverflowAction</a> and <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MinimumRetentionDays_\" data-linktype=\"relative-path\">MinimumRetentionDays</a> property values reflect the newly configured overflow behavior.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property represents a configuration setting for the event log represented by this instance. When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.  </p>\n</div>\n<p> Set the <code>action</code> parameter to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> to indicate that a new entry overwrites the oldest entry when the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> reaches its maximum size. If the <code>action</code> parameter is set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>, the <code>retentionDays</code> parameter value is ignored.  </p>\n<p> Set the <code>action</code> parameter to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> to indicate that each new entry overwrites older entries when the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> reaches its maximum size. Specify the number of days that events must be retained in the log using the <code>retentionDays</code> parameter. Events written within the retention range are not overwritten by new entries.  </p>\n<p> Set the <code>action</code> parameter to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> to discard new events when the maximum log size is reached. If the <code>action</code> parameter is set to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a>, the <code>retentionDays</code> parameter value is ignored.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Setting the overflow policy to <a class=\"xref\" href=\"system.diagnostics.overflowaction\" data-linktype=\"relative-path\">OverflowAction</a> specifies that new entries are discarded when the event log is full. If you use this setting, ensure the event log is regularly archived and cleared to avoid reaching its maximum size limit.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_RegisterDisplayName_System_String_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RegisterDisplayName(String,Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Specifies the localized name of the event log, which is displayed in the server Event Viewer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RegisterDisplayName (string resourceFile, long resourceId);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceFile</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The fully specified path to a localized resource file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceId</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The resource identifier that indexes a localized string within the resource file.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Log*</span> value is not a valid log name.  </p>\n<p> - or -  </p>\n<p> The registry key for the event log could not be opened on the target computer.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>resourceFile </code>is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use RegisterDisplayName to register and display a localized name in the Event Viewer for custom event logs.  </p>\n<p> The specified resource identifier must correspond to a localized string defined in the resource file. The Event Viewer displays the custom event log name using the localized string and the current culture settings. For example, you can define multiple event log names localized for different cultures in your resource file. The Event Viewer displays the localized string corresponding to the culture settings of the current user.  </p>\n<p> If the Event Viewer cannot load the localized string from the resource file, or if no display name was registered for the event log, then the Event Viewer displays the event log name defined in <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You do not need to register a display name for the pre-defined event logs. The operating system registers the localized display names for the Application, System, and Security event logs.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_SourceExists_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SourceExists(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether an event source is registered on the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool SourceExists (string source);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the event source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the event source is registered on the local computer; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>source</code> was not found, but some or all of the event logs could not be searched.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to determine whether an event source exists on the local computer. If you want to determine whether a log exists on the local computer, use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Exists_\" data-linktype=\"relative-path\">Exists</a>.  </p>\n<p> Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> will be thrown.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  </p>\n<p> The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown.  </p>\n<p> Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A service that is executing under the <a class=\"xref\" href=\"system.serviceprocess.serviceaccount\" data-linktype=\"relative-path\">ServiceAccount</a> account does not have the privileges required to execute this method. The solution is to check whether the event source exists in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a>, and if it does not exist, to create the source in the installer.  </p>\n</div>\n<p> Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> to ensure that a source with the name specified by <code>source</code> does not already exist on the local computer. The <code>source</code> parameter is not case-sensitive.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_SourceExists_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SourceExists(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether an event source is registered on a specified computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool SourceExists (string source, string machineName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the event source.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>machineName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name the computer on which to look, or &quot;.&quot; for the local computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the event source is registered on the given computer; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>machineName</code> is an invalid computer name.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>source</code> was not found, but some or all of the event logs could not be searched.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to determine whether an event source exists on the computer specified by the <code>machineName</code> parameter. If you want to determine whether a log exists on the specified computer, use <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Exists_\" data-linktype=\"relative-path\">Exists</a>.  </p>\n<p> Because this method accesses the registry, you must have the appropriate registry permissions on the given server; otherwise, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> will be thrown.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.  </p>\n<p> The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique. Starting with Windows Vista, users do not have permission to access the security log; therefore, a <a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a> is thrown.  </p>\n<p> Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A service that is executing under the <a class=\"xref\" href=\"system.serviceprocess.serviceaccount\" data-linktype=\"relative-path\">ServiceAccount</a> account does not have the privileges required to execute this method. The solution is to check whether the event source exists in the <a class=\"xref\" href=\"system.serviceprocess.serviceinstaller\" data-linktype=\"relative-path\">ServiceInstaller</a>, and if it does not exist, to create the source in the installer.  </p>\n</div>\n<p> Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> to ensure that a source with the name specified by <code>source</code> does not already exist on the computer. The <code>source</code> and <code>machineName</code> parameters are not case sensitive.  </p>\n<p> <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_SourceExists_\" data-linktype=\"relative-path\">SourceExists</a> is a <code>static</code> method, so it can be called on the class itself. It is not necessary to create an instance of <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> to call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_SourceExists_\" data-linktype=\"relative-path\">SourceExists</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an information type entry, with the given message text, to the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an information entry to the event log associated with this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance. If you want to specify any other <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>, use a different overload of <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before you can write entries to the log. You must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> If the source specified in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance is not registered on the computer that your component is writing to, <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> calls <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> and registers the source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> for your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance before you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> If the system needs to register the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property has not been set on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance, the log defaults to the Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Many of the exceptions listed above are generated by errors raised during the process of registering the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>.  </p>\n</div>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_Diagnostics_EventLogEntryType_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,EventLogEntryType)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an entry of a specified <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before you can write entries to the log. You must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> If the source specified in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance is not registered on the computer that your component is writing to, <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> calls <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> and registers the source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> for your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance before you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> If the system needs to register the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property has not been set on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance, the log defaults to the Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Many exceptions listed above are generated by errors raised during the process of registering the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>.  </p>\n</div>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an information type entry with the given message text to the event log, using the specified registered event source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEntry (string source, string message);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source by which the application is registered on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an information entry to the event log, using a source that is already registered as an event source for the appropriate log. If you want to specify any other <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>, use a different overload of <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.  </p>\n<p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_Diagnostics_EventLogEntryType_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,EventLogEntryType,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an entry with the given message text and application-defined event identifier to the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific identifier for the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> <code>eventID</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an entry with an application-defined <code>eventID</code> to the event log. The <code>eventID</code> together with the source uniquely identify an event. Each application can define its own numbered events and the description strings to which they map. Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<p> In addition to the event identifier, you can specify an <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> for the event being written to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log. This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.  </p>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before you can write entries to the log. You must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> If the source specified in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance is not registered on the computer that your component is writing to, <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> calls <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> and registers the source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> for your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance before you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> If the system needs to register the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property has not been set on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance, the log defaults to the Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Many exceptions listed above are generated by errors raised during the process of registering the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>.  </p>\n</div>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_String_System_Diagnostics_EventLogEntryType_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,String,EventLogEntryType)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source by which the application is registered on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an entry of a specified <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> to the event log, using a source already registered as an event source for the appropriate log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_Diagnostics_EventLogEntryType_System_Int32_System_Int16_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,EventLogEntryType,Int32,Int16)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific identifier for the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>category</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific subcategory associated with the message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> <code>eventID</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an entry with an application-defined <code>category</code> to the event log. The Event Viewer uses the category to filter events written by an event source. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>category</code> parameter should be a positive value. Negative category values appear as a complementary positive number in the Event Viewer. For example, a –10 appears as 65,526, a –1 as 65,535.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<p> To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <code>category</code> to a resource identifier in the category resource file. If the event source does not have a configured category resource file, or the specified <code>category</code> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry. Configure the category resource file, along with the number of category strings in the resource file, using the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata\" data-linktype=\"relative-path\">EventSourceCreationData</a> class.  </p>\n<p> In addition to the category, you can specify an event identifier for the event being written to the event log. Event identifiers, along with the event source, uniquely identify an event. Each application can define its own numbered events and the description strings to which they map. Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.  </p>\n<p> Finally, you can specify an <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> for the event being written to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log. This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.  </p>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before you can write entries to the log. You must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> If the source specified in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance is not registered on the computer that your component is writing to, <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> calls <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> and registers the source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> for your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance before you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> If the system needs to register the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property has not been set on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance, the log defaults to the Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Many exceptions listed above are generated by errors raised during the process of registering the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>.  </p>\n</div>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_String_System_Diagnostics_EventLogEntryType_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,String,EventLogEntryType,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source by which the application is registered on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific identifier for the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>eventID</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an entry with an application-defined <code>eventID</code> to the event log, using a source already registered as an event source for the appropriate log. The <code>eventID</code>, along with the source, uniquely identify an event. Each application can define its own numbered events and the description strings to which they map. Event viewers present these strings to the user to help the user understand what went wrong and suggest what actions to take.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<p> In addition to the event identifier, this overload of <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> lets you specify an <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> for the event being written to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log. This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_Diagnostics_EventLogEntryType_System_Int32_System_Int16_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,EventLogEntryType,Int32,Int16,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEntry (string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific identifier for the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>category</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific subcategory associated with the message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rawData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of bytes that holds the binary data associated with the entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> <code>eventID</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this overload to write application-defined event-specific data to the event log. The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format. Use event-specific data sparingly, including it only if you are sure it will be useful to someone debugging the problem. You can also use event-specific data to store information the application can process independently of the Event Viewer. For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.  </p>\n<p> In addition to the binary data, you can specify an application-defined category and an application-defined event identifier. The Event Viewer uses the category to filter events written by an event source. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>category</code> parameter should be a positive value. Negative category values appear as a complementary positive number in the Event Viewer. For example, a –10 appears as 65,526, a –1 as 65,535.  </p>\n</div>\n<p> To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <code>category</code> to a resource identifier in the category resource file. If the event source does not have a configured category resource file, or the specified <code>category</code> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry. Configure the category resource file, along with the number of category strings in the resource file, using the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata\" data-linktype=\"relative-path\">EventSourceCreationData</a> class.  </p>\n<p> Event identifiers, along with the event source, uniquely identify an event. Each application can define its own numbered events and the description strings to which they map. Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.  </p>\n<p> Finally, you can specify an <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> for the event being written to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log. This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.  </p>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before you can write entries to the log. You must create and configure the event source before writing the first entry with the source.  </p>\n<p> Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> If the source specified in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property of this <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance is not registered on the computer that your component is writing to, <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> calls <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> and registers the source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> for your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance before you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> or <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> If the system needs to register the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> through a call to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> and the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Log_\" data-linktype=\"relative-path\">Log</a> property has not been set on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance, the log defaults to the Application log.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Many exceptions listed above are generated by errors raised during the process of registering the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>.  </p>\n</div>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_String_System_Diagnostics_EventLogEntryType_System_Int32_System_Int16_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,String,EventLogEntryType,Int32,Int16)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source. The <code>category</code> can be used by the Event Viewer to filter events in the log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source by which the application is registered on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific identifier for the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>category</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific subcategory associated with the message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>eventID</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write an entry with an application-defined <code>category</code> to the event log, using a source that is already registered as an event source for the appropriate log. The Event Viewer uses the category to filter events written by an event source. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>category</code> parameter should be a positive value. Negative category values appear as a complementary positive number in the Event Viewer. For example, a –10 appears as 65,526, a –1 as 65,535.  </p>\n</div>\n<p> To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <code>category</code> to a resource identifier in the category resource file. If the event source does not have a configured category resource file, or the specified <code>category</code> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry. Configure the category resource file, along with the number of category strings in the resource file, using the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata\" data-linktype=\"relative-path\">EventSourceCreationData</a> class.  </p>\n<p> In addition to the category, you can specify an event identifier for the event being written to the event log. Event identifiers, along with the event source, uniquely identify an event. Each application can define its own numbered events and the description strings to which they map. Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.  </p>\n<p> Finally, you can specify an <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> for the event being written to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log. This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.  </p>\n<p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEntry_System_String_System_String_System_Diagnostics_EventLogEntryType_System_Int32_System_Int16_System_Byte___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEntry(String,String,EventLogEntryType,Int32,Int16,Byte[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEntry (string source, string message, System.Diagnostics.EventLogEntryType type, int eventID, short category, byte[] rawData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source by which the application is registered on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>message</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The string to write to the event log.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>eventID</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific identifier for the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>category</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The application-specific subcategory associated with the message.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>rawData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of bytes that holds the binary data associated with the entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>eventID</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is not a valid <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write application-defined event-specific data to the event log, using a source already registered as an event source for the appropriate log. The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format. Use event-specific data sparingly; include it only if you are sure it will be useful. You can also use event-specific data to store information the application can process independently of the Event Viewer. For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.  </p>\n<p> In addition to the binary data, you can specify an application-defined category and an application-defined event identifier. The Event Viewer uses the category to filter events written by an event source. The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>category</code> parameter should be a positive value. Negative category values appear as a complementary positive number in the Event Viewer. For example, a –10 will appear as 65,526, a –1 as 65,535.  </p>\n</div>\n<p> To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <code>category</code> to a resource identifier in the category resource file. If the event source does not have a configured category resource file, or the specified <code>category</code> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry. Configure the category resource file, along with the number of category strings in the resource file, using the <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a> or the <a class=\"xref\" href=\"system.diagnostics.eventsourcecreationdata\" data-linktype=\"relative-path\">EventSourceCreationData</a> class.  </p>\n<p> Event identifiers, together with the event source, uniquely identify an event. Each application can define its own numbered events and the description strings to which they map. Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.  </p>\n<p> Finally, you can specify an <a class=\"xref\" href=\"system.diagnostics.eventlogentrytype\" data-linktype=\"relative-path\">EventLogEntryType</a> for the event being written to the event log. The <code>type</code> is indicated by an icon and text in the Type column in the Event Viewer for a log. This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. The <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method writes the given string directly to the event log; it does not use a localizable message resource file. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write events using a localized message resource file.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <code>message</code> parameter contains a NUL character, the message in the event log is terminated at the NUL character.  </p>\n<p> The <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEvent_System_Diagnostics_EventInstance_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEvent(EventInstance,Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes a localized entry to the event log.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEvent (System.Diagnostics.EventInstance instance, object[] values);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a> instance that represents a localized event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>values</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of strings to merge into the message text of the event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> <code>instance.InstanceId</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> <code>values</code> has more than 256 elements.  </p>\n<p> - or -  </p>\n<p> One of the <code>values</code> elements is longer than 32766 bytes.  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write a localized entry to the event log. You specify the event properties with resource identifiers rather than string values. The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>. You must register the source with the corresponding resource file before you write events using resource identifiers.  </p>\n<p> The input <code>instance</code> instance specifies the event message and properties. Set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> of the <code>instance</code> input for the defined message in the source message resource file. You can optionally set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_CategoryId_\" data-linktype=\"relative-path\">CategoryId</a> and <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_EntryType_\" data-linktype=\"relative-path\">EntryType</a> of the <code>instance</code> input to define the category and event type of your event entry. You can also specify an array of language-independent strings to insert into the localized message text. Set <code>values</code> to <code>null</code> if the event message does not contain formatting placeholders for replacement strings.  </p>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before using <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>. The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method if your application writes string values directly to the event log.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the <code>message</code> string might not be what you expect if the remote computer is not running the .NET Framework. Also, the <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEvent_System_Diagnostics_EventInstance_System_Byte___System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEvent(EventInstance,Byte[],Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an event log entry with the given event data, message replacement strings, and associated binary data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void WriteEvent (System.Diagnostics.EventInstance instance, byte[] data, object[] values);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a> instance that represents a localized event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of bytes that holds the binary data associated with the entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>values</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of strings to merge into the message text of the event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <span class=\"xref\">stem.Diagnostics.EventLog.Source*</span> property of the <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> has not been set.  </p>\n<p> -or-  </p>\n<p> The method attempted to register a new event source, but the computer name in <span class=\"xref\">stem.Diagnostics.EventLog.MachineName*</span> is not valid.  </p>\n<p> - or -  </p>\n<p> The source is already registered for a different event log.  </p>\n<p> - or -  </p>\n<p> <code>instance.InstanceId</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> <code>values</code> has more than 256 elements.  </p>\n<p> - or -  </p>\n<p> One of the <code>values</code> elements is longer than 32766 bytes.  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write a localized entry with additional event-specific data to the event log. You specify the event properties with resource identifiers rather than string values. The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a>. You must register the source with the corresponding resource file before you write events using resource identifiers.  </p>\n<p> The input <code>instance</code> instance specifies the event message and properties. Set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> of the <code>instance</code> input for the defined message in the source message resource file. You can optionally set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_CategoryId_\" data-linktype=\"relative-path\">CategoryId</a> and <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_EntryType_\" data-linktype=\"relative-path\">EntryType</a> of the <code>instance</code> input to define the category and event type of your event entry. You can also specify an array of language-independent strings to insert into the localized message text. Set <code>values</code> to <code>null</code> if the event message does not contain formatting placeholders for replacement strings.  </p>\n<p> Specify binary data with an event when it is necessary to provide additional details for the event. For example, use the <code>data</code> parameter to include information on a specific error. The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format. Use event-specific data sparingly; include it only if you are sure it will be useful. You can also use event-specific data to store information the application can process independently of the Event Viewer. For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.  </p>\n<p> You must set the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_Source_\" data-linktype=\"relative-path\">Source</a> property on your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> component before component before using <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>. The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you do not specify a <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_MachineName_\" data-linktype=\"relative-path\">MachineName</a> for your <a class=\"xref\" href=\"system.diagnostics.eventlog\" data-linktype=\"relative-path\">EventLog</a> instance before you call <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>, the local computer (&quot;.&quot;) is assumed.  </p>\n</div>\n<p> The source must be configured either for writing localized entries or for writing direct strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method if your application writes string values directly to the event log.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you write an entry to a remote computer, the value of the <code>message</code> string might not be what you expect if the remote computer is not running the .NET Framework. Also, the <code>message</code> string cannot contain %<em>n</em>, where <em>n</em> is an integer value (for example, %1), because the event viewer treats it as an insertion string. Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEvent_System_String_System_Diagnostics_EventInstance_System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEvent(String,EventInstance,Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, object[] values);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the event source registered for the application on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a> instance that represents a localized event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>values</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of strings to merge into the message text of the event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>instance.InstanceId</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> <code>values</code> has more than 256 elements.  </p>\n<p> - or -  </p>\n<p> One of the <code>values</code> elements is longer than 32766 bytes.  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write a localized entry to the event log, using a source already registered as an event source for the appropriate log. You specify the event properties with resource identifiers rather than string values. The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source. You must register the source with the corresponding resource file before you write events using resource identifiers.  </p>\n<p> The input <code>instance</code> instance specifies the event message and properties. Set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> of the <code>instance</code> input for the defined message in the source message resource file. You can optionally set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_CategoryId_\" data-linktype=\"relative-path\">CategoryId</a> and <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_EntryType_\" data-linktype=\"relative-path\">EntryType</a> of the <code>instance</code> input to define the category and event type of your event entry. You can also specify an array of language-independent strings to insert into the localized message text. Set <code>values</code> to <code>null</code> if the event message does not contain formatting placeholders for replacement strings.  </p>\n<p> The specified source must be registered for an event log before using <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>. The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method if your application writes string values directly to the event log.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_WriteEvent_System_String_System_Diagnostics_EventInstance_System_Byte___System_Object___\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WriteEvent(String,EventInstance,Byte[],Object[])</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void WriteEvent (string source, System.Diagnostics.EventInstance instance, byte[] data, object[] values);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>source</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the event source registered for the application on the specified computer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>instance</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An <a class=\"xref\" href=\"system.diagnostics.eventinstance\" data-linktype=\"relative-path\">EventInstance</a> instance that represents a localized event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>data</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of bytes that holds the binary data associated with the entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>values</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of strings to merge into the message text of the event log entry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The <code>source</code> value is an empty string (&quot;&quot;).  </p>\n<p> - or -  </p>\n<p> The <code>source</code> value is <code>null</code>.  </p>\n<p> - or -  </p>\n<p> <code>instance.InstanceId</code> is less than zero or greater than <a class=\"xref\" href=\"system.uint16#System_UInt16_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> - or -  </p>\n<p> <code>values</code> has more than 256 elements.  </p>\n<p> - or -  </p>\n<p> One of the <code>values</code> elements is longer than 32766 bytes.  </p>\n<p> - or -  </p>\n<p> The source name results in a registry key path longer than 254 characters.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>instance</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The registry key for the event log could not be opened.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The operating system reported an error when writing the event entry to the event log. A Windows error code is not available.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method to write a localized entry with additional event-specific data to the event log, using a source already registered as an event source for the appropriate log. You specify the event properties with resource identifiers rather than string values. The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source. You must register the source with the corresponding resource file before you write events using resource identifiers.  </p>\n<p> The input <code>instance</code> instance specifies the event message and properties. Set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> of the <code>instance</code> input for the defined message in the source message resource file. You can optionally set the <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_CategoryId_\" data-linktype=\"relative-path\">CategoryId</a> and <a class=\"xref\" href=\"system.diagnostics.eventinstance#System_Diagnostics_EventInstance_EntryType_\" data-linktype=\"relative-path\">EntryType</a> of the <code>instance</code> input to define the category and event type of your event entry. You can also specify an array of language-independent strings to insert into the localized message text. Set <code>values</code> to <code>null</code> if the event message does not contain formatting placeholders for replacement strings.  </p>\n<p> Specify binary data with an event when it is necessary to provide additional details for the event. For example, use the <code>data</code> parameter to include information on a specific error. The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format. Use event-specific data sparingly; include it only if you are sure it will be useful. You can also use event-specific data to store information the application can process independently of the Event Viewer. For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.  </p>\n<p> The specified source must be registered for an event log before using <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>. The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.  </p>\n<p> You must create and configure the event source before writing the first entry with the source. Create the new event source during the installation of your application. This allows time for the operating system to refresh its list of registered event sources and their configuration. If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail. You can configure a new source using an <a class=\"xref\" href=\"system.diagnostics.eventloginstaller\" data-linktype=\"relative-path\">EventLogInstaller</a>, or using the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_CreateEventSource_\" data-linktype=\"relative-path\">CreateEventSource</a> method. You must have administrative rights on the computer to create a new event source.  </p>\n<p> The source must be configured either for writing localized entries or for writing direct strings. Use the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method if your application writes string values directly to the event log.  </p>\n<p> If your application writes entries using both resource identifiers and string values, you must register two separate sources. For example, configure one source with resource files, and then use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method to write entries using resource identifiers to the event log. Then create a different source without resource files, and use that source in the <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> method to write strings directly to the event log using that source.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Diagnostics_EventLog_EntryWritten\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EntryWritten</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when an entry is written to an event log on the local computer.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Diagnostics.EntryWrittenEventHandler EntryWritten;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To get event notifications, you must set <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_EnableRaisingEvents_\" data-linktype=\"relative-path\">EnableRaisingEvents</a> to <code>true</code>. You can only receive event notifications when entries are written on the local computer. You cannot receive notifications for entries written on remote computers.  </p>\n<p> When you create an EntryWritten delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, until you remove the delegate. For more information about handling events with delegates, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The system responds to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a> only if the last write event occurred at least six seconds previously. This implies you will only receive one EntryWritten event notification within a six-second interval, even if more than one event log change occurs. If you insert a sufficiently long sleep interval (around 10 seconds) between calls to <a class=\"xref\" href=\"system.diagnostics.eventlog#System_Diagnostics_EventLog_WriteEntry_\" data-linktype=\"relative-path\">WriteEntry</a>, you are less likely to miss an event. However, if write events occur more frequently, you might not recieve the event notification until the next interval. Typically, missed event notifications are not lost, but delayed.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.EventLog.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.EventLog.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.BeginInit\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Clear\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Close\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.CreateEventSource\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Delete\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.DeleteEventSource\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.EnableRaisingEvents\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.EndInit\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Entries\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.EntryWritten\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.add_EntryWritten\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.remove_EntryWritten\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Exists\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.GetEventLogs\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Log\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.LogDisplayName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.LogNameFromSourceName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.MachineName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.MaximumKilobytes\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.MinimumRetentionDays\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.ModifyOverflowPolicy\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.OverflowAction\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.RegisterDisplayName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.Source\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.SourceExists\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.SynchronizingObject\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.WriteEntry\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.EventLog.WriteEvent\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"bd7a9266-ec02-60e4-4795-d1fddb70ec3b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides interaction with Windows event logs.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.EventLog\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.EventLog.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.EventLog.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.EventLog","System.Diagnostics.EventLog..ctor","System.Diagnostics.EventLog.BeginInit","System.Diagnostics.EventLog.Clear","System.Diagnostics.EventLog.Close","System.Diagnostics.EventLog.CreateEventSource","System.Diagnostics.EventLog.Delete","System.Diagnostics.EventLog.DeleteEventSource","System.Diagnostics.EventLog.Dispose","System.Diagnostics.EventLog.EnableRaisingEvents","System.Diagnostics.EventLog.EndInit","System.Diagnostics.EventLog.Entries","System.Diagnostics.EventLog.EntryWritten","System.Diagnostics.EventLog.add_EntryWritten","System.Diagnostics.EventLog.remove_EntryWritten","System.Diagnostics.EventLog.Exists","System.Diagnostics.EventLog.GetEventLogs","System.Diagnostics.EventLog.Log","System.Diagnostics.EventLog.LogDisplayName","System.Diagnostics.EventLog.LogNameFromSourceName","System.Diagnostics.EventLog.MachineName","System.Diagnostics.EventLog.MaximumKilobytes","System.Diagnostics.EventLog.MinimumRetentionDays","System.Diagnostics.EventLog.ModifyOverflowPolicy","System.Diagnostics.EventLog.OverflowAction","System.Diagnostics.EventLog.RegisterDisplayName","System.Diagnostics.EventLog.Source","System.Diagnostics.EventLog.SourceExists","System.Diagnostics.EventLog.SynchronizingObject","System.Diagnostics.EventLog.WriteEntry","System.Diagnostics.EventLog.WriteEvent"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.EventLog","System::Diagnostics::EventLog","System.Diagnostics.EventLog.#ctor","System::Diagnostics::EventLog::#ctor","System.Diagnostics.EventLog.BeginInit","System::Diagnostics::EventLog::BeginInit","System.Diagnostics.EventLog.Clear","System::Diagnostics::EventLog::Clear","System.Diagnostics.EventLog.Close","System::Diagnostics::EventLog::Close","System.Diagnostics.EventLog.CreateEventSource","System::Diagnostics::EventLog::CreateEventSource","System.Diagnostics.EventLog.Delete","System::Diagnostics::EventLog::Delete","System.Diagnostics.EventLog.DeleteEventSource","System::Diagnostics::EventLog::DeleteEventSource","System.Diagnostics.EventLog.Dispose","System::Diagnostics::EventLog::Dispose","System.Diagnostics.EventLog.EnableRaisingEvents","System::Diagnostics::EventLog::EnableRaisingEvents","System.Diagnostics.EventLog.EndInit","System::Diagnostics::EventLog::EndInit","System.Diagnostics.EventLog.Entries","System::Diagnostics::EventLog::Entries","System.Diagnostics.EventLog.EntryWritten","System::Diagnostics::EventLog::EntryWritten","System.Diagnostics.EventLog.Exists","System::Diagnostics::EventLog::Exists","System.Diagnostics.EventLog.GetEventLogs","System::Diagnostics::EventLog::GetEventLogs","System.Diagnostics.EventLog.Log","System::Diagnostics::EventLog::Log","System.Diagnostics.EventLog.LogDisplayName","System::Diagnostics::EventLog::LogDisplayName","System.Diagnostics.EventLog.LogNameFromSourceName","System::Diagnostics::EventLog::LogNameFromSourceName","System.Diagnostics.EventLog.MachineName","System::Diagnostics::EventLog::MachineName","System.Diagnostics.EventLog.MaximumKilobytes","System::Diagnostics::EventLog::MaximumKilobytes","System.Diagnostics.EventLog.MinimumRetentionDays","System::Diagnostics::EventLog::MinimumRetentionDays","System.Diagnostics.EventLog.ModifyOverflowPolicy","System::Diagnostics::EventLog::ModifyOverflowPolicy","System.Diagnostics.EventLog.OverflowAction","System::Diagnostics::EventLog::OverflowAction","System.Diagnostics.EventLog.RegisterDisplayName","System::Diagnostics::EventLog::RegisterDisplayName","System.Diagnostics.EventLog.Source","System::Diagnostics::EventLog::Source","System.Diagnostics.EventLog.SourceExists","System::Diagnostics::EventLog::SourceExists","System.Diagnostics.EventLog.SynchronizingObject","System::Diagnostics::EventLog::SynchronizingObject","System.Diagnostics.EventLog.WriteEntry","System::Diagnostics::EventLog::WriteEntry","System.Diagnostics.EventLog.WriteEvent","System::Diagnostics::EventLog::WriteEvent"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"bd7a9266-ec02-60e4-4795-d1fddb70ec3b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/EventLog.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventLog class | Microsoft Docs","_op_ogTitle":"EventLog class","description":"Provides interaction with Windows event logs.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.EventLog","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.eventlog","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.eventlog","fileRelativePath":"System.Diagnostics.EventLog.html"},"themesRelativePathToOutputRoot":"_themes/"}