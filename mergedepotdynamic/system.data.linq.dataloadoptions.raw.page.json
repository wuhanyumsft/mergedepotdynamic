{"content":"    \r\n    <h1 id=\"System_Data_Linq_DataLoadOptions\">\r\n      <span class=\"lang-csharp\">DataLoadOptions</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides for immediate loading and filtering of related data.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class DataLoadOptions</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataLoadOptions</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <h2 id=\"general\">General</h2>\n<p> When you query for an object, you actually retrieve only the object you requested. The <em>related</em> objects are not automatically fetched at the same time. (For more information, see <a href=\"../Topic/Querying%20Across%20Relationships.md\" data-linktype=\"relative-path\">Querying Across Relationships</a>.)  </p>\n<p> The DataLoadOptions class provides two methods to achieve immediate loading of specified related data. The <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> method allows for immediate loading of data related to the main target. The <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_AssociateWith_\" data-linktype=\"relative-path\">AssociateWith</a> method allows for filtering related objects.  </p>\n<h2 id=\"rules\">Rules</h2>\n<p> Note the following rules regarding DataLoadOptions usage:  </p>\n<ul>\n<li><p>Assigning a DataLoadOptions to a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> after the first query has been executed generates an exception.  </p>\n</li>\n<li><p>Modifying a DataLoadOptions after it has been assigned to a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> generates an exception  </p>\n</li>\n</ul>\n<h2 id=\"cycle-handling\">Cycle Handling</h2>\n<p> <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> and <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_AssociateWith_\" data-linktype=\"relative-path\">AssociateWith</a> directives must not create cycles. The following represent examples of such graphs:  </p>\n<ul>\n<li><p>Example 1: Self recursive  </p>\n<ul>\n<li><code>dlo.LoadWith&lt;Employee&gt;(e =&gt; e.Reports);</code>  </li>\n</ul>\n</li>\n<li><p>Example 2: Back-pointers  </p>\n<ul>\n<li><p><code>dlo.LoadWith &lt;Customer&gt;(c =&gt; C.Orders);</code>  </p>\n</li>\n<li><p><code>dlo.LoadWith &lt;Order&gt;(o =&gt; o.Customer);</code>  </p>\n</li>\n</ul>\n</li>\n<li><p>Example 3: Longer cycles  </p>\n<p> Although this should not occur in a well-normalized model, it is possible.  </p>\n<ul>\n<li><p><code>dlo.LoadWith &lt;A&gt;(a =&gt; a.Bs);</code>  </p>\n</li>\n<li><p><code>dlo.LoadWith &lt;B&gt;(b =&gt; b.Cs);</code>  </p>\n</li>\n<li><p><code>dlo.LoadWith &lt;C&gt;(c =&gt; c.As);</code>  </p>\n</li>\n</ul>\n</li>\n<li><p>Example 4: Self recursive subQueries  </p>\n<ul>\n<li><code>dlo.AssociateWith&lt;A&gt;(a=&gt;a.As.Where(a=&gt;a.Id=33));</code>  </li>\n</ul>\n</li>\n<li><p>Example 5: Longer recursive subqueries  </p>\n<ul>\n<li><p><code>dlo.AssociateWith&lt;A&gt;(a=&gt;a.Bs.Where(b=&gt;b.Id==3));</code>  </p>\n</li>\n<li><p><code>dlo.AssociateWith&lt;B&gt;(b=&gt;b.As.Where(a=&gt;a.Id==3));</code>  </p>\n</li>\n</ul>\n<p>The following are some general rules that help you understand what occurs in these scenarios.  </p>\n<p><strong>LoadWith</strong> Each call to <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> checks whether cycles have been introduced into the graph. If there are, as in Examples 1, 2, and 3, an exception is thrown.  </p>\n<p><strong>AssociateWith</strong> The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.  </p>\n</li>\n<li><p>In Example 4, the <code>Where</code> clause is executed against all <code>A</code>, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)  </p>\n</li>\n<li><p>In Example 5, the first <code>Where</code> clause is applied to all the <code>B</code>s, even though there are subqueries on <code>B</code>. The second <code>Where</code> clause is applied to all the <code>A</code>s even though there are subqueries on <code>A</code>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataLoadOptions__ctor\" data-linktype=\"self-bookmark\">DataLoadOptions()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataLoadOptions_AssociateWith_System_Linq_Expressions_LambdaExpression_\" data-linktype=\"self-bookmark\">AssociateWith(LambdaExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Filters the objects retrieved for a particular relationship.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataLoadOptions_AssociateWith__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___\" data-linktype=\"self-bookmark\">AssociateWith&lt;T&gt;(Expression&lt;Func&lt;T,Object&gt;&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Filters objects retrieved for a particular relationship.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataLoadOptions_LoadWith_System_Linq_Expressions_LambdaExpression_\" data-linktype=\"self-bookmark\">LoadWith(LambdaExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves specified data related to the main target by using a lambda expression.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataLoadOptions_LoadWith__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___\" data-linktype=\"self-bookmark\">LoadWith&lt;T&gt;(Expression&lt;Func&lt;T,Object&gt;&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataLoadOptions__ctor\">\r\n    \r\n            <a id=\"System_Data_Linq_DataLoadOptions__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataLoadOptions()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataLoadOptions ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataLoadOptions_AssociateWith_System_Linq_Expressions_LambdaExpression_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataLoadOptions_AssociateWith_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssociateWith(LambdaExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Filters the objects retrieved for a particular relationship.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.lambdaexpression\" data-linktype=\"relative-path\">LambdaExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the query to be used on a particular one-to-many field or property. Note the following:  </p>\n<p> If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  </p>\n<p> If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  </p>\n<p> Where  </p>\n<p> OrderBy  </p>\n<p> ThenBy  </p>\n<p> OrderByDescending  </p>\n<p> ThenByDescending  </p>\n<p> Take</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the following example, the inner loop iterates only over those <code>Orders</code> that have not been shipped today.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataLoadOptions#1\">Dim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\nDim dlo As DataLoadOptions = New DataLoadOptions()\ndlo.AssociateWith(Of Customer)(Function(c As Customer) _\n        c.Orders.Where(Function(p) p.ShippedDate &lt;&gt; DateTime.Today))\ndb.LoadOptions = dlo\n\nDim custOrderQuery = _\n    From cust In db.Customers _\n    Where cust.City = &quot;London&quot; _\n    Select cust\n\nFor Each custObj In custOrderQuery\n    Console.WriteLine(custObj.CustomerID)\n    For Each ord In custObj.Orders\n        Console.WriteLine(&quot;{0}{1}&quot;, vbTab, ord.OrderDate)\n    Next\n\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataLoadOptions#1\">Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\nDataLoadOptions dlo = new DataLoadOptions();\ndlo.AssociateWith&lt;Customer&gt;(c =&gt; c.Orders.Where(p =&gt; p.ShippedDate != DateTime.Today));\ndb.LoadOptions = dlo;\nvar custOrderQuery = \n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n\nforeach (Customer custObj in custOrderQuery)\n{\n    Console.WriteLine(custObj.CustomerID);\n    foreach (Order ord in custObj.Orders)\n    {\n        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;,ord.OrderDate);\n    } \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataLoadOptions_AssociateWith__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataLoadOptions_AssociateWith_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssociateWith&lt;T&gt;(Expression&lt;Func&lt;T,Object&gt;&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Filters objects retrieved for a particular relationship.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression-1\" data-linktype=\"relative-path\">Expression</a>&lt;<a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">T</span>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the query to be used on a particular one-to-many field or property. Note the following:  </p>\n<p> If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  </p>\n<p> If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  </p>\n<p> Where  </p>\n<p> OrderBy  </p>\n<p> ThenBy  </p>\n<p> OrderByDescending  </p>\n<p> ThenByDescending  </p>\n<p> Take</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For information about how to avoid cycles, see <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, the inner loop iterates only over those <code>Orders</code> that have not been shipped today.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataLoadOptions#1\">Dim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\nDim dlo As DataLoadOptions = New DataLoadOptions()\ndlo.AssociateWith(Of Customer)(Function(c As Customer) _\n        c.Orders.Where(Function(p) p.ShippedDate &lt;&gt; DateTime.Today))\ndb.LoadOptions = dlo\n\nDim custOrderQuery = _\n    From cust In db.Customers _\n    Where cust.City = &quot;London&quot; _\n    Select cust\n\nFor Each custObj In custOrderQuery\n    Console.WriteLine(custObj.CustomerID)\n    For Each ord In custObj.Orders\n        Console.WriteLine(&quot;{0}{1}&quot;, vbTab, ord.OrderDate)\n    Next\n\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataLoadOptions#1\">Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\nDataLoadOptions dlo = new DataLoadOptions();\ndlo.AssociateWith&lt;Customer&gt;(c =&gt; c.Orders.Where(p =&gt; p.ShippedDate != DateTime.Today));\ndb.LoadOptions = dlo;\nvar custOrderQuery = \n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n\nforeach (Customer custObj in custOrderQuery)\n{\n    Console.WriteLine(custObj.CustomerID);\n    foreach (Order ord in custObj.Orders)\n    {\n        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;,ord.OrderDate);\n    } \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataLoadOptions_LoadWith_System_Linq_Expressions_LambdaExpression_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataLoadOptions_LoadWith_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadWith(LambdaExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves specified data related to the main target by using a lambda expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void LoadWith (System.Linq.Expressions.LambdaExpression expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.lambdaexpression\" data-linktype=\"relative-path\">LambdaExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A lambda expression that identifies the related material.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In the following example, all the <code>Orders</code> for all the <code>Customers</code> who are located in London are retrieved when the query is executed. As a result, successive access to the <code>Orders</code> property on a <code>Customer</code> object does not trigger a new database query.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataLoadOptions#2\">Dim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\nDim dlo As DataLoadOptions = New DataLoadOptions()\ndlo.LoadWith(Of Customer)(Function(c As Customer) c.Orders)\ndb.LoadOptions = dlo\n\nDim londonCustomers = _\n    From cust In db.Customers _\n    Where cust.City = &quot;London&quot; _\n    Select cust\n\nFor Each custObj In londonCustomers\n    Console.WriteLine(custObj.CustomerID)\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataLoadOptions#2\">Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\nDataLoadOptions dlo = new DataLoadOptions();\ndlo.LoadWith&lt;Customer&gt;(c =&gt; c.Orders);\ndb.LoadOptions = dlo;\n\nvar londonCustomers =\n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n\nforeach (var custObj in londonCustomers)\n{\n    Console.WriteLine(custObj.CustomerID);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataLoadOptions_LoadWith__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataLoadOptions_LoadWith_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadWith&lt;T&gt;(Expression&lt;Func&lt;T,Object&gt;&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression-1\" data-linktype=\"relative-path\">Expression</a>&lt;<a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">T</span>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the field or property to be retrieved.  </p>\n<p> If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot specify the loading of two levels of relationships (for example, <code>Orders.OrderDetails</code>). In these scenarios you must specify two separate <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> methods.  </p>\n<p> To avoid cycling, see Remarks section in <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, all the <code>Orders</code> for all the <code>Customers</code> who are located in London are retrieved when the query is executed. As a result, successive access to the <code>Orders</code> property on a <code>Customer</code> object does not trigger a new database query.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataLoadOptions#2\">Dim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\nDim dlo As DataLoadOptions = New DataLoadOptions()\ndlo.LoadWith(Of Customer)(Function(c As Customer) c.Orders)\ndb.LoadOptions = dlo\n\nDim londonCustomers = _\n    From cust In db.Customers _\n    Where cust.City = &quot;London&quot; _\n    Select cust\n\nFor Each custObj In londonCustomers\n    Console.WriteLine(custObj.CustomerID)\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataLoadOptions#2\">Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\nDataLoadOptions dlo = new DataLoadOptions();\ndlo.LoadWith&lt;Customer&gt;(c =&gt; c.Orders);\ndb.LoadOptions = dlo;\n\nvar londonCustomers =\n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n\nforeach (var custObj in londonCustomers)\n{\n    Console.WriteLine(custObj.CustomerID);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.DataLoadOptions.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.DataLoadOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.AssociateWith\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.AssociateWith&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.LoadWith\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataLoadOptions.LoadWith&lt;T&gt;\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"be523a04-306c-fe8e-74e1-9f5992d82b7c\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Data.Linq\\DataLoadOptions.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides for immediate loading and filtering of related data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.Linq/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.DataLoadOptions\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.DataLoadOptions.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.DataLoadOptions.yml","open_to_public_contributors":true,"api_name":["System.Data.Linq.DataLoadOptions","System.Data.Linq.DataLoadOptions..ctor","System.Data.Linq.DataLoadOptions.AssociateWith","System.Data.Linq.DataLoadOptions.AssociateWith<T>","System.Data.Linq.DataLoadOptions.LoadWith","System.Data.Linq.DataLoadOptions.LoadWith<T>"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.DataLoadOptions","System::Data::Linq::DataLoadOptions","System.Data.Linq.DataLoadOptions.#ctor","System::Data::Linq::DataLoadOptions::#ctor","System.Data.Linq.DataLoadOptions.AssociateWith","System::Data::Linq::DataLoadOptions::AssociateWith","System.Data.Linq.DataLoadOptions.AssociateWith``1","System::Data::Linq::DataLoadOptions::AssociateWith``1","System.Data.Linq.DataLoadOptions.LoadWith","System::Data::Linq::DataLoadOptions::LoadWith","System.Data.Linq.DataLoadOptions.LoadWith``1","System::Data::Linq::DataLoadOptions::LoadWith``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"be523a04-306c-fe8e-74e1-9f5992d82b7c","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Data.Linq\\DataLoadOptions.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.Linq/DataLoadOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataLoadOptions class | Microsoft Docs","_op_ogTitle":"DataLoadOptions class","description":"Provides for immediate loading and filtering of related data.\n","toc_asset_id":"_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.DataLoadOptions","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.dataloadoptions","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.dataloadoptions","fileRelativePath":"System.Data.Linq.DataLoadOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}