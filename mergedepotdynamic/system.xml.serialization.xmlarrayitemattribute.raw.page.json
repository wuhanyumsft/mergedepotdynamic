{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_XmlArrayItemAttribute\">\r\n      <span class=\"lang-csharp\">XmlArrayItemAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an attribute that specifies the derived types that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can place in a serialized array.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)]\npublic class XmlArrayItemAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlArrayItemAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The XmlArrayItemAttribute belongs to a family of attributes that controls how the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes or deserializes an object. For a complete list of similar attributes, see <a href=\"../Topic/Attributes%20That%20Control%20XML%20Serialization.md\" data-linktype=\"relative-path\">Attributes That Control XML Serialization</a>.  </p>\n<p> You can apply the XmlArrayItemAttribute to any public read/write member that returns an array, or provides access to one. For example, a field that returns an array of objects, a collection, an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, or any class that implements the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> interface.  </p>\n<p> The XmlArrayItemAttribute supports polymorphism--in other words, it allows the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to add derived objects to an array. For example, suppose a class named <code>Mammal</code> is derived from a base class named <code>Animal</code>. Further suppose that a class named <code>MyAnimals</code> contains a field that returns an array of <code>Animal</code> objects. To allow the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to serialize both the <code>Animal</code> and <code>Mammal</code> type, apply the XmlArrayItemAttribute to the field twice, each time specifying one of the two acceptable types.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can apply multiple instances of the XmlArrayItemAttribute or <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to specify types of objects that can be inserted into the array.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The serialization of a field or property that returns an interface or array of interfaces is not supported.  </p>\n</div>\n<p> For more information about using attributes, see <a href=\"../Topic/Extending%20Metadata%20Using%20Attributes.md\" data-linktype=\"relative-path\">Attributes</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use the word <code>XmlArrayItem</code> in your code instead of the longer XmlArrayItemAttribute.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute__ctor\" data-linktype=\"self-bookmark\">XmlArrayItemAttribute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute__ctor_System_String_\" data-linktype=\"self-bookmark\">XmlArrayItemAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class and specifies the name of the XML element generated in the XML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute__ctor_System_Type_\" data-linktype=\"self-bookmark\">XmlArrayItemAttribute(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class and specifies the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that can be inserted into the serialized array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute__ctor_System_String_System_Type_\" data-linktype=\"self-bookmark\">XmlArrayItemAttribute(String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class and specifies the name of the XML element generated in the XML document and the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that can be inserted into the generated XML document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_DataType\" data-linktype=\"self-bookmark\">DataType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the XML data type of the generated XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_ElementName\" data-linktype=\"self-bookmark\">ElementName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the generated XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_Form\" data-linktype=\"self-bookmark\">Form</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the name of the generated XML element is qualified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_IsNullable\" data-linktype=\"self-bookmark\">IsNullable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must serialize a member as an empty XML tag with the <code>xsi:nil</code> attribute set to <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the namespace of the generated XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_NestingLevel\" data-linktype=\"self-bookmark\">NestingLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the level in a hierarchy of XML elements that the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> affects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlArrayItemAttribute_Type\" data-linktype=\"self-bookmark\">Type</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the type allowed in an array.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlArrayItemAttribute()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlArrayItemAttribute ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Transportation</code> that contains a field named <code>MyVehicles</code> that returns an array of <code>Vehicle</code> objects. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> to the field, allowing the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to insert instances of the <code>Car</code> class, which is derived from the <code>Vehicle</code> class, into the array.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\npublic ref class Vehicle\n{\npublic:\n   String^ id;\n};\n\npublic ref class Car: public Vehicle\n{\npublic:\n   String^ Maker;\n};\n\npublic ref class Transportation\n{\npublic:\n\n   [XmlArrayItem,\n   XmlArrayItem(Car::typeid,ElementName=&quot;Automobile&quot;)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // Creates an XmlSerializer for the Transportation class. \n   XmlSerializer^ MySerializer = gcnew XmlSerializer( Transportation::typeid );\n\n   // Writing the XML file to disk requires a TextWriter.\n   TextWriter^ myTextWriter = gcnew StreamWriter( filename );\n\n   // Creates the object to serialize.\n   Transportation^ myTransportation = gcnew Transportation;\n\n   // Creates objects to add to the array.\n   Vehicle^ myVehicle = gcnew Vehicle;\n   myVehicle-&gt;id = &quot;A12345&quot;;\n   Car^ myCar = gcnew Car;\n   myCar-&gt;id = &quot;Car 34&quot;;\n   myCar-&gt;Maker = &quot;FamousCarMaker&quot;;\n   array&lt;Vehicle^&gt;^temp = {myVehicle,myCar};\n   myTransportation-&gt;MyVehicles = temp;\n\n   // Serializes the object, and closes the StreamWriter.\n   MySerializer-&gt;Serialize( myTextWriter, myTransportation );\n   myTextWriter-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   // Creates an XmlSerializer instance.\n   XmlSerializer^ mySerializer = gcnew XmlSerializer( Transportation::typeid );\n   FileStream^ myFileStream = gcnew FileStream( filename,FileMode::Open );\n   Transportation^ myTransportation = dynamic_cast&lt;Transportation^&gt;(mySerializer-&gt;Deserialize( myFileStream ));\n   for ( int i = 0; i &lt; myTransportation-&gt;MyVehicles-&gt;Length; i++ )\n   {\n      Console::WriteLine( myTransportation-&gt;MyVehicles[ i ]-&gt;id );\n   }\n}\n\nint main()\n{\n   SerializeObject( &quot;XmlArrayItem1.xml&quot; );\n   DeserializeObject( &quot;XmlArrayItem1.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n \npublic class Vehicle\n{\n   public string id;\n}\npublic class Car:Vehicle\n{\n   public string Maker;   \n}\n \npublic class Transportation\n{  \n   [XmlArrayItem(), \n   XmlArrayItem(typeof(Car), ElementName = &quot;Automobile&quot;)]\n   public Vehicle[] MyVehicles;\n}\n \npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;XmlArrayItem1.xml&quot;);\n      test.DeserializeObject(&quot;XmlArrayItem1.xml&quot;);\n   }\n\n   private void SerializeObject(string filename){\n      // Creates an XmlSerializer for the Transportation class. \n      XmlSerializer MySerializer = new XmlSerializer(typeof(Transportation));\n   \n      // Writing the XML file to disk requires a TextWriter.\n      TextWriter myTextWriter = new StreamWriter(filename);\n\n      // Creates the object to serialize.\n      Transportation myTransportation = new Transportation();\n\n      // Creates objects to add to the array.\n      Vehicle myVehicle= new Vehicle() ;\n      myVehicle.id = &quot;A12345&quot;;\n\n      Car myCar = new Car();\n      myCar.id = &quot;Car 34&quot;;\n      myCar.Maker = &quot;FamousCarMaker&quot;;\n\n      myTransportation.MyVehicles = \n      new Vehicle[2] {myVehicle, myCar};\n      \n      // Serializes the object, and closes the StreamWriter.\n      MySerializer.Serialize(myTextWriter, myTransportation);\n      myTextWriter.Close();\n   }\n \n   private void DeserializeObject(string filename)\n   {\n      // Creates an XmlSerializer instance.\n      XmlSerializer mySerializer = new XmlSerializer(typeof(Transportation));\n      FileStream myFileStream = new FileStream(filename,FileMode.Open);\n      Transportation myTransportation =\n      (Transportation) mySerializer.Deserialize(myFileStream);\n \n      for(int i = 0; i &lt; myTransportation.MyVehicles.Length;i++)\n      {\n         Console.WriteLine(myTransportation.MyVehicles[i].id);\n      }\n   }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\nPublic Class Vehicle\n    Public id As String\nEnd Class\n\nPublic Class Car\n    Inherits Vehicle\n    Public Maker As String\nEnd Class\n\nPublic Class Transportation\n    &lt;XmlArrayItem(), _\n     XmlArrayItem(GetType(Car), ElementName := &quot;Automobile&quot;)&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class\n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;XmlArrayItem1.xml&quot;)\n        test.DeserializeObject(&quot;XmlArrayItem1.xml&quot;)\n    End Sub\n    \n    \n    Private Sub SerializeObject(ByVal filename As String)\n        &#39; Creates an XmlSerializer for the Transportation class. \n        Dim MySerializer As New XmlSerializer(GetType(Transportation))\n        \n        &#39; Writing the XML file to disk requires a TextWriter.\n        Dim myTextWriter As New StreamWriter(filename)\n        \n        &#39; Creates the object to serialize.\n        Dim myTransportation As New Transportation()\n        \n        &#39; Creates objects to add to the array.\n        Dim myVehicle As New Vehicle()\n        myVehicle.id = &quot;A12345&quot;\n        \n        Dim myCar As New Car()\n        myCar.id = &quot;Car 34&quot;\n        myCar.Maker = &quot;FamousCarMaker&quot;\n        \n        myTransportation.MyVehicles = New Vehicle() {myVehicle, myCar}\n        \n        &#39; Serializes the object, and closes the StreamWriter.\n        MySerializer.Serialize(myTextWriter, myTransportation)\n        myTextWriter.Close()\n    End Sub\n    \n    \n    Private Sub DeserializeObject(ByVal filename As String)\n        &#39; Create an XmlSerializer instance.\n        Dim mySerializer As New XmlSerializer(GetType(Transportation))\n        Dim myFileStream As New FileStream(filename, FileMode.Open)\n        Dim myTransportation As Transportation = _\n            CType(mySerializer.Deserialize(myFileStream), Transportation)\n        \n        Dim i As Integer\n        For i = 0 To myTransportation.MyVehicles.Length - 1\n            Console.WriteLine(myTransportation.MyVehicles(i).id)\n        Next i\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlArrayItemAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class and specifies the name of the XML element generated in the XML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlArrayItemAttribute (string elementName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload sets the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property.  </p>\n<p> Use this overload if you want the name of the generated XML element to differ from the member&#39;s identifier.  </p>\n<p> An XML document that includes namespaces can contain more than one version of an element name. For details, see the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Transportation</code> that contains a field named <code>MyVehicles</code> that returns an array of <code>Vehicle</code> objects. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> to the field, allowing the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to insert instances of the <code>Car</code> class, which is derived from the <code>Vehicle</code> class, into the array. While applying the attribute, the example sets the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property using the <code>elementName</code> parameter.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\npublic ref class Vehicle\n{\npublic:\n   String^ id;\n};\n\npublic ref class Car: public Vehicle\n{\npublic:\n   String^ Maker;\n};\n\npublic ref class Transportation\n{\npublic:\n\n   [XmlArrayItem(ElementName=&quot;Transportation&quot;),\n   XmlArrayItem(Car::typeid,ElementName=&quot;Automobile&quot;)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // Creates an XmlSerializer for the Transportation class.\n   XmlSerializer^ MySerializer = gcnew XmlSerializer( Transportation::typeid );\n\n   // Writing the XML file to disk requires a TextWriter.\n   TextWriter^ myTextWriter = gcnew StreamWriter( filename );\n   Transportation^ myTransportation = gcnew Transportation;\n   Vehicle^ myVehicle = gcnew Vehicle;\n   myVehicle-&gt;id = &quot;A12345&quot;;\n   Car^ myCar = gcnew Car;\n   myCar-&gt;id = &quot;Car 34&quot;;\n   myCar-&gt;Maker = &quot;FamousCarMaker&quot;;\n   array&lt;Vehicle^&gt;^myVehicles = {myVehicle,myCar};\n   myTransportation-&gt;MyVehicles = myVehicles;\n\n   // Serializes the object, and closes the StreamWriter.\n   MySerializer-&gt;Serialize( myTextWriter, myTransportation );\n   myTextWriter-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   // Creates the serializer with the type to deserialize.\n   XmlSerializer^ mySerializer = gcnew XmlSerializer( Transportation::typeid );\n   FileStream^ myFileStream = gcnew FileStream( filename,FileMode::Open );\n   Transportation^ myTransportation = dynamic_cast&lt;Transportation^&gt;(mySerializer-&gt;Deserialize( myFileStream ));\n   for ( int i = 0; i &lt; myTransportation-&gt;MyVehicles-&gt;Length; i++ )\n   {\n      Console::WriteLine( myTransportation-&gt;MyVehicles[ i ]-&gt;id );\n   }\n}\n\nint main()\n{\n   SerializeObject( &quot;XmlArrayItem2.xml&quot; );\n   DeserializeObject( &quot;XmlArrayItem2.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n \npublic class Vehicle\n{\n   public string id;\n}\npublic class Car:Vehicle\n{\n   public string Maker;\n}\n \npublic class Transportation\n{  \n   [XmlArrayItem(ElementName = &quot;Transportation&quot;), \n   XmlArrayItem(typeof(Car), ElementName = &quot;Automobile&quot;)]\n   public Vehicle[] MyVehicles;\n}\n \npublic class Run\n{\n   public static void Main()\n   {\n      Run test= new Run();\n      test.SerializeObject(&quot;XmlArrayItem2.xml&quot;);\n      test.DeserializeObject(&quot;XmlArrayItem2.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n      // Creates an XmlSerializer for the Transportation class.\n      XmlSerializer MySerializer = \n      new XmlSerializer(typeof(Transportation));\n\n      // Writing the XML file to disk requires a TextWriter.\n      TextWriter myTextWriter = new StreamWriter(filename);\n \n      Transportation myTransportation = new Transportation();\n\n      Vehicle myVehicle= new Vehicle() ;\n      myVehicle.id = &quot;A12345&quot;;\n\n      Car myCar = new Car();\n      myCar.id = &quot;Car 34&quot;;\n      myCar.Maker = &quot;FamousCarMaker&quot;;\n       \n      Vehicle [] myVehicles = {myVehicle, myCar};\n      myTransportation.MyVehicles = myVehicles;\n\n      // Serializes the object, and closes the StreamWriter.\n      MySerializer.Serialize(myTextWriter, myTransportation);\n      myTextWriter.Close();\n   }\n \n   private void DeserializeObject(string filename)\n   {\n      // Creates the serializer with the type to deserialize.\n      XmlSerializer mySerializer = \n      new XmlSerializer(typeof(Transportation));\n      FileStream myFileStream = new FileStream(filename,FileMode.Open);\n      Transportation myTransportation =\n      (Transportation) mySerializer.Deserialize(myFileStream);\n \n      for(int i = 0;i &lt; myTransportation.MyVehicles.Length;i++)\n      {\n         Console.WriteLine(myTransportation.MyVehicles[i].id);\n      }\n   }\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\nPublic Class Vehicle\n    Public id As String\nEnd Class\n\nPublic Class Car\n    Inherits Vehicle\n    Public Maker As String\nEnd Class\n\nPublic Class Transportation\n    &lt;XmlArrayItem(ElementName := &quot;Transportation&quot;), _\n     XmlArrayItem(GetType(Car), ElementName := &quot;Automobile&quot;)&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;XmlArrayItem2.xml&quot;)\n        test.DeserializeObject(&quot;XmlArrayItem2.xml&quot;)\n    End Sub    \n    \n    Private Sub SerializeObject(ByVal filename As String)\n        &#39; Creates an XmlSerializer for the Transportation class.\n        Dim MySerializer As New XmlSerializer(GetType(Transportation))\n        \n        &#39; Writing the XML file to disk requires a TextWriter.\n        Dim myTextWriter As New StreamWriter(filename)\n        \n        Dim myTransportation As New Transportation()\n        \n        Dim myVehicle As New Vehicle()\n        myVehicle.id = &quot;A12345&quot;\n        \n        Dim myCar As New Car()\n        myCar.id = &quot;Car 34&quot;\n        myCar.Maker = &quot;FamousCarMaker&quot;\n        \n        Dim myVehicles() As Vehicle = {myVehicle, myCar}\n        myTransportation.MyVehicles = myVehicles\n        \n        &#39; Serializes the object, and closes the StreamWriter.\n        MySerializer.Serialize(myTextWriter, myTransportation)\n        myTextWriter.Close()\n    End Sub\n        \n    Private Sub DeserializeObject(ByVal filename As String)\n        &#39; Create the serializer with the type to deserialize.\n        Dim mySerializer As New XmlSerializer(GetType(Transportation))\n        Dim myFileStream As New FileStream(filename, FileMode.Open)\n        Dim myTransportation As Transportation = _\n            CType(mySerializer.Deserialize(myFileStream), Transportation)\n        \n        Dim i As Integer\n        For i = 0 To myTransportation.MyVehicles.Length - 1\n            Console.WriteLine(myTransportation.MyVehicles(i).id)\n        Next i\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlArrayItemAttribute(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class and specifies the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that can be inserted into the serialized array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlArrayItemAttribute (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Transportation</code> that contains a field named <code>MyVehicles</code> that returns an array of <code>Vehicle</code> objects. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> to the field, allowing the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to insert instances of the <code>Car</code> class, which is derived from the <code>Vehicle</code> class, into the array. While applying the attribute, the example sets the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property using the <code>type</code> parameter.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n \npublic class Vehicle\n{\n   public string id;\n}\npublic class Car:Vehicle\n{\n   public string Maker;\n}\n \npublic class Transportation\n{  \n   [XmlArrayItem(typeof(Vehicle)), \n   XmlArrayItem(typeof(Car))]\n   public Vehicle[] MyVehicles;\n}\n \npublic class Run\n{\n   public static void Main()\n   {\n      Run test= new Run();\n      test.SerializeObject(&quot;XmlArrayItem3.xml&quot;);\n      test.DeserializeObject(&quot;XmlArrayItem3.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n       // Creates an XmlSerializer. \n      XmlSerializer MySerializer = \n      new XmlSerializer(typeof(Transportation));\n      \n      // Writing the XML file to disk requires a TextWriter.\n      TextWriter myTextWriter = new StreamWriter(filename);\n \n      Transportation myTransportation = new Transportation();\n\n      Vehicle myVehicle= new Vehicle() ;\n      myVehicle.id = &quot;A12345&quot;;\n\n      Car myCar = new Car();\n      myCar.id = &quot;Car 34&quot;;\n      myCar.Maker = &quot;FamousCarMaker&quot;;\n       \n      Vehicle [] myVehicles = {myVehicle, myCar};\n      myTransportation.MyVehicles = myVehicles;\n\n      // Serializes the object, and closes the StreamWriter.\n      MySerializer.Serialize(myTextWriter, myTransportation);\n      myTextWriter.Close();\n   }\n \n   private void DeserializeObject(string filename)\n   {\n      // Creates the serializer with the type to deserialize.\n      XmlSerializer mySerializer = \n      new XmlSerializer(typeof(Transportation));\n      FileStream myFileStream = new FileStream(filename,FileMode.Open);\n      Transportation myTransportation =\n      (Transportation) mySerializer.Deserialize(myFileStream);\n \n      for(int i = 0;i &lt; myTransportation.MyVehicles.Length;i++)\n      {\n         Console.WriteLine(myTransportation.MyVehicles[i].id);\n      }\n   }\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\nPublic Class Vehicle\n    Public id As String\nEnd Class\n\nPublic Class Car\n    Inherits Vehicle\n    Public Maker As String\nEnd Class\n\nPublic Class Transportation\n    &lt;XmlArrayItem(GetType(Vehicle)), _\n     XmlArrayItem(GetType(Car))&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class\n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;XmlArrayItem3.xml&quot;)\n        test.DeserializeObject(&quot;XmlArrayItem3.xml&quot;)\n    End Sub    \n    \n    Private Sub SerializeObject(ByVal filename As String)\n        &#39; Creates an XmlSerializer object. \n        Dim MySerializer As New XmlSerializer(GetType(Transportation))\n        \n        &#39; Writing the XML file to disk requires a TextWriter.\n        Dim myTextWriter As New StreamWriter(filename)\n        \n        Dim myTransportation As New Transportation()\n        \n        Dim myVehicle As New Vehicle()\n        myVehicle.id = &quot;A12345&quot;\n        \n        Dim myCar As New Car()\n        myCar.id = &quot;Car 34&quot;\n        myCar.Maker = &quot;FamousCarMaker&quot;\n        \n        Dim myVehicles() As Vehicle =  {myVehicle, myCar}\n        myTransportation.MyVehicles = myVehicles\n        \n        &#39; Serializes the object, and closes the StreamWriter.\n        MySerializer.Serialize(myTextWriter, myTransportation)\n        myTextWriter.Close()\n    End Sub    \n    \n    Private Sub DeserializeObject(ByVal filename As String)\n        &#39; Creates the serializer with the type to deserialize.\n        Dim mySerializer As New XmlSerializer(GetType(Transportation))\n        Dim myFileStream As New FileStream(filename, FileMode.Open)\n        Dim myTransportation As Transportation = _\n            CType(mySerializer.Deserialize(myFileStream), Transportation)\n        \n        Dim i As Integer\n        For i = 0 To myTransportation.MyVehicles.Length - 1\n            Console.WriteLine(myTransportation.MyVehicles(i).id)\n        Next i\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\npublic ref class Vehicle\n{\npublic:\n   String^ id;\n};\n\npublic ref class Car: public Vehicle\n{\npublic:\n   String^ Maker;\n};\n\npublic ref class Transportation\n{\npublic:\n\n   [XmlArrayItem(Vehicle::typeid),\n   XmlArrayItem(Car::typeid)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // Creates an XmlSerializer. \n   XmlSerializer^ MySerializer = gcnew XmlSerializer( Transportation::typeid );\n\n   // Writing the XML file to disk requires a TextWriter.\n   TextWriter^ myTextWriter = gcnew StreamWriter( filename );\n   Transportation^ myTransportation = gcnew Transportation;\n   Vehicle^ myVehicle = gcnew Vehicle;\n   myVehicle-&gt;id = &quot;A12345&quot;;\n   Car^ myCar = gcnew Car;\n   myCar-&gt;id = &quot;Car 34&quot;;\n   myCar-&gt;Maker = &quot;FamousCarMaker&quot;;\n   array&lt;Vehicle^&gt;^myVehicles = {myVehicle,myCar};\n   myTransportation-&gt;MyVehicles = myVehicles;\n\n   // Serializes the object, and closes the StreamWriter.\n   MySerializer-&gt;Serialize( myTextWriter, myTransportation );\n   myTextWriter-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   // Creates the serializer with the type to deserialize.\n   XmlSerializer^ mySerializer = gcnew XmlSerializer( Transportation::typeid );\n   FileStream^ myFileStream = gcnew FileStream( filename,FileMode::Open );\n   Transportation^ myTransportation = dynamic_cast&lt;Transportation^&gt;(mySerializer-&gt;Deserialize( myFileStream ));\n   for ( int i = 0; i &lt; myTransportation-&gt;MyVehicles-&gt;Length; i++ )\n   {\n      Console::WriteLine( myTransportation-&gt;MyVehicles[ i ]-&gt;id );\n   }\n}\n\nint main()\n{\n   SerializeObject( &quot;XmlArrayItem3.xml&quot; );\n   DeserializeObject( &quot;XmlArrayItem3.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlArrayItemAttribute(String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class and specifies the name of the XML element generated in the XML document and the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that can be inserted into the generated XML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlArrayItemAttribute (string elementName, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload sets the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> and the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_Type_\" data-linktype=\"relative-path\">Type</a> properties.  </p>\n<p> Use this overload if you want the name of the generated XML element to differ from the member&#39;s identifier.  </p>\n<p> An XML document that includes namespaces can contain more than one version of an element name. For details, see the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Transportation</code> that contains a field named <code>MyVehicles</code> that returns an array of <code>Vehicle</code> objects. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> to the field, allowing the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to insert instances of the <code>Car</code> class, which is derived from the <code>Vehicle</code> class, into the array. While applying the attribute, the example sets the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property using the <code>elementName</code> parameter, and the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property using the <code>type</code> parameter.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\n\npublic ref class Vehicle\n{\npublic:\n   String^ id;\n};\n\npublic ref class Car: public Vehicle\n{\npublic:\n   String^ Maker;\n};\n\npublic ref class Transportation\n{\npublic:\n\n   [XmlArray]\n   [XmlArrayItem(&quot;Transport&quot;,Vehicle::typeid),\n   XmlArrayItem(&quot;Automobile&quot;,Car::typeid)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // Creates an XmlSerializer for the Transportation class.\n   XmlSerializer^ MySerializer = gcnew XmlSerializer( Transportation::typeid );\n\n   // Writing the XML file to disk requires a TextWriter.\n   TextWriter^ myTextWriter = gcnew StreamWriter( filename );\n   Transportation^ myTransportation = gcnew Transportation;\n   Vehicle^ myVehicle = gcnew Vehicle;\n   myVehicle-&gt;id = &quot;A12345&quot;;\n   Car^ myCar = gcnew Car;\n   myCar-&gt;id = &quot;Car 34&quot;;\n   myCar-&gt;Maker = &quot;FamousCarMaker&quot;;\n   array&lt;Vehicle^&gt;^myVehicles = {myVehicle,myCar};\n   myTransportation-&gt;MyVehicles = myVehicles;\n\n   // Serializes the object, and closes the StreamWriter.\n   MySerializer-&gt;Serialize( myTextWriter, myTransportation );\n   myTextWriter-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   // Creates an XmlSerializer.\n   XmlSerializer^ mySerializer = gcnew XmlSerializer( Transportation::typeid );\n   FileStream^ myFileStream = gcnew FileStream( filename,FileMode::Open );\n   Transportation^ myTransportation = dynamic_cast&lt;Transportation^&gt;(mySerializer-&gt;Deserialize( myFileStream ));\n   for ( int i = 0; i &lt; myTransportation-&gt;MyVehicles-&gt;Length; i++ )\n   {\n      Console::WriteLine( myTransportation-&gt;MyVehicles[ i ]-&gt;id );\n   }\n}\n\nint main()\n{\n   SerializeObject( &quot;XmlArrayItem4.xml&quot; );\n   DeserializeObject( &quot;XmlArrayItem4.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n \npublic class Vehicle\n{\n   public string id;\n}\npublic class Car:Vehicle\n{\n   public string Maker;\n}\n \npublic class Transportation\n{  \n   [XmlArray]\n   [XmlArrayItem(&quot;Transport&quot;, typeof(Vehicle)), \n   XmlArrayItem(&quot;Automobile&quot;, typeof(Car))]\n   public Vehicle[] MyVehicles;\n}\n \npublic class Run\n{\n   public static void Main()\n   {\n      Run test= new Run();\n      test.SerializeObject(&quot;XmlArrayItem4.xml&quot;);\n      test.DeserializeObject(&quot;XmlArrayItem4.xml&quot;);\n   }\n \n   private void SerializeObject(string filename)\n   {\n       // Creates an XmlSerializer for the Transportation class.\n      XmlSerializer MySerializer = \n      new XmlSerializer(typeof(Transportation));\n\n      // Writing the XML file to disk requires a TextWriter.\n      TextWriter myTextWriter = new StreamWriter(filename);\n \n      Transportation myTransportation = new Transportation();\n\n      Vehicle myVehicle= new Vehicle() ;\n      myVehicle.id = &quot;A12345&quot;;\n\n      Car myCar = new Car();\n      myCar.id = &quot;Car 34&quot;;\n      myCar.Maker = &quot;FamousCarMaker&quot;;\n       \n      Vehicle [] myVehicles = {myVehicle, myCar};\n      myTransportation.MyVehicles = myVehicles;\n\n      // Serializes the object, and closes the StreamWriter.\n      MySerializer.Serialize(myTextWriter, myTransportation);\n      myTextWriter.Close();\n   }\n \n   private void DeserializeObject(string filename)\n   {\n      // Creates an XmlSerializer.\n      XmlSerializer mySerializer = \n      new XmlSerializer(typeof(Transportation));\n      FileStream myFileStream = new FileStream(filename,FileMode.Open);\n      Transportation myTransportation =\n      (Transportation) mySerializer.Deserialize(myFileStream);\n \n      for(int i = 0;i &lt; myTransportation.MyVehicles.Length;i++)\n      {\n         Console.WriteLine(myTransportation.MyVehicles[i].id);\n      }\n   }\n}\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\nPublic Class Vehicle\n    Public id As String\nEnd Class\n\nPublic Class Car\n    Inherits Vehicle\n    Public Maker As String\nEnd Class\n\nPublic Class Transportation\n    &lt;XmlArray(), _\n     XmlArrayItem(&quot;Transport&quot;, GetType(Vehicle)), _\n     XmlArrayItem(&quot;Automobile&quot;, GetType(Car))&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class\n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;XmlArrayItem4.xml&quot;)\n        test.DeserializeObject(&quot;XmlArrayItem4.xml&quot;)\n    End Sub    \n    \n    Private Sub SerializeObject(ByVal filename As String)\n        &#39; Creates an XmlSerializer for the Transportation class.\n        Dim MySerializer As New XmlSerializer(GetType(Transportation))\n        \n        &#39; Writing the XML file to disk requires a TextWriter.\n        Dim myTextWriter As New StreamWriter(filename)\n        \n        Dim myTransportation As New Transportation()\n        \n        Dim myVehicle As New Vehicle()\n        myVehicle.id = &quot;A12345&quot;\n        \n        Dim myCar As New Car()\n        myCar.id = &quot;Car 34&quot;\n        myCar.Maker = &quot;FamousCarMaker&quot;\n        \n        Dim myVehicles() As Vehicle =  {myVehicle, myCar}\n        myTransportation.MyVehicles = myVehicles\n        \n        &#39; Serializes the object, and closes the StreamWriter.\n        MySerializer.Serialize(myTextWriter, myTransportation)\n        myTextWriter.Close()\n    End Sub    \n    \n    Private Sub DeserializeObject(ByVal filename As String)\n        &#39; Creates an XmlSerializer.\n        Dim mySerializer As New XmlSerializer(GetType(Transportation))\n        Dim myFileStream As New FileStream(filename, FileMode.Open)\n        Dim myTransportation As Transportation = _\n            CType(mySerializer.Deserialize(myFileStream), Transportation)\n        \n        Dim i As Integer\n        For i = 0 To myTransportation.MyVehicles.Length - 1\n            Console.WriteLine(myTransportation.MyVehicles(i).id)\n        Next i\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_DataType\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_DataType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the XML data type of the generated XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DataType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document &quot;XML Schema Part 2: DataTypes&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table lists the XML Schema simple data types with their .NET equivalents.  </p>\n<p> For the XML Schema <code>base64Binary</code> and <code>hexBinary</code> data types, use an array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects, and apply an <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> with the DataType property set to &quot;base64Binary&quot; or &quot;hexBinary&quot;, as appropriate. For the XML Schema <code>time</code> and <code>date</code> data types, use the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> type and apply the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> with the DataType set to &quot;date&quot; or &quot;time&quot;.  </p>\n<p> For every XML Schema type that is mapped to a string, apply the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> with its DataType property set to the XML Schema type. However, this does not change the serialization format, only the schema for the member.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Passing binary data as an XML element is more efficient then passing it as an XML attribute.  </p>\n</div>\n<p> For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document &quot;XML Schema Part 2: Datatypes.&quot;  </p>\n<table>\n<thead>\n<tr>\n<th>XSD data type</th>\n<th>.NET data type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>anyURI</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>base64Binary</td>\n<td>Array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n</tr>\n<tr>\n<td>byte</td>\n<td><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></td>\n</tr>\n<tr>\n<td>date</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>dateTime</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>decimal</td>\n<td><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></td>\n</tr>\n<tr>\n<td>double</td>\n<td><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></td>\n</tr>\n<tr>\n<td>ENTITY</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>ENTITIES</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>float</td>\n<td><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></td>\n</tr>\n<tr>\n<td>gDay</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gMonth</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gMonthDay</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gYear</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gYearMonth</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>hexBinary</td>\n<td>Array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects</td>\n</tr>\n<tr>\n<td>ID</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>IDREF</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>IDREFS</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>int</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n</tr>\n<tr>\n<td>integer</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>language</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>long</td>\n<td><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></td>\n</tr>\n<tr>\n<td>Name</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NCName</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>negativeInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NMTOKEN</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NMTOKENS</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>normalizedString</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>nonNegativeInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>nonPositiveInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NOTATION</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>positiveInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>QName</td>\n<td><a class=\"xref\" href=\"system.xml.xmlqualifiedname\" data-linktype=\"relative-path\">XmlQualifiedName</a></td>\n</tr>\n<tr>\n<td>duration</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>string</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>short</td>\n<td><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></td>\n</tr>\n<tr>\n<td>time</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>token</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>unsignedByte</td>\n<td><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></td>\n</tr>\n<tr>\n<td>unsignedInt</td>\n<td><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></td>\n</tr>\n<tr>\n<td>unsignedLong</td>\n<td><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></td>\n</tr>\n<tr>\n<td>unsignedShort</td>\n<td><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>PurchaseOrder</code>. Several instances of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> class are applied to three members, and the DataType property for each instance is set to a type allowed in the array.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlArrayItemAttribute Example#1\">using System;\nusing System.Collections;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.IO;\nusing System.Xml.Schema;\npublic class PurchaseOrder\n{\n   [XmlArrayItem(DataType = &quot;gMonth&quot;, \n   ElementName=&quot;MyMonths&quot;,\n   Namespace = &quot;http://www.cohowinery.com&quot;)]\n   public string[] Months;\n\n   [XmlArrayItem(typeof(Item)), XmlArrayItem(typeof(NewItem))]\n   public Item[] Items;\n\n   [XmlArray(IsNullable = true)]\n   [XmlArrayItem(typeof(string)), \n   XmlArrayItem(typeof(double)), \n   XmlArrayItem(typeof(NewItem))]\n   public object[] Things;\n   }\n\npublic class Item{\n   public string ItemID;\n   public Item(){}\n   public Item(string id){\n   \tItemID = id;\n   }\n}\npublic class NewItem:Item{\n   public string Category;\n   public NewItem(){}\n   public NewItem(string id, string cat){\n   \tthis.ItemID = id;\n   \tCategory = cat;\n   \t}\n}\n \npublic class Test\n{\n   public static void Main()\n   {\n      // Read and write purchase orders.\n      Test t = new Test();\n      t.SerializeObject(&quot;ArrayItemEx.xml&quot;);\n      t.DeserializeObject(&quot;ArrayItemEx.xml&quot;);\n   } \n\n   private void SerializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class;\n      // specify the type of object to serialize.\n      XmlSerializer serializer = \n      new XmlSerializer(typeof(PurchaseOrder));\n      TextWriter writer = new StreamWriter(filename);\n      // Create a PurchaseOrder and set its properties.\n      PurchaseOrder po=new PurchaseOrder();\n      po.Months = new string[]{ &quot;March&quot;, &quot;May&quot;, &quot;August&quot;};\n      po.Items= new Item[]{new Item(&quot;a1&quot;), new NewItem(&quot;b1&quot;, &quot;book&quot;)};\n      po.Things= new object[] {&quot;String&quot;, 2003.31, new NewItem(&quot;Item100&quot;, &quot;book&quot;)};\n      \n      // Serialize the purchase order, and close the TextWriter.\n      serializer.Serialize(writer, po);\n      writer.Close();\n   }\n \n   protected void DeserializeObject(string filename)\n   {\n      // Create an instance of the XmlSerializer class;\n      // specify the type of object to be deserialized.\n      XmlSerializer serializer = new XmlSerializer(typeof(PurchaseOrder));\n   \n      // A FileStream is needed to read the XML document.\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      // Declare an object variable of the type to be deserialized.\n      PurchaseOrder po;\n      /* Use the Deserialize method to restore the object&#39;s state with\n      data from the XML document. */\n      po = (PurchaseOrder) serializer.Deserialize(fs);\n      foreach(string s in po.Months)\n      \t  Console.WriteLine(s);\n      foreach(Item i in po.Items)\n         Console.WriteLine(i.ItemID);\n      foreach(object thing in po.Things)\n         Console.WriteLine(thing); \n   } \n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlArrayItemAttribute Example#1\">#using &lt;System.dll&gt;\n#using &lt;System.xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::IO;\nusing namespace System::Xml::Schema;\npublic ref class Item\n{\npublic:\n   String^ ItemID;\n   Item(){}\n\n   Item( String^ id )\n   {\n      ItemID = id;\n   }\n};\n\npublic ref class NewItem: public Item\n{\npublic:\n   String^ Category;\n   NewItem(){}\n\n   NewItem( String^ id, String^ cat )\n   {\n      ItemID = id;\n      Category = cat;\n   }\n};\n\npublic ref class PurchaseOrder\n{\npublic:\n\n   [XmlArrayItem(DataType=&quot;gMonth&quot;,\n   ElementName=&quot;MyMonths&quot;,\n   Namespace=&quot;http://www.cohowinery.com&quot;)]\n   array&lt;String^&gt;^Months;\n\n   [XmlArrayItem(Item::typeid),XmlArrayItem(NewItem::typeid)]\n   array&lt;Item^&gt;^Items;\n\n   [XmlArray(IsNullable=true)]\n   [XmlArrayItem(String::typeid),\n   XmlArrayItem(Double::typeid),\n   XmlArrayItem(NewItem::typeid)]\n   array&lt;Object^&gt;^Things;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // Create an instance of the XmlSerializer class;\n   // specify the type of object to serialize.\n   XmlSerializer^ serializer = gcnew XmlSerializer( PurchaseOrder::typeid );\n   TextWriter^ writer = gcnew StreamWriter( filename );\n\n   // Create a PurchaseOrder and set its properties.\n   PurchaseOrder^ po = gcnew PurchaseOrder;\n   array&lt;String^&gt;^months = {&quot;March&quot;,&quot;May&quot;,&quot;August&quot;};\n   po-&gt;Months = months;\n   array&lt;Item^&gt;^items = {gcnew Item( &quot;a1&quot; ),gcnew NewItem( &quot;b1&quot;,&quot;book&quot; )};\n   po-&gt;Items = items;\n   array&lt;Object^&gt;^things = {&quot;String&quot;,2003.31,gcnew NewItem( &quot;Item100&quot;,&quot;book&quot; )};\n   po-&gt;Things = things;\n\n   // Serialize the purchase order, and close the TextWriter.\n   serializer-&gt;Serialize( writer, po );\n   writer-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   // Create an instance of the XmlSerializer class;\n   // specify the type of object to be deserialized.\n   XmlSerializer^ serializer = gcnew XmlSerializer( PurchaseOrder::typeid );\n\n   // A FileStream is needed to read the XML document.\n   FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n\n   // Declare an object variable of the type to be deserialized.\n   PurchaseOrder^ po;\n\n   /* Use the Deserialize method to restore the object&#39;s state with\n      data from the XML document. */\n   po = safe_cast&lt;PurchaseOrder^&gt;(serializer-&gt;Deserialize( fs ));\n   for ( int i = 0; i &lt; po-&gt;Months-&gt;Length; ++i )\n      Console::WriteLine( po-&gt;Months[ i ] );\n   for ( int i = 0; i &lt; po-&gt;Items-&gt;Length; ++i )\n      Console::WriteLine( po-&gt;Items[ i ]-&gt;ItemID );\n   for ( int i = 0; i &lt; po-&gt;Things-&gt;Length; ++i )\n      Console::WriteLine( po-&gt;Things[ i ] );\n}\n\nint main()\n{\n   // Read and write purchase orders.\n   SerializeObject(  &quot;ArrayItemEx.xml&quot; );\n   DeserializeObject(  &quot;ArrayItemEx.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlArrayItemAttribute Example#1\">Imports System\nImports System.Collections\nImports System.Xml\nImports System.Xml.Serialization\nImports System.IO\nImports System.Xml.Schema\nPublic Class PurchaseOrder\n   &lt;XmlArrayItem(DataType:= &quot;gMonth&quot;, _\n   ElementName:=&quot;MyMonths&quot;, _\n   Namespace:= &quot;http:&#39;www.cohowinery.com&quot;)&gt; _\n   public Months() As String \n\n   &lt;XmlArrayItem(GetType(Item)), XmlArrayItem(GetType(NewItem))&gt; _\n   public Items () As Item\n\n   &lt;XmlArray(IsNullable:= true), _\n   XmlArrayItem(GetType(String)), _\n   XmlArrayItem(GetType(double)), _\n   XmlArrayItem(GetType(NewItem))&gt; _\n   public Things() As Object\nEnd Class\n\nPublic Class Item\n   public ItemID As String \n\n   public Sub New()\n   End Sub\n   \n   public Sub New (id As String)\n   \tItemID = id\n   End Sub\nEnd Class\n\nPublic Class NewItem\n   Inherits Item\n   public Category As String \n   \n   public Sub New()\n      \n   End Sub\n\n   public Sub New(id As String , cat As String )\n   \tme.ItemID = id\n   \tCategory = cat\n   End Sub\nEnd Class\n \nPublic Class Test\n   Shared Sub Main()\n      &#39; Read and write purchase orders.\n      Dim t As Test = New Test()\n      t.SerializeObject(&quot;ArrayItemExVB.xml&quot;)\n      t.DeserializeObject(&quot;ArrayItemExVB.xml&quot;)\n   End Sub \n\n   private Sub SerializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class\n      &#39; specify the type of object to serialize.\n      Dim serializer As XmlSerializer = _\n      New XmlSerializer(GetType(PurchaseOrder))\n      Dim writer As TextWriter = New StreamWriter(filename)\n      &#39; Create a PurchaseOrder and set its properties.\n      Dim po As PurchaseOrder =New PurchaseOrder()\n      po.Months = New String() { &quot;March&quot;, &quot;May&quot;, &quot;August&quot;}\n      po.Items= New Item(){New Item(&quot;a1&quot;), New NewItem(&quot;b1&quot;, &quot;book&quot;)}\n      po.Things= New Object() {&quot;String&quot;, 2003.31, New NewItem(&quot;Item100&quot;, &quot;book&quot;)}\n      \n      &#39; Serialize the purchase order, and close the TextWriter.\n      serializer.Serialize(writer, po)\n      writer.Close()\n   End Sub\n \n   protected Sub DeserializeObject(filename As String)\n      &#39; Create an instance of the XmlSerializer class\n      &#39; specify the type of object to be deserialized.\n      Dim serializer As XmlSerializer = _\n      New XmlSerializer(GetType(PurchaseOrder))\n   \n      &#39; A FileStream is needed to read the XML document.\n      Dim fs As FileStream = New FileStream(filename, FileMode.Open)\n      &#39; Declare an object variable of the type to be deserialized.\n      Dim po As PurchaseOrder \n      &#39; Use the Deserialize method to restore the object&#39;s state with\n      &#39; data from the XML document. \n      po = CType( serializer.Deserialize(fs), PurchaseOrder)\n      Dim s As String\n      Dim i As Item\n      Dim thing As Object\n      for each s in po.Months\n      \t  Console.WriteLine(s)\n      Next \n      \n      for each i in po.Items\n         Console.WriteLine(i.ItemID)\n      Next \n      \n      for each thing in po.Things\n         Console.WriteLine(thing) \n      Next\n   End Sub\nEnd Class\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_ElementName\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ElementName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the generated XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ElementName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the generated XML element. The default is the member identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specify an ElementName if you want the name of the generated XML element to differ from the member&#39;s identifier.  </p>\n<p> You can set the same <a class=\"xref\" href=\"system.xml.serialization.xmlarrayattribute#System_Xml_Serialization_XmlArrayAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members. For details about how to use namespaces and prefixed names in the XML document, see the <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the ElementName property for the <code>Vehicle</code> and <code>Car</code> class--thereby changing the names of XML elements that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates for those classes.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.ElementName Example#1\">public class Transportation\n{  \n   [XmlArray(&quot;Vehicles&quot;)]\n   /* Specifies acceptable types and the ElementName generated \n      for each object type. */\n   [XmlArrayItem(typeof(Vehicle), ElementName = &quot;Transport&quot;), \n   XmlArrayItem(typeof(Car), ElementName = &quot;Automobile&quot;)]\n   public Vehicle[] MyVehicles;\n}\n\n// By default, this class results in XML elements named &quot;Vehicle&quot;. \npublic class Vehicle\n{\n   public string id;\n}\n\n// By default, this class results in XML elements named &quot;Car&quot;. \npublic class Car:Vehicle\n{\n   public string Maker;\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.ElementName Example#1\">// By default, this class results in XML elements named &quot;Vehicle&quot;. \npublic ref class Vehicle\n{\npublic:\n   String^ id;\n};\n\n// By default, this class results in XML elements named &quot;Car&quot;. \npublic ref class Car: public Vehicle\n{\npublic:\n   String^ Maker;\n};\n\npublic ref class Transportation\n{\npublic:\n\n   /* Specifies acceptable types and the ElementName generated \n         for each object type. */\n\n   [XmlArray(&quot;Vehicles&quot;)]\n   [XmlArrayItem(Vehicle::typeid,ElementName=&quot;Transport&quot;),\n   XmlArrayItem(Car::typeid,ElementName=&quot;Automobile&quot;)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.ElementName Example#1\">Public Class Transportation\n    &#39; Specifies acceptable types and the ElementName generated\n    &#39;  for each object type. \n    &lt;XmlArray(&quot;Vehicles&quot;), _\n     XmlArrayItem(GetType(Vehicle), ElementName := &quot;Transport&quot;), _\n     XmlArrayItem(GetType(Car), ElementName := &quot;Automobile&quot;)&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class\n\n&#39; By default, this class results in XML elements named &quot;Vehicle&quot;. \nPublic Class Vehicle\n    Public id As String\nEnd Class\n\n&#39; By default, this class results in XMl elements named &quot;Car&quot;. \nPublic Class Car\n    Inherits Vehicle\n    Public Maker As String\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_Form\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_Form_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Form</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the name of the generated XML element is qualified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaForm Form { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaform\" data-linktype=\"relative-path\">XmlSchemaForm</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.xml.schema.xmlschemaform\" data-linktype=\"relative-path\">XmlSchemaForm</a> values. The default is <code>XmlSchemaForm.None</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The Form property is set to <code>XmlSchemaForm.Unqualified</code> and a <span class=\"xref\">stem.Xml.Serialization.XmlArrayItemAttribute.Namespace*</span> value is specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Form_\" data-linktype=\"relative-path\">Form</a> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification &quot;Namespaces in XML.&quot;  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property is set to any value, attempting to set the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_Form_\" data-linktype=\"relative-path\">Form</a> property to <code>XmlSchemaForm.Unqualified</code> throws an exception.  </p>\n<p> The default value, <code>XmlSchemaForm.None</code>, instructs the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to check the schema for the XML document to determine whether the namespace is qualified. For elements, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> checks the value of the schema-element attribute <code>elementFormDefault</code>. For attributes, it checks the value of the schema-element attribute <code>attributeFormDefault</code>. For example, the following XML Schema indicates that the <code>Name</code> element is qualified, while the <code>Number</code> element is unqualified.  </p>\n<pre><code>&lt;schema elementFormDefault=&quot;qualified&quot;   \nattributeFormDefault=&quot;unqualified&quot;&gt;  \n   &lt;element name=&quot;Name&quot;/&gt;  \n   &lt;attribute name=&quot;Number&quot;/&gt;  \n&lt;/schema&gt;\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the Form property for the <code>Vehicle</code> class to <code>XmlSchemaForm.Unqualified</code>, and the Form property for the <code>Car</code> class to <code>XmlSchemaForm.Qualified</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.Form Example#1\">Public Class Transportation\n    &#39; Specify the Form property value.\n    &lt;XmlArray(&quot;Vehicles&quot;), _\n     XmlArrayItem(GetType(Vehicle), Form := XmlSchemaForm.Unqualified), _\n     XmlArrayItem(GetType(Car), Form := XmlSchemaForm.Qualified)&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class\n\nPublic Class Vehicle\n    Public id As String\nEnd Class\n\nPublic Class Car\n    Inherits Vehicle\n    Public Maker As String\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.Form Example#1\">public ref class Vehicle\n{\npublic:\n   String^ id;\n};\n\npublic ref class Car: public Vehicle\n{\npublic:\n   String^ Maker;\n};\n\npublic ref class Transportation\n{\npublic:\n\n   // Specifies the Form property value.\n\n   [XmlArray(&quot;Vehicles&quot;)]\n   [XmlArrayItem(Vehicle::typeid,\n   Form=XmlSchemaForm::Unqualified),\n   XmlArrayItem(Car::typeid,\n   Form=XmlSchemaForm::Qualified)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.Form Example#1\">public class Transportation\n{  \n   [XmlArray(&quot;Vehicles&quot;)]\n   // Specifies the Form property value.\n   [XmlArrayItem(typeof(Vehicle), \n   Form = XmlSchemaForm.Unqualified), \n   XmlArrayItem(typeof(Car), \n   Form = XmlSchemaForm.Qualified)]\n   public Vehicle[] MyVehicles;\n}\n\npublic class Vehicle\n{\n   public string id;\n}\n\npublic class Car:Vehicle\n{\n   public string Maker;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_IsNullable\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_IsNullable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsNullable</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must serialize a member as an empty XML tag with the <code>xsi:nil</code> attribute set to <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsNullable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates the <code>xsi:nil</code> attribute; otherwise, <code>false</code>, and no instance is generated. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The XML schema specification for structures allows an XML document to explicitly signal that an element&#39;s content is missing. Such an element contains the attribute <code>xsi:nil</code> set to <code>true</code>. For more information, see the World Wide Web Consortium (www.w3.org) specification titled &quot;XML Schema Part 1: Structures.&quot;  </p>\n<p> If the IsNullable property is <code>true</code>, the <code>xsi:nil</code> attribute is generated for class members that have been set to <code>null</code>. For example, if you set a field named <code>MyStringArray</code> to <code>null</code>, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates the following XML code.  </p>\n<pre><code>&lt;MyStringArray xsi:nil = &quot;true&quot; /&gt;\n</code></pre><p> If the IsNullable property is <code>false</code>, no XML element is generated.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot apply the IsNullable property to a member typed as a value type because a value type cannot contain <code>null</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code>, which contains a field named <code>Employees</code> that returns an array of <code>Employee</code> objects. A second class named <code>Manager</code> derives from <code>Employee</code>. An <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> specifies that the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> can insert both <code>Employee</code> and <code>Manager</code> objects into the array. The example sets the IsNullable property, thereby telling the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> not to generate the <code>xsi:nil</code> attribute objects in the array set to <code>null</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.IsNullable Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\npublic ref class Manager: public Employee\n{\npublic:\n   int Level;\n};\n\npublic ref class Group\n{\npublic:\n\n   [XmlArray(IsNullable=true)]\n   [XmlArrayItem(Manager::typeid,IsNullable=false),\n   XmlArrayItem(Employee::typeid,IsNullable=false)]\n   array&lt;Employee^&gt;^Employees;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   XmlSerializer^ s = gcnew XmlSerializer( Group::typeid );\n\n   // To write the file, a TextWriter is required.\n   TextWriter^ writer = gcnew StreamWriter( filename );\n\n   // Creates the object to serialize.\n   Group^ group = gcnew Group;\n\n   // Creates a null Manager object.\n   Manager^ mgr = nullptr;\n\n   // Creates a null Employee object.\n   Employee^ y = nullptr;\n   array&lt;Employee^&gt;^temp = {mgr,y};\n   group-&gt;Employees = temp;\n\n   // Serializes the object and closes the TextWriter.\n   s-&gt;Serialize( writer, group );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   SerializeObject( &quot;TypeDoc.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.IsNullable Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\npublic class Group\n{   \n   [XmlArray(IsNullable = true)]\n   [XmlArrayItem(typeof(Manager), IsNullable = false),\n   XmlArrayItem(typeof(Employee), IsNullable = false)]\n   public Employee[] Employees;\n}   \n\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Manager:Employee\n{\n   public int Level;\n}\n\npublic class Run\n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;TypeDoc.xml&quot;);\n   }\n\n   public void SerializeObject(string filename)\n   {\n      XmlSerializer s = new XmlSerializer(typeof(Group));\n\n      // To write the file, a TextWriter is required.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Creates the object to serialize.\n      Group group = new Group();\n\n      // Creates a null Manager object.\n      Manager mgr = null;\n      \n      // Creates a null Employee object.\n      Employee y = null;\n      \n      group.Employees = new Employee[2] {mgr, y};\n\n      // Serializes the object and closes the TextWriter.\n      s.Serialize(writer, group);\n      writer.Close();\n\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.IsNullable Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml.Serialization\n\n\nPublic Class Group\n    &lt;XmlArray(IsNullable := True), _\n     XmlArrayItem(GetType(Manager), IsNullable := False), _\n     XmlArrayItem(GetType(Employee), IsNullable := False)&gt; _\n    Public Employees() As Employee\nEnd Class\n\nPublic Class Employee\n    Public Name As String\nEnd Class\n\nPublic Class Manager\n    Inherits Employee\n    Public Level As Integer\nEnd Class\n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;TypeDoc.xml&quot;)\n    End Sub    \n    \n    Public Sub SerializeObject(filename As String)\n        Dim s As New XmlSerializer(GetType(Group))\n        \n        &#39; To write the file, a TextWriter is required.\n        Dim writer As New StreamWriter(filename)\n        \n        &#39; Creates the object to serialize.\n        Dim group As New Group()\n        \n        &#39; Creates a null Manager object.\n        Dim mgr As Manager = Nothing\n        \n        &#39; Creates a null Employee object.\n        Dim y As Employee = Nothing\n        \n        group.Employees = New Employee() {mgr, y}\n        \n        &#39; Serializes the object and closes the TextWriter.\n        s.Serialize(writer, group)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_Namespace\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_Namespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the namespace of the generated XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Namespace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The namespace of the generated XML element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Namespace property conforms to the World Wide Web Consortium (www.w3.org) specification &quot;Namespaces in XML.&quot;  </p>\n<p> To create namespaces to use in the XML document and associated prefixes, you must create an <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> that contains all the prefix and namespace pairs. The namespace you set for each <a class=\"xref\" href=\"system.xml.serialization.xmlarrayattribute\" data-linktype=\"relative-path\">XmlArrayAttribute</a> must be contained in the <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a>. When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates the document, it correctly prefixes the element name for each array item.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example applies an <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> and sets the Namespace property.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.Namespace Example#1\">public ref class Transportation\n{\npublic:\n\n   // Sets the Namespace property.\n\n   [XmlArrayItem(Car::typeid,Namespace=&quot;http://www.cpandl.com&quot;)]\n   array&lt;Vehicle^&gt;^MyVehicles;\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.Namespace Example#1\">Public Class Transportation\n    &#39; Sets the Namespace property.\n    &lt;XmlArrayItem(GetType(Car), Namespace := &quot;http://www.cpandl.com&quot;)&gt; _\n    Public MyVehicles() As Vehicle\nEnd Class &#39;Transportation\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.Namespace Example#1\">public class Transportation\n{  \n   // Sets the Namespace property.\n   [XmlArrayItem(typeof(Car), Namespace = &quot;http://www.cpandl.com&quot;)]\n   public Vehicle[] MyVehicles;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_NestingLevel\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_NestingLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NestingLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the level in a hierarchy of XML elements that the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> affects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int NestingLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of a set of indexes in an array of arrays.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An XML document can contain hierarchies of XML elements. To represent such a hierarchy, an array of arrays is used. In such an array, each index represents a level in the hierarchy. Therefore, the NestingLevel property is only used when applying an <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> to a field that returns an array of arrays.  </p>\n<p> When applying the attribute, specify which hierarchy level the attribute affects by setting the NestingLevel. The first index always has the value of 0; therefore it is optional to set its NestingLevel --an <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> without a NestingLevel value is applied to the first array index. Only the subsequent <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> objects require NestingLevel values specified (as 1, 2, 3, and so forth).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example applies three <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> attributes to an array of arrays. To specify which of the arrays each attribute applies to, the NestingLevel property is set to the index of the arrays.  </p>\n<pre><code class=\"lang-cpp\" name=\"NestingLevel#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\nusing namespace System::IO;\n\npublic ref class Forest\n{\n    // Set the NestingLevel for each array. The first\n    // attribute (NestingLevel = 0) is optional.\npublic:\n    [XmlArrayItem(ElementName = &quot;tree&quot;, NestingLevel = 0)]\n    [XmlArrayItem(ElementName = &quot;branch&quot;, NestingLevel = 1)]\n    [XmlArrayItem(ElementName = &quot;leaf&quot;,NestingLevel = 2)]\n    array&lt;array&lt;array&lt;String^&gt;^&gt;^&gt;^ TreeArray;\n};\n\nint main()\n{\n    XmlSerializer^ serializer = gcnew XmlSerializer(Forest::typeid);\n\n    Forest^ constructedForest = gcnew Forest();\n    array&lt;array&lt;array&lt;String^&gt;^&gt;^&gt;^ tree = \n        gcnew array&lt;array&lt;array&lt;String^&gt;^&gt;^&gt;(2);\n\n    array&lt;array&lt;String^&gt;^&gt;^ firstBranch = gcnew array&lt;array&lt;String^&gt;^&gt;(1);\n    firstBranch[0] = gcnew array&lt;String^&gt;{&quot;One&quot;};\n    tree[0] = firstBranch;\n\n    array&lt;array&lt;String^&gt;^&gt;^ secondBranch = gcnew array&lt;array&lt;String^&gt;^&gt;(2);\n    secondBranch[0] = gcnew array&lt;String^&gt;{&quot;One&quot;,&quot;Two&quot;};\n    secondBranch[1] = gcnew array&lt;String^&gt;{&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;};\n    tree[1] = secondBranch;\n\n    constructedForest-&gt;TreeArray = tree;\n\n    serializer-&gt;Serialize(Console::Out, constructedForest);\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"NestingLevel#1\">using System;\nusing System.Xml;\nusing System.Xml.Serialization;\nusing System.IO;\n\npublic class Forest{\n   /* Set the NestingLevel for each array. The first \n   attribute (NestingLevel = 0) is optional. */\n   [XmlArrayItem(ElementName = &quot;tree&quot;, NestingLevel = 0)]\n   [XmlArrayItem(ElementName = &quot;branch&quot;, NestingLevel = 1)]\n   [XmlArrayItem(ElementName = &quot;leaf&quot;,NestingLevel = 2)]\n   public string[][][] TreeArray;\n}\n\npublic class Test{\n   public static void Main(){\n      Test t = new Test();\n      t.SerializeObject(&quot;Tree.xml&quot;);\n   }\n   private void SerializeObject(string filename){\n      XmlSerializer serializer = \n      new XmlSerializer(typeof(Forest));\n\n      Forest f = new Forest();\n      string[][][] myTreeArray = new string[2] [][];\n\n      string[][]myBranchArray1= new string[1][];\n      myBranchArray1[0]=new string[1]{&quot;One&quot;};\n      myTreeArray[0]=myBranchArray1;\n\n      string[][]myBranchArray2= new string[2][];\n      myBranchArray2[0]=new string[2]{&quot;One&quot;,&quot;Two&quot;};\n      myBranchArray2[1]=new string[3]{&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;};\n      myTreeArray[1]=myBranchArray2;\n   \n      f.TreeArray=myTreeArray;\n\n     serializer.Serialize(Console.Out, f);\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlArrayItemAttribute_Type\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlArrayItemAttribute_Type_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Type</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the type allowed in an array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type Type { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that is allowed in the array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property to specify an overridden type for a public field or public read/write property value.  </p>\n<p> If a field or property returns an array of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>, apply multiple instances of the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> to the field or property. For each instance, set the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property to a type of object that can be inserted into the array.  </p>\n<p> If an array contains only primitive types, you do not need to apply the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a>. By default, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type. For example, the following code:  </p>\n<pre><code>&#39; Visual Basic code  \nPublic Class Arrays  \n   Public XSDTypes ()As Object= New Object(){&quot;one&quot;, 2, 3.0}  \nEnd Class  \n// C# code  \npublic class MyArray{  \n   // No XmlArrayItemAttribute is applied.  \n   public object[] XSDTypes= new object[]{&quot;one&quot;, 2, 3.2};  \n}\n</code></pre><p> results in this XML:  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Arrays xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;XSDTypes&gt;  \n    &lt;Object xsi:type=&quot;xsd:string&quot;&gt;one&lt;/Object&gt;  \n    &lt;Object xsi:type=&quot;xsd:int&quot;&gt;2&lt;/Object&gt;  \n    &lt;Object xsi:type=&quot;xsd:double&quot;&gt;3&lt;/Object&gt;  \n  &lt;/XSDTypes&gt;  \n&lt;/Arrays&gt;\n</code></pre><p> However, if you specify the Type property for each primitive type, the element name for each value is generated using the .NET type name. For example this code:  </p>\n<pre><code>&#39; Visual Basic code  \nPublic Class Arrays  \n   &lt;XmlArrayItem(GetType(String)), _  \n   XmlArrayItem(GetType(Integer)), _  \n   XmlArrayItem(GetType(Double))&gt; _  \n   Public PrimitiveTypes () As Object = New Object(){&quot;one&quot;, 2, 3.0}  \nEnd Class  \n// C# code  \npublic class Arrays{  \n   [XmlArrayItem(typeof(string))]  \n   [XmlArrayItem(typeof(int))]  \n   [XmlArrayItem(typeof(double))]  \n   public object [] PrimitiveTypes = new object[]{&quot;one&quot;, 2, 3.0};  \n}\n</code></pre><p> results in this XML:  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Arrays xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;PrimitiveTypes&gt;  \n    &lt;string&gt;one&lt;/string&gt;  \n    &lt;int&gt;2&lt;/int&gt;  \n    &lt;double&gt;3&lt;/double&gt;  \n  &lt;/PrimitiveTypes&gt;  \n&lt;/Arrays&gt;\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes an array of objects. The field that returns the array is attributed with two <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> instances. Each instance instructs the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to accept the specified Type in the array.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlArrayItemAttribute.Type Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\n\npublic ref class Person\n{\npublic:\n   String^ Name;\n};\n\npublic ref class Manager: public Person\n{\npublic:\n   int Rank;\n};\n\npublic ref class Group\n{\npublic:\n\n   /* The Type property instructs the XmlSerializer to accept both\n      the Person and Manager types in the array. */\n\n   [XmlArrayItem(Type=Manager::typeid),\n   XmlArrayItem(Type=Person::typeid)]\n   array&lt;Person^&gt;^Staff;\n};\n\nvoid SerializeOrder( String^ filename )\n{\n   // Creates an XmlSerializer.\n   XmlSerializer^ xSer = gcnew XmlSerializer( Group::typeid );\n\n   // Creates the Group object, and two array items.\n   Group^ myGroup = gcnew Group;\n   Person^ p1 = gcnew Person;\n   p1-&gt;Name = &quot;Jacki&quot;;\n   Manager^ p2 = gcnew Manager;\n   p2-&gt;Name = &quot;Megan&quot;;\n   p2-&gt;Rank = 2;\n   array&lt;Person^&gt;^myStaff = {p1,p2};\n   myGroup-&gt;Staff = myStaff;\n   \n   // Serializes the object, and closes the StreamWriter.\n   TextWriter^ writer = gcnew StreamWriter( filename );\n   xSer-&gt;Serialize( writer, myGroup );\n}\n\nint main()\n{\n   SerializeOrder( &quot;TypeEx.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlArrayItemAttribute.Type Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\n\n\n\nPublic Class Group\n    &#39; The Type property instructs the XmlSerializer to accept both\n    &#39; the Person and Manager types in the array. \n    &lt;XmlArrayItem(Type := GetType(Manager)), _\n     XmlArrayItem(Type := GetType(Person))&gt; _\n    Public Staff() As Person\n        \nEnd Class &#39;Group\n\n\nPublic Class Person\n    Public Name As String\nEnd Class \n\n\nPublic Class Manager\n    Inherits Person\n    Public Rank As Integer\nEnd Class \n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeOrder(&quot;TypeEx.xml&quot;)\n    End Sub \n        \n    \n    Public Sub SerializeOrder(filename As String)\n        &#39; Creates an XmlSerializer.\n        Dim xSer As New XmlSerializer(GetType(Group))\n        \n        &#39; Creates the Group object, and two array items.\n        Dim myGroup As New Group()\n        \n        Dim p1 As New Person()\n        p1.Name = &quot;Jacki&quot;\n        Dim p2 As New Manager()\n        \n        p2.Name = &quot;Megan&quot;\n        p2.Rank = 2\n        \n        Dim myStaff() As Person =  {p1, p2}\n        myGroup.Staff = myStaff\n        \n        &#39; Serializes the object, and closes the StreamWriter.\n        Dim writer As New StreamWriter(filename)\n        xSer.Serialize(writer, myGroup)\n    End Sub \nEnd Class &#39;Run\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlArrayItemAttribute.Type Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\npublic class Group\n{\n   /* The Type property instructs the XmlSerializer to accept both\n   the Person and Manager types in the array. */\n   [XmlArrayItem(Type = typeof(Manager)),\n   XmlArrayItem(Type=typeof(Person))]\n   public Person[]Staff;\n}\n\npublic class Person\n{\n   public string Name;\n}\n\npublic class Manager:Person\n{\n   public int Rank;\n}\n\npublic class Run \n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeOrder(&quot;TypeEx.xml&quot;);\n   }\n\n\n   public void SerializeOrder(string filename)\n   {\n      // Creates an XmlSerializer.\n      XmlSerializer xSer = \n      new XmlSerializer(typeof(Group));\n\n      // Creates the Group object, and two array items.\n      Group myGroup = new Group();\n\n      Person p1 = new Person();\n      p1.Name = &quot;Jacki&quot;;\n      Manager p2 = new Manager();\n\n      p2.Name = &quot;Megan&quot;;\n      p2.Rank = 2;\n\n      Person [] myStaff = {p1,p2};\n      myGroup.Staff = myStaff;\n\n      // Serializes the object, and closes the StreamWriter.\n      TextWriter writer = new StreamWriter(filename);\n      xSer.Serialize(writer, myGroup);\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlArrayItemAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlArrayItemAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.DataType\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.ElementName\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.Form\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.IsNullable\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlArrayItemAttribute.Type\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"12dadd1e-3ed1-048f-2ed4-65553d0c4069\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Xml.Serialization\\XmlArrayItemAttribute.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an attribute that specifies the derived types that the  can place in a serialized array.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.XmlArrayItemAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlArrayItemAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlArrayItemAttribute.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.XmlArrayItemAttribute","System.Xml.Serialization.XmlArrayItemAttribute..ctor","System.Xml.Serialization.XmlArrayItemAttribute.DataType","System.Xml.Serialization.XmlArrayItemAttribute.ElementName","System.Xml.Serialization.XmlArrayItemAttribute.Form","System.Xml.Serialization.XmlArrayItemAttribute.IsNullable","System.Xml.Serialization.XmlArrayItemAttribute.Namespace","System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel","System.Xml.Serialization.XmlArrayItemAttribute.Type"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.XmlArrayItemAttribute","System::Xml::Serialization::XmlArrayItemAttribute","System.Xml.Serialization.XmlArrayItemAttribute.#ctor","System::Xml::Serialization::XmlArrayItemAttribute::#ctor","System.Xml.Serialization.XmlArrayItemAttribute.DataType","System::Xml::Serialization::XmlArrayItemAttribute::DataType","System.Xml.Serialization.XmlArrayItemAttribute.ElementName","System::Xml::Serialization::XmlArrayItemAttribute::ElementName","System.Xml.Serialization.XmlArrayItemAttribute.Form","System::Xml::Serialization::XmlArrayItemAttribute::Form","System.Xml.Serialization.XmlArrayItemAttribute.IsNullable","System::Xml::Serialization::XmlArrayItemAttribute::IsNullable","System.Xml.Serialization.XmlArrayItemAttribute.Namespace","System::Xml::Serialization::XmlArrayItemAttribute::Namespace","System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel","System::Xml::Serialization::XmlArrayItemAttribute::NestingLevel","System.Xml.Serialization.XmlArrayItemAttribute.Type","System::Xml::Serialization::XmlArrayItemAttribute::Type"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"12dadd1e-3ed1-048f-2ed4-65553d0c4069","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Xml.Serialization\\XmlArrayItemAttribute.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/XmlArrayItemAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlArrayItemAttribute class | Microsoft Docs","_op_ogTitle":"XmlArrayItemAttribute class","description":"Represents an attribute that specifies the derived types that the  can place in a serialized array.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.XmlArrayItemAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlarrayitemattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlarrayitemattribute","fileRelativePath":"System.Xml.Serialization.XmlArrayItemAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}