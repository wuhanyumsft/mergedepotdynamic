{"content":"    \r\n    <h1 id=\"System_ComponentModel_TypeConverter\">\r\n      <span class=\"lang-csharp\">TypeConverter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class TypeConverter</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TypeConverter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The most common type of converter is one that converts to and from a text representation. The type converter for a class is bound to the class with a <a class=\"xref\" href=\"system.componentmodel.typeconverterattribute\" data-linktype=\"relative-path\">TypeConverterAttribute</a>. Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For general type system purposes, do not access a type converter directly. Instead, access the appropriate converter by using <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>. For more information, see the code examples provided.  </p>\n</div>\n<p> <strong>Note</strong> For XAML purposes, a XAML processor searches for the <a class=\"xref\" href=\"system.componentmodel.typeconverterattribute\" data-linktype=\"relative-path\">TypeConverterAttribute</a> directly, instead of going through <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a>. For cases where you do want a <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <a class=\"xref\" href=\"system.componentmodel.typedescriptor\" data-linktype=\"relative-path\">TypeDescriptor</a> or other reflection and type system support.  </p>\n<p> Classes derived from TypeConverter are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation. Custom type authors that intend to support a type conversion behavior for XAML typically implement a TypeConverter class that supports their own unique <code>ConvertFrom</code> behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <a class=\"xref\" href=\"system.componentmodel.typeconverterattribute\" data-linktype=\"relative-path\">TypeConverterAttribute</a> to the definitions, with the attribute referencing the custom TypeConverter implementation. For more information, see <a href=\"../Topic/Type%20Converters%20for%20XAML%20Overview.md\" data-linktype=\"relative-path\">Type Converters for XAML Overview</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter__ctor\" data-linktype=\"self-bookmark\">TypeConverter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_CanConvertFrom_System_Type_\" data-linktype=\"self-bookmark\">CanConvertFrom(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this converter can convert an object of the given type to the type of this converter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_CanConvertFrom_System_ComponentModel_ITypeDescriptorContext_System_Type_\" data-linktype=\"self-bookmark\">CanConvertFrom(ITypeDescriptorContext,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_CanConvertTo_System_Type_\" data-linktype=\"self-bookmark\">CanConvertTo(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this converter can convert the object to the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_CanConvertTo_System_ComponentModel_ITypeDescriptorContext_System_Type_\" data-linktype=\"self-bookmark\">CanConvertTo(ITypeDescriptorContext,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this converter can convert the object to the specified type, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFrom_System_Object_\" data-linktype=\"self-bookmark\">ConvertFrom(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given value to the type of this converter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFrom_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_Object_\" data-linktype=\"self-bookmark\">ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given object to the type of this converter, using the specified context and culture information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFromInvariantString_System_String_\" data-linktype=\"self-bookmark\">ConvertFromInvariantString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given string to the type of this converter, using the invariant culture.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFromInvariantString_System_ComponentModel_ITypeDescriptorContext_System_String_\" data-linktype=\"self-bookmark\">ConvertFromInvariantString(ITypeDescriptorContext,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given string to the type of this converter, using the invariant culture and the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFromString_System_String_\" data-linktype=\"self-bookmark\">ConvertFromString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified text to an object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFromString_System_ComponentModel_ITypeDescriptorContext_System_String_\" data-linktype=\"self-bookmark\">ConvertFromString(ITypeDescriptorContext,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given text to an object, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertFromString_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_String_\" data-linktype=\"self-bookmark\">ConvertFromString(ITypeDescriptorContext,CultureInfo,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given text to an object, using the specified context and culture information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertTo_System_Object_System_Type_\" data-linktype=\"self-bookmark\">ConvertTo(Object,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given value object to the specified type, using the arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertTo_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_Object_System_Type_\" data-linktype=\"self-bookmark\">ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given value object to the specified type, using the specified context and culture information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertToInvariantString_System_Object_\" data-linktype=\"self-bookmark\">ConvertToInvariantString(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified value to a culture-invariant string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertToInvariantString_System_ComponentModel_ITypeDescriptorContext_System_Object_\" data-linktype=\"self-bookmark\">ConvertToInvariantString(ITypeDescriptorContext,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified value to a culture-invariant string representation, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertToString_System_Object_\" data-linktype=\"self-bookmark\">ConvertToString(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified value to a string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertToString_System_ComponentModel_ITypeDescriptorContext_System_Object_\" data-linktype=\"self-bookmark\">ConvertToString(ITypeDescriptorContext,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given value to a string representation, using the given context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_ConvertToString_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_Object_\" data-linktype=\"self-bookmark\">ConvertToString(ITypeDescriptorContext,CultureInfo,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the given value to a string representation, using the specified context and culture information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_CreateInstance_System_Collections_IDictionary_\" data-linktype=\"self-bookmark\">CreateInstance(IDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Re-creates an <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> given a set of property values for the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_CreateInstance_System_ComponentModel_ITypeDescriptorContext_System_Collections_IDictionary_\" data-linktype=\"self-bookmark\">CreateInstance(ITypeDescriptorContext,IDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an instance of the type that this <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> is associated with, using the specified context, given a set of property values for the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetConvertFromException_System_Object_\" data-linktype=\"self-bookmark\">GetConvertFromException(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an exception to throw when a conversion cannot be performed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetConvertToException_System_Object_System_Type_\" data-linktype=\"self-bookmark\">GetConvertToException(Object,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an exception to throw when a conversion cannot be performed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetCreateInstanceSupported\" data-linktype=\"self-bookmark\">GetCreateInstanceSupported()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether changing a value on this object requires a call to the <span class=\"xref\">stem.ComponentModel.TypeConverter.CreateInstance*</span> method to create a new value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetCreateInstanceSupported_System_ComponentModel_ITypeDescriptorContext_\" data-linktype=\"self-bookmark\">GetCreateInstanceSupported(ITypeDescriptorContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether changing a value on this object requires a call to <span class=\"xref\">stem.ComponentModel.TypeConverter.CreateInstance*</span> to create a new value, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetProperties_System_Object_\" data-linktype=\"self-bookmark\">GetProperties(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of properties for the type of array specified by the value parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetProperties_System_ComponentModel_ITypeDescriptorContext_System_Object_\" data-linktype=\"self-bookmark\">GetProperties(ITypeDescriptorContext,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetProperties_System_ComponentModel_ITypeDescriptorContext_System_Object_System_Attribute___\" data-linktype=\"self-bookmark\">GetProperties(ITypeDescriptorContext,Object,Attribute[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetPropertiesSupported\" data-linktype=\"self-bookmark\">GetPropertiesSupported()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this object supports properties.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetPropertiesSupported_System_ComponentModel_ITypeDescriptorContext_\" data-linktype=\"self-bookmark\">GetPropertiesSupported(ITypeDescriptorContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this object supports properties, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetStandardValues\" data-linktype=\"self-bookmark\">GetStandardValues()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of standard values from the default context for the data type this type converter is designed for.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetStandardValues_System_ComponentModel_ITypeDescriptorContext_\" data-linktype=\"self-bookmark\">GetStandardValues(ITypeDescriptorContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetStandardValuesExclusive\" data-linktype=\"self-bookmark\">GetStandardValuesExclusive()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether the collection of standard values returned from <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> is an exclusive list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetStandardValuesExclusive_System_ComponentModel_ITypeDescriptorContext_\" data-linktype=\"self-bookmark\">GetStandardValuesExclusive(ITypeDescriptorContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether the collection of standard values returned from <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> is an exclusive list of possible values, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetStandardValuesSupported\" data-linktype=\"self-bookmark\">GetStandardValuesSupported()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this object supports a standard set of values that can be picked from a list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_GetStandardValuesSupported_System_ComponentModel_ITypeDescriptorContext_\" data-linktype=\"self-bookmark\">GetStandardValuesSupported(ITypeDescriptorContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_IsValid_System_Object_\" data-linktype=\"self-bookmark\">IsValid(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether the given value object is valid for this type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_IsValid_System_ComponentModel_ITypeDescriptorContext_System_Object_\" data-linktype=\"self-bookmark\">IsValid(ITypeDescriptorContext,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether the given value object is valid for this type and for the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_TypeConverter_SortProperties_System_ComponentModel_PropertyDescriptorCollection_System_String___\" data-linktype=\"self-bookmark\">SortProperties(PropertyDescriptorCollection,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sorts a collection of properties.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter__ctor\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeConverter()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TypeConverter ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_CanConvertFrom_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_CanConvertFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanConvertFrom(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this converter can convert an object of the given type to the type of this converter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanConvertFrom (Type sourceType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the type you want to convert from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this converter can perform the conversion; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>. It never returns <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_CanConvertFrom_System_ComponentModel_ITypeDescriptorContext_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_CanConvertFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanConvertFrom(ITypeDescriptorContext,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the type you want to convert from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this converter can perform the conversion; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method returns <code>false</code>, unless <code>sourceType</code> is an <a class=\"xref\" href=\"system.componentmodel.design.serialization.instancedescriptor\" data-linktype=\"relative-path\">InstanceDescriptor</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_CanConvertTo_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_CanConvertTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanConvertTo(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this converter can convert the object to the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanConvertTo (Type destinationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the type you want to convert to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this converter can perform the conversion; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>destinationType</code> is a string, the default implementation of <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_CanConvertTo_\" data-linktype=\"relative-path\">CanConvertTo</a> always returns <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_CanConvertTo_System_ComponentModel_ITypeDescriptorContext_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_CanConvertTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanConvertTo(ITypeDescriptorContext,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this converter can convert the object to the specified type, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the type you want to convert to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this converter can perform the conversion; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> If <code>destinationType</code> is a string, the default implementation of <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_CanConvertTo_\" data-linktype=\"relative-path\">CanConvertTo</a> always returns <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFrom_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFrom(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given value to the type of this converter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertFrom (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFrom_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFrom_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given object to the type of this converter, using the specified context and culture information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> to use as the current culture.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Custom type authors that intend to support a type conversion behavior for XAML typically implement a <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class that supports ConvertFrom behavior from a string. This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph. Custom types or members of custom types are indicated by applying <a class=\"xref\" href=\"system.componentmodel.typeconverterattribute\" data-linktype=\"relative-path\">TypeConverterAttribute</a> to the definitions, with the attribute referencing the custom <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> implementation.  </p>\n<p> For XAML purposes, you do not typically provide branching implementations based on <code>culture</code>. This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion. For more information, see <a href=\"../Topic/Type%20Converters%20for%20XAML%20Overview.md\" data-linktype=\"relative-path\">Type Converters for XAML Overview</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFromInvariantString_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFromInvariantString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFromInvariantString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given string to the type of this converter, using the invariant culture.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertFromInvariantString (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation always returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFromInvariantString_System_ComponentModel_ITypeDescriptorContext_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFromInvariantString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFromInvariantString(ITypeDescriptorContext,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given string to the type of this converter, using the invariant culture and the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns <code>null</code>.  </p>\n<p> Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFromString_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFromString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFromString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified text to an object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertFromString (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text representation of the object to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The string cannot be converted into the appropriate object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of this function, see the <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFromString_System_ComponentModel_ITypeDescriptorContext_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFromString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFromString(ITypeDescriptorContext,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given text to an object, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns <code>null</code>.  </p>\n<p> Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertFromString_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_String_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertFromString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertFromString(ITypeDescriptorContext,CultureInfo,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given text to an object, using the specified context and culture information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>. If <code>null</code> is passed, the current culture is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An exception is raised if the string cannot be converted into the appropriate object. The default implementation always returns <code>null</code>.  </p>\n<p> Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertTo_System_Object_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTo(Object,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given value object to the specified type, using the arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ConvertTo (object value, Type destinationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to convert the <code>value</code> parameter to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>destinationType</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The most common type to convert to and from is a string object. This implementation calls <a class=\"xref\" href=\"system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> on the object, if the object is valid and if the destination type is a string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertTo_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_Object_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given value object to the specified type, using the specified context and culture information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>. If <code>null</code> is passed, the current culture is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to convert the <code>value</code> parameter to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>destinationType</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The most common types to convert are to and from a string object. This implementation calls <a class=\"xref\" href=\"system.object#System_Object_ToString_\" data-linktype=\"relative-path\">ToString</a> on the object if the object is valid and if the destination type is a string.  </p>\n<p> Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> Custom type authors that intend to support a type conversion behavior for XAML typically implement a <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class that supports <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_ConvertFrom_\" data-linktype=\"relative-path\">ConvertFrom</a> behavior from a string. These type converters might also implement ConvertTo to support serialization back to XAML.  </p>\n<p> Some XAML serialization scenarios cannot be adequately addressed with <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> alone. In these cases, it may be necessary to also define a <a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a> that handles the serialization cases that would otherwise be handled by ConvertTo. For more information, see <a class=\"xref\" href=\"system.windows.markup.valueserializer\" data-linktype=\"relative-path\">ValueSerializer</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertToInvariantString_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertToInvariantString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertToInvariantString(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified value to a culture-invariant string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ConvertToInvariantString (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>context</code> parameter can be used to extract additional information about the environment from which this converter is being invoked. This can be <code>null</code>, so always check. Also, properties on the context object can return <code>null</code>.  </p>\n<p> Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertToInvariantString_System_ComponentModel_ITypeDescriptorContext_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertToInvariantString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertToInvariantString(ITypeDescriptorContext,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified value to a culture-invariant string representation, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertToString_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertToString(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified value to a string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ConvertToString (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example on this function, see the <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertToString_System_ComponentModel_ITypeDescriptorContext_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertToString(ITypeDescriptorContext,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given value to a string representation, using the given context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_ConvertToString_System_ComponentModel_ITypeDescriptorContext_System_Globalization_CultureInfo_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_ConvertToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConvertToString(ITypeDescriptorContext,CultureInfo,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the given value to a string representation, using the specified context and culture information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>. If <code>null</code> is passed, the current culture is assumed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the converted value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_CreateInstance_System_Collections_IDictionary_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_CreateInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstance(IDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Re-creates an <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> given a set of property values for the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object CreateInstance (System.Collections.IDictionary propertyValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that represents a dictionary of new property values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the given <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a>, or <code>null</code> if the object cannot be created. This method always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method for objects that are immutable, but for which you want to provide changeable properties.  </p>\n<p> The dictionary provided by the <code>propertyValues</code> parameter has a series of name/value pairs, one for each property returned from <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_GetProperties_\" data-linktype=\"relative-path\">GetProperties</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_CreateInstance_System_ComponentModel_ITypeDescriptorContext_System_Collections_IDictionary_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_CreateInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateInstance(ITypeDescriptorContext,IDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an instance of the type that this <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> is associated with, using the specified context, given a set of property values for the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> of new property values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing the given <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a>, or <code>null</code> if the object cannot be created. This method always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method for objects that are immutable, but for which you want to provide changeable properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetConvertFromException_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetConvertFromException_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetConvertFromException(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an exception to throw when a conversion cannot be performed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Exception GetConvertFromException (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert, or <code>null</code> if the object is not available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that represents the exception to throw when a conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Automatically thrown by this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetConvertToException_System_Object_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetConvertToException_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetConvertToException(Object,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an exception to throw when a conversion cannot be performed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Exception GetConvertToException (object value, Type destinationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to convert, or <code>null</code> if the object is not available.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the type the conversion was trying to convert to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that represents the exception to throw when a conversion cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Automatically thrown by this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetCreateInstanceSupported\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetCreateInstanceSupported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCreateInstanceSupported()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether changing a value on this object requires a call to the <span class=\"xref\">stem.ComponentModel.TypeConverter.CreateInstance*</span> method to create a new value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GetCreateInstanceSupported ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if changing a property on this object requires a call to <span class=\"xref\">stem.ComponentModel.TypeConverter.CreateInstance*</span> to create a new value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetCreateInstanceSupported_System_ComponentModel_ITypeDescriptorContext_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetCreateInstanceSupported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCreateInstanceSupported(ITypeDescriptorContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether changing a value on this object requires a call to <span class=\"xref\">stem.ComponentModel.TypeConverter.CreateInstance*</span> to create a new value, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if changing a property on this object requires a call to <span class=\"xref\">stem.ComponentModel.TypeConverter.CreateInstance*</span> to create a new value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetProperties_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperties(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of properties for the type of array specified by the value parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that specifies the type of array for which to get properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> with the properties that are exposed for this data type, or <code>null</code> if there are no properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>null</code>.  </p>\n<p> By default, a type does not return properties. An easy implementation of this method can call <a class=\"xref\" href=\"system.componentmodel.typedescriptor#System_ComponentModel_TypeDescriptor_GetProperties_\" data-linktype=\"relative-path\">GetProperties</a> for the correct data type.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetProperties_System_ComponentModel_ITypeDescriptorContext_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperties(ITypeDescriptorContext,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that specifies the type of array for which to get properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> with the properties that are exposed for this data type, or <code>null</code> if there are no properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> As implemented in this class, this method always returns <code>null</code>.  </p>\n<p> By default, a type does not return properties. An easy implementation of this method can call <a class=\"xref\" href=\"system.componentmodel.typedescriptor#System_ComponentModel_TypeDescriptor_GetProperties_\" data-linktype=\"relative-path\">GetProperties</a> for the correct data type.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetProperties_System_ComponentModel_ITypeDescriptorContext_System_Object_System_Attribute___\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperties(ITypeDescriptorContext,Object,Attribute[])</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that specifies the type of array for which to get properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> that is used as a filter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> with the properties that are exposed for this data type, or <code>null</code> if there are no properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetPropertiesSupported\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetPropertiesSupported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPropertiesSupported()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this object supports properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GetPropertiesSupported ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <span class=\"xref\">stem.ComponentModel.TypeConverter.GetProperties*</span> should be called to find the properties of this object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetPropertiesSupported_System_ComponentModel_ITypeDescriptorContext_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetPropertiesSupported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPropertiesSupported(ITypeDescriptorContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this object supports properties, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <span class=\"xref\">stem.ComponentModel.TypeConverter.GetProperties*</span> should be called to find the properties of this object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetStandardValues\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetStandardValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStandardValues()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of standard values from the default context for the data type this type converter is designed for.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ICollection GetStandardValues ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.typeconverter.standardvaluescollection\" data-linktype=\"relative-path\">TypeConverter+StandardValuesCollection</a> containing a standard set of valid values, or <code>null</code> if the data type does not support a standard set of values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetStandardValues_System_ComponentModel_ITypeDescriptorContext_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetStandardValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStandardValues(ITypeDescriptorContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.typeconverter.standardvaluescollection\" data-linktype=\"relative-path\">TypeConverter+StandardValuesCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.typeconverter.standardvaluescollection\" data-linktype=\"relative-path\">TypeConverter+StandardValuesCollection</a> that holds a standard set of valid values, or <code>null</code> if the data type does not support a standard set of values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>, this method always returns <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example on this function, see the <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetStandardValuesExclusive\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetStandardValuesExclusive_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStandardValuesExclusive()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether the collection of standard values returned from <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> is an exclusive list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GetStandardValuesExclusive ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.componentmodel.typeconverter.standardvaluescollection\" data-linktype=\"relative-path\">TypeConverter+StandardValuesCollection</a> returned from <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> is an exhaustive list of possible values; <code>false</code> if other values are possible.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>.  </p>\n<p> If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_GetStandardValues_\" data-linktype=\"relative-path\">GetStandardValues</a> method provides. If the values are exclusive, the list returned by <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_GetStandardValues_\" data-linktype=\"relative-path\">GetStandardValues</a> should not allow these values to be edited.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetStandardValuesExclusive_System_ComponentModel_ITypeDescriptorContext_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetStandardValuesExclusive_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStandardValuesExclusive(ITypeDescriptorContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether the collection of standard values returned from <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> is an exclusive list of possible values, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.componentmodel.typeconverter.standardvaluescollection\" data-linktype=\"relative-path\">TypeConverter+StandardValuesCollection</a> returned from <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> is an exhaustive list of possible values; <code>false</code> if other values are possible.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>.  </p>\n<p> If the list is exclusive, such as in an enumeration data type, then no other values are valid. If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_GetStandardValues_\" data-linktype=\"relative-path\">GetStandardValues</a> method provides. If the values are exclusive, the list returned by <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_GetStandardValues_\" data-linktype=\"relative-path\">GetStandardValues</a> should not allow these values to be edited.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetStandardValuesSupported\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetStandardValuesSupported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStandardValuesSupported()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this object supports a standard set of values that can be picked from a list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GetStandardValuesSupported ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> should be called to find a common set of values the object supports; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_GetStandardValuesSupported_System_ComponentModel_ITypeDescriptorContext_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_GetStandardValuesSupported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStandardValuesSupported(ITypeDescriptorContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <span class=\"xref\">stem.ComponentModel.TypeConverter.GetStandardValues*</span> should be called to find a common set of values the object supports; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>As implemented in this class, this method always returns <code>false</code>.  </p>\n<p> Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_IsValid_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_IsValid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsValid(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether the given value object is valid for this type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsValid (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to test for validity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified value is valid for this object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/net-v40-long-md.md&quot; -->.NET Framework 4<!--END INCLUDE -->, the <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_IsValid_\" data-linktype=\"relative-path\">IsValid</a> method catches exceptions from the <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_CanConvertFrom_\" data-linktype=\"relative-path\">CanConvertFrom</a> and <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_ConvertFrom_\" data-linktype=\"relative-path\">ConvertFrom</a> methods. If the input value type causes <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_CanConvertFrom_\" data-linktype=\"relative-path\">CanConvertFrom</a> to return <code>false</code>, or if the input value causes <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_ConvertFrom_\" data-linktype=\"relative-path\">ConvertFrom</a> to raise an exception, the <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_IsValid_\" data-linktype=\"relative-path\">IsValid</a> method returns <code>false</code>.  </p>\n<p> To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  </p>\n<pre><code class=\"lang-xml\">&lt;configuration&gt;  \n  &lt;appSettings&gt;  \n    &lt;add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; /&gt;  \n  &lt;/appSettings&gt;  \n&lt;/configuration&gt;\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_IsValid_System_ComponentModel_ITypeDescriptorContext_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_IsValid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsValid(ITypeDescriptorContext,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether the given value object is valid for this type and for the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.itypedescriptorcontext\" data-linktype=\"relative-path\">ITypeDescriptorContext</a> that provides a format context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to test for validity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified value is valid for this object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>context</code> parameter to extract additional information about the environment from which this converter is invoked. This parameter can be <code>null</code>, so always check it. Also, properties on the context object can return <code>null</code>.  </p>\n<p> Starting in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/net-v40-long-md.md&quot; -->.NET Framework 4<!--END INCLUDE -->, the IsValid method catches exceptions from the <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_CanConvertFrom_\" data-linktype=\"relative-path\">CanConvertFrom</a> and <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_ConvertFrom_\" data-linktype=\"relative-path\">ConvertFrom</a> methods. If the input value type causes <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_CanConvertFrom_\" data-linktype=\"relative-path\">CanConvertFrom</a> to return <code>false</code>, or if the input value causes <a class=\"xref\" href=\"system.componentmodel.typeconverter#System_ComponentModel_TypeConverter_ConvertFrom_\" data-linktype=\"relative-path\">ConvertFrom</a> to raise an exception, the IsValid method returns <code>false</code>.  </p>\n<p> To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.  </p>\n<pre><code class=\"lang-xml\">&lt;configuration&gt;  \n  &lt;appSettings&gt;  \n    &lt;add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; /&gt;  \n  &lt;/appSettings&gt;  \n&lt;/configuration&gt;\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of this function, see the <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> class.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_TypeConverter_SortProperties_System_ComponentModel_PropertyDescriptorCollection_System_String___\">\r\n    \r\n            <a id=\"System_ComponentModel_TypeConverter_SortProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortProperties(PropertyDescriptorCollection,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Sorts a collection of properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>props</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> that has the properties to sort.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>names</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of names in the order you want the properties to appear in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> that contains the sorted properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All properties in the collection that are not already in the array of names are added alphabetically to the end. If the <code>names</code> parameter is an empty array or <code>null</code>, all the properties in the collection are sorted alphabetically.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.TypeConverter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.TypeConverter.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.CanConvertFrom\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.CanConvertTo\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.ConvertFrom\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.ConvertFromInvariantString\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.ConvertFromString\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.ConvertTo\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.ConvertToInvariantString\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.ConvertToString\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.CreateInstance\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetConvertFromException\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetConvertToException\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetCreateInstanceSupported\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetProperties\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetPropertiesSupported\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetStandardValues\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetStandardValuesExclusive\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.GetStandardValuesSupported\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.IsValid\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.TypeConverter.SortProperties\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"26d4c447-7343-368b-f06a-a4a77635f875\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.ComponentModel\\TypeConverter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.TypeConverter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.TypeConverter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.TypeConverter.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.TypeConverter","System.ComponentModel.TypeConverter..ctor","System.ComponentModel.TypeConverter.CanConvertFrom","System.ComponentModel.TypeConverter.CanConvertTo","System.ComponentModel.TypeConverter.ConvertFrom","System.ComponentModel.TypeConverter.ConvertFromInvariantString","System.ComponentModel.TypeConverter.ConvertFromString","System.ComponentModel.TypeConverter.ConvertTo","System.ComponentModel.TypeConverter.ConvertToInvariantString","System.ComponentModel.TypeConverter.ConvertToString","System.ComponentModel.TypeConverter.CreateInstance","System.ComponentModel.TypeConverter.GetConvertFromException","System.ComponentModel.TypeConverter.GetConvertToException","System.ComponentModel.TypeConverter.GetCreateInstanceSupported","System.ComponentModel.TypeConverter.GetProperties","System.ComponentModel.TypeConverter.GetPropertiesSupported","System.ComponentModel.TypeConverter.GetStandardValues","System.ComponentModel.TypeConverter.GetStandardValuesExclusive","System.ComponentModel.TypeConverter.GetStandardValuesSupported","System.ComponentModel.TypeConverter.IsValid","System.ComponentModel.TypeConverter.SortProperties"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.TypeConverter","System::ComponentModel::TypeConverter","System.ComponentModel.TypeConverter.#ctor","System::ComponentModel::TypeConverter::#ctor","System.ComponentModel.TypeConverter.CanConvertFrom","System::ComponentModel::TypeConverter::CanConvertFrom","System.ComponentModel.TypeConverter.CanConvertTo","System::ComponentModel::TypeConverter::CanConvertTo","System.ComponentModel.TypeConverter.ConvertFrom","System::ComponentModel::TypeConverter::ConvertFrom","System.ComponentModel.TypeConverter.ConvertFromInvariantString","System::ComponentModel::TypeConverter::ConvertFromInvariantString","System.ComponentModel.TypeConverter.ConvertFromString","System::ComponentModel::TypeConverter::ConvertFromString","System.ComponentModel.TypeConverter.ConvertTo","System::ComponentModel::TypeConverter::ConvertTo","System.ComponentModel.TypeConverter.ConvertToInvariantString","System::ComponentModel::TypeConverter::ConvertToInvariantString","System.ComponentModel.TypeConverter.ConvertToString","System::ComponentModel::TypeConverter::ConvertToString","System.ComponentModel.TypeConverter.CreateInstance","System::ComponentModel::TypeConverter::CreateInstance","System.ComponentModel.TypeConverter.GetConvertFromException","System::ComponentModel::TypeConverter::GetConvertFromException","System.ComponentModel.TypeConverter.GetConvertToException","System::ComponentModel::TypeConverter::GetConvertToException","System.ComponentModel.TypeConverter.GetCreateInstanceSupported","System::ComponentModel::TypeConverter::GetCreateInstanceSupported","System.ComponentModel.TypeConverter.GetProperties","System::ComponentModel::TypeConverter::GetProperties","System.ComponentModel.TypeConverter.GetPropertiesSupported","System::ComponentModel::TypeConverter::GetPropertiesSupported","System.ComponentModel.TypeConverter.GetStandardValues","System::ComponentModel::TypeConverter::GetStandardValues","System.ComponentModel.TypeConverter.GetStandardValuesExclusive","System::ComponentModel::TypeConverter::GetStandardValuesExclusive","System.ComponentModel.TypeConverter.GetStandardValuesSupported","System::ComponentModel::TypeConverter::GetStandardValuesSupported","System.ComponentModel.TypeConverter.IsValid","System::ComponentModel::TypeConverter::IsValid","System.ComponentModel.TypeConverter.SortProperties","System::ComponentModel::TypeConverter::SortProperties"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"26d4c447-7343-368b-f06a-a4a77635f875","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.ComponentModel\\TypeConverter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel/TypeConverter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TypeConverter class | Microsoft Docs","_op_ogTitle":"TypeConverter class","description":"Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.\n","toc_asset_id":"_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.TypeConverter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.typeconverter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.typeconverter","fileRelativePath":"System.ComponentModel.TypeConverter.html"},"themesRelativePathToOutputRoot":"_themes/"}