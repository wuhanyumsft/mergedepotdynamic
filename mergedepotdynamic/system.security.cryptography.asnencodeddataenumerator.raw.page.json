{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_AsnEncodedDataEnumerator\">\r\n      <span class=\"lang-csharp\">AsnEncodedDataEnumerator</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the ability to navigate through an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class AsnEncodedDataEnumerator : System.Collections.IEnumerator</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AsnEncodedDataEnumerator</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class implements the <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedDataEnumerator_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedDataEnumerator_MoveNext\" data-linktype=\"self-bookmark\">MoveNext()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Advances to the next <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedDataEnumerator_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets an enumerator to its initial position.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_AsnEncodedDataEnumerator_System_Collections_IEnumerator_Current\" data-linktype=\"self-bookmark\">IEnumerator.Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_Current\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.AsnEncodedData Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an enumerator is created, the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddataenumerator#System_Security_Cryptography_AsnEncodedDataEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> method must be called to advance the enumerator to the first element of the collection before reading the value of the Current property; otherwise, Current returns <code>null</code> or throws an exception.  </p>\n<p> Current also returns <code>null</code> or throws an exception if the last call to <a class=\"xref\" href=\"system.security.cryptography.asnencodeddataenumerator#System_Security_Cryptography_AsnEncodedDataEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>, which indicates that the end of the collection has been reached.  </p>\n<p> Current does not move the position of the enumerator, and consecutive calls to Current return the same object until <a class=\"xref\" href=\"system.security.cryptography.asnencodeddataenumerator#System_Security_Cryptography_AsnEncodedDataEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> is called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddataenumerator\" data-linktype=\"relative-path\">AsnEncodedDataEnumerator</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_MoveNext\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_MoveNext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MoveNext()</div>        \r\n          </div>\r\n    \r\n            <p>Advances to the next <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MoveNext ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if the enumerator was successfully advanced to the next element; <code>false</code>, if the enumerator has passed the end of the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The collection was modified after the enumerator was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an enumerator is created, it is positioned before the first element of the collection, and the first call to the MoveNext method moves the enumerator over the first element of the collection. Subsequent calls to MoveNext advance the enumerator past subsequent elements.  </p>\n<p> After the end of the collection is passed, calls to MoveNext return <code>false</code>.  </p>\n<p> An enumerator is valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator becomes invalid and the next call to MoveNext can throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddataenumerator\" data-linktype=\"relative-path\">AsnEncodedDataEnumerator</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_Reset\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Sets an enumerator to its initial position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The collection was modified after the enumerator was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The initial position of an enumerator is before the first element in the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator becomes invalid, and the next call to the Reset method throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.asnencodeddataenumerator\" data-linktype=\"relative-path\">AsnEncodedDataEnumerator</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.AsnEncodedData#1\">#using &lt;System.dll&gt;\n#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nusing namespace System::Security::Cryptography::X509Certificates;\n\nint main()\n{\n   \n   //The following example demonstrates the usage of the AsnEncodedData classes.\n   // Asn encoded data is read from the extensions of an X509 certificate.\n   try\n   {\n      \n      // Open the certificate store.\n      X509Store^ store = gcnew X509Store( L&quot;MY&quot;,StoreLocation::CurrentUser );\n      store-&gt;Open( static_cast&lt;OpenFlags&gt;(OpenFlags::ReadOnly | OpenFlags::OpenExistingOnly) );\n      X509Certificate2Collection^ collection = dynamic_cast&lt;X509Certificate2Collection^&gt;(store-&gt;Certificates);\n      X509Certificate2Collection^ fcollection = dynamic_cast&lt;X509Certificate2Collection^&gt;(collection-&gt;Find( X509FindType::FindByTimeValid, DateTime::Now, false ));\n      \n      // Select one or more certificates to display extensions information.\n      X509Certificate2Collection^ scollection = X509Certificate2UI::SelectFromCollection(fcollection, L&quot;Certificate Select&quot;,L&quot;Select certificates from the following list to get extension information on that certificate&quot;,X509SelectionFlag::MultiSelection);\n      \n      // Create a new AsnEncodedDataCollection object.\n      AsnEncodedDataCollection^ asncoll = gcnew AsnEncodedDataCollection;\n      for ( int i = 0; i &lt; scollection-&gt;Count; i++ )\n      {\n         \n         // Display certificate information.\n         Console::ForegroundColor = ConsoleColor::Red;\n         Console::WriteLine( L&quot;Certificate name: {0}&quot;, scollection[i]-&gt;GetName() );\n         Console::ResetColor();\n         \n         // Display extensions information.\n         System::Collections::IEnumerator^ myEnum = scollection[i]-&gt;Extensions-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            X509Extension^ extension = safe_cast&lt;X509Extension ^&gt;(myEnum-&gt;Current);\n            \n            // Create an AsnEncodedData object using the extensions information.\n            AsnEncodedData^ asndata = gcnew AsnEncodedData( extension-&gt;Oid,extension-&gt;RawData );\n            Console::ForegroundColor = ConsoleColor::Green;\n            Console::WriteLine( L&quot;Extension type: {0}&quot;, extension-&gt;Oid-&gt;FriendlyName );\n            Console::WriteLine( L&quot;Oid value: {0}&quot;, asndata-&gt;Oid-&gt;Value );\n            Console::WriteLine( L&quot;Raw data length: {0} {1}&quot;, asndata-&gt;RawData-&gt;Length, Environment::NewLine );\n            Console::ResetColor();\n            Console::WriteLine( asndata-&gt;Format(true) );\n            Console::WriteLine( Environment::NewLine );\n            \n            // Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n            asncoll-&gt;Add( asndata );\n         }\n\n         Console::WriteLine( Environment::NewLine );\n\n      }\n      Console::ForegroundColor = ConsoleColor::Red;\n      Console::WriteLine( L&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll-&gt;Count, Environment::NewLine );\n      Console::ResetColor();\n      store-&gt;Close();\n      \n      //Create an enumerator for moving through the collection.\n      AsnEncodedDataEnumerator^ asne = asncoll-&gt;GetEnumerator();\n      \n      //You must execute a MoveNext() to get to the first item in the collection.\n      asne-&gt;MoveNext();\n      \n      // Write out AsnEncodedData in the collection.\n      Console::ForegroundColor = ConsoleColor::Blue;\n      Console::WriteLine( L&quot;First AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      asne-&gt;MoveNext();\n      Console::ForegroundColor = ConsoleColor::DarkBlue;\n      Console::WriteLine( L&quot;Second AsnEncodedData in the collection: {0}&quot;, asne-&gt;Current-&gt;Format(true) );\n      Console::ResetColor();\n      \n      //Return index in the collection to the beginning.\n      asne-&gt;Reset();\n   }\n   catch ( CryptographicException^ ) \n   {\n      Console::WriteLine( L&quot;Information could not be written out for this certificate.&quot; );\n   }\n\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.AsnEncodedData#1\">using System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.X509Certificates;\n\nclass AsnEncodedDataSample\n{\n\tstatic void Main()\n\t{\t\t\n\t\t//The following example demonstrates the usage the AsnEncodedData classes.\n\t\t// Asn encoded data is read from the extensions of an X509 certificate.\n\t\ttry\n\t\t{\n\t\t\t// Open the certificate store.\n\t\t\tX509Store store = new X509Store(&quot;MY&quot;, StoreLocation.CurrentUser);\n\t\t\tstore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\t\t\tX509Certificate2Collection collection = (X509Certificate2Collection)store.Certificates;\n\t\t\tX509Certificate2Collection fcollection = (X509Certificate2Collection)collection.Find(X509FindType.FindByTimeValid, DateTime.Now, false);\n\t\t\t// Select one or more certificates to display extensions information.\n\t\t\tX509Certificate2Collection scollection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection);\n\n\t\t\t// Create a new AsnEncodedDataCollection object.\n\t\t\tAsnEncodedDataCollection asncoll = new AsnEncodedDataCollection();\n\t\t\tfor (int i = 0; i &lt; scollection.Count; i++)\n\t\t\t{\n\t\t\t\t// Display certificate information.\n\t\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\t\tConsole.WriteLine(&quot;Certificate name: {0}&quot;, scollection[i].GetName());\n\t\t\t\tConsole.ResetColor();\n\t\t\t\t// Display extensions information.\n\t\t\t\tforeach (X509Extension extension in scollection[i].Extensions)\n\t\t\t\t{\n\t\t\t\t\t// Create an AsnEncodedData object using the extensions information.\n\t\t\t\t\tAsnEncodedData asndata = new AsnEncodedData(extension.Oid, extension.RawData);\n\t\t\t\t\tConsole.ForegroundColor = ConsoleColor.Green;\n\t\t\t\t\tConsole.WriteLine(&quot;Extension type: {0}&quot;, extension.Oid.FriendlyName);\n\t\t\t\t\tConsole.WriteLine(&quot;Oid value: {0}&quot;,asndata.Oid.Value);\n\t\t\t\t\tConsole.WriteLine(&quot;Raw data length: {0} {1}&quot;, asndata.RawData.Length, Environment.NewLine);\n\t\t\t\t\tConsole.ResetColor();\n\t\t\t\t\tConsole.WriteLine(asndata.Format(true));\n\t\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t\t\t// Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n\t\t\t\t\tasncoll.Add(asndata);\n\t\t\t\t}\n\t\t\t\tConsole.WriteLine(Environment.NewLine);\n\t\t\t}\n\t\t\tConsole.ForegroundColor = ConsoleColor.Red;\n\t\t\tConsole.WriteLine(&quot;Number of AsnEncodedData items in the collection: {0} {1}&quot;, asncoll.Count, Environment.NewLine);\n\t\t\tConsole.ResetColor();\n\n\t\t\tstore.Close();\n\t\t\t//Create an enumerator for moving through the collection.\n\t\t\tAsnEncodedDataEnumerator asne = asncoll.GetEnumerator();\n\t\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\t\tasne.MoveNext();\n\t\t\t// Write out AsnEncodedData in the collection.\n\t\t\tConsole.ForegroundColor = ConsoleColor.Blue;\n\t\t\tConsole.WriteLine(&quot;First AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\n\t\t\tasne.MoveNext();\n\t\t\tConsole.ForegroundColor = ConsoleColor.DarkBlue;\n\t\t\tConsole.WriteLine(&quot;Second AsnEncodedData in the collection: {0}&quot;, asne.Current.Format(true));\n\t\t\tConsole.ResetColor();\n\t\t\t//Return index in the collection to the beginning.\n\t\t\tasne.Reset();\n\t\t}\n\t\tcatch (CryptographicException)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Information could not be written out for this certificate.&quot;);\n\t\t}\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.AsnEncodedData#1\">Imports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.X509Certificates\n\n\n\nClass AsnEncodedDataSample\n   Shared msg As String\n   Shared Sub Main()\n      &#39;The following example demonstrates the usage the AsnEncodedData classes.\n      &#39; Asn encoded data is read from the extensions of an X509 certificate.\n      Try\n         &#39; Open the certificate store.\n         Dim store As New X509Store(&quot;MY&quot;, StoreLocation.CurrentUser)\n         store.Open((OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly))\n         Dim collection As X509Certificate2Collection = CType(store.Certificates, X509Certificate2Collection)\n         Dim fcollection As X509Certificate2Collection = CType(collection.Find(X509FindType.FindByTimeValid, DateTime.Now, False), X509Certificate2Collection)\n         &#39; Select one or more certificates to display extensions information.\n         Dim scollection As X509Certificate2Collection = X509Certificate2UI.SelectFromCollection(fcollection, &quot;Certificate Select&quot;, &quot;Select certificates from the following list to get extension information on that certificate&quot;, X509SelectionFlag.MultiSelection)\n         \n         &#39; Create a new AsnEncodedDataCollection object.\n         Dim asncoll As New AsnEncodedDataCollection()\n         Dim i As Integer\n         For i = 0 To scollection.Count - 1\n            &#39; Display certificate information.\n\t    msg = &quot;Certificate name: &quot;&amp; scollection(i).GetName()\n            MsgBox(msg)\n\n            &#39; Display extensions information.\n            Dim extension As X509Extension\n            For Each extension In  scollection(i).Extensions\n               &#39; Create an AsnEncodedData object using the extensions information.\n               Dim asndata As New AsnEncodedData(extension.Oid, extension.RawData)\n\t       msg = &quot;Extension type: &quot; &amp; extension.Oid.FriendlyName &amp; Environment.NewLine &amp; &quot;Oid value: &quot; &amp; asndata.Oid.Value _\n\t\t&amp; Environment.NewLine &amp; &quot;Raw data length: &quot; &amp; asndata.RawData.Length &amp; Environment.NewLine _\n\t\t&amp; asndata.Format(True) &amp; Environment.NewLine\n               MsgBox(msg)\n\t\t\n               &#39; Add the AsnEncodedData object to the AsnEncodedDataCollection object.\n               asncoll.Add(asndata)\n            Next extension\n         Next i\n\t msg = &quot;Number of AsnEncodedData items in the collection: &quot; &amp; asncoll.Count\n         MsgBox(msg)         \n         store.Close()\n\n         &#39;Create an enumerator for moving through the collection.\n         Dim asne As AsnEncodedDataEnumerator = asncoll.GetEnumerator()\n         &#39;You must execute a MoveNext() to get to the first item in the collection.\n         asne.MoveNext()\n         &#39; Write out AsnEncodedData in the collection.\n\t msg = &quot;First AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n\t\n         \n         asne.MoveNext()\n\t msg = &quot;Second AsnEncodedData in the collection: &quot; &amp; asne.Current.Format(True)\n\t MsgBox(msg)\n        \n         &#39;Return index in the collection to the beginning.\n         asne.Reset()\n      Catch \n         MsgBox(&quot;Information could not be written out for this certificate.&quot;)\n      End Try\n   End Sub &#39;Main\nEnd Class &#39;AsnEncodedDataSample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_System_Collections_IEnumerator_Current\">\r\n    \r\n            <a id=\"System_Security_Cryptography_AsnEncodedDataEnumerator_System_Collections_IEnumerator_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerator.Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object in an <a class=\"xref\" href=\"system.security.cryptography.asnencodeddatacollection\" data-linktype=\"relative-path\">AsnEncodedDataCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.IEnumerator.Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.security.cryptography.asnencodeddata\" data-linktype=\"relative-path\">AsnEncodedData</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.AsnEncodedDataEnumerator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.AsnEncodedDataEnumerator.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedDataEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedDataEnumerator.Current\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedDataEnumerator.Reset\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.AsnEncodedDataEnumerator.IEnumerator.Current\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"306c2a4e-1ee7-d327-6eb8-20578d202821\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the ability to navigate through an  object. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.AsnEncodedDataEnumerator\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.AsnEncodedDataEnumerator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.AsnEncodedDataEnumerator.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.AsnEncodedDataEnumerator","System.Security.Cryptography.AsnEncodedDataEnumerator.Current","System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext","System.Security.Cryptography.AsnEncodedDataEnumerator.Reset","System.Security.Cryptography.AsnEncodedDataEnumerator.IEnumerator.Current"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.AsnEncodedDataEnumerator","System::Security::Cryptography::AsnEncodedDataEnumerator","System.Security.Cryptography.AsnEncodedDataEnumerator.Current","System::Security::Cryptography::AsnEncodedDataEnumerator::Current","System.Security.Cryptography.AsnEncodedDataEnumerator.MoveNext","System::Security::Cryptography::AsnEncodedDataEnumerator::MoveNext","System.Security.Cryptography.AsnEncodedDataEnumerator.Reset","System::Security::Cryptography::AsnEncodedDataEnumerator::Reset","System.Security.Cryptography.AsnEncodedDataEnumerator.System#Collections#IEnumerator#Current","System::Security::Cryptography::AsnEncodedDataEnumerator::System#Collections#IEnumerator#Current"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"306c2a4e-1ee7-d327-6eb8-20578d202821","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/AsnEncodedDataEnumerator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AsnEncodedDataEnumerator class | Microsoft Docs","_op_ogTitle":"AsnEncodedDataEnumerator class","description":"Provides the ability to navigate through an  object. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.AsnEncodedDataEnumerator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.asnencodeddataenumerator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.asnencodeddataenumerator","fileRelativePath":"System.Security.Cryptography.AsnEncodedDataEnumerator.html"},"themesRelativePathToOutputRoot":"_themes/"}